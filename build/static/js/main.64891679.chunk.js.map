{"version":3,"sources":["components/auxiliares/GlobalStyles.js","theme/shadows.js","theme/typography.js","theme/index.js","components/auxiliares/Logo.js","components/auxiliares/sideBarOptions.js","components/auxiliares/DashboardNavbar.js","components/auxiliares/NavItem.js","components/auxiliares/DashboardSidebar.js","components/auxiliares/DashboardLayout.js","components/auxiliares/MainNavbar.js","components/auxiliares/MainLayout.js","utils/api.js","pages/Login.js","pages/NotFound.js","utils/utils.js","utils/usePrompt.js","components/dolar/FormDolar.js","components/dolar/GrillaDolar.js","pages/Dolar.js","components/cac/FormCac.js","components/cac/GrillaCac.js","pages/Cac.js","components/rubro/FormRubro.js","components/rubro/GrillaRubro.js","pages/Rubro.js","components/rubro/FormSubRubro.js","components/rubro/GrillaSubRubro.js","pages/SubRubro.js","components/banco/FormBanco.js","components/banco/GrillaBanco.js","pages/Banco.js","components/banco/FormCuentaBanco.js","components/banco/GrillaCuentaBanco.js","pages/CuentaBanco.js","components/usuarios/FormUsuario.js","components/usuarios/GrillaUsuario.js","pages/Usuarios.js","components/proveedores/FormProveedor.js","components/proveedores/GrillaProveedor.js","pages/Proveedores.js","components/persona/ManipularPersona.js","components/persona/GrillaPersona.js","pages/Persona.js","components/empresa/ManipularEmpresa.js","components/empresa/GrillaEmpresa.js","pages/Empresa.js","components/fideicomiso/ManipularFideicomiso.js","components/fideicomiso/GrillaFideicomiso.js","pages/Fideicomiso.js","components/fideicomiso/DatosPrincipalesFideicomiso.js","components/detalleFideicomiso/ManipularDetalleFideicomiso.js","components/detalleFideicomiso/GrillaDetalleFideicomiso.js","pages/DetalleFideicomiso.js","components/OP/ManipularOP.js","components/reportes/orden_de_pago/tablaFacturas.js","components/reportes/orden_de_pago/tablaTEC.js","components/reportes/orden_de_pago/tablaADM.js","components/reportes/orden_de_pago/tablaPagos.js","components/reportes/orden_de_pago/tablaPie.js","components/reportes/orden_de_pago/orden_de_pago.js","components/OP/GrillaOP.js","pages/OP.js","components/OP/GrillaOpAuth.js","pages/AuthAdmOP.js","pages/AuthObraOP.js","components/detalleOP/AgregarFactura.js","components/detalleOP/FormDetalleOP.js","components/detalleOP/GrillaDetalleOP.js","pages/DetalleOP.js","components/factura/FormFactura.js","components/factura/GrillaFactura.js","pages/Factura.js","pages/OT.js","App.js","utils/useAuth.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","array","obj","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","Logo","idSociety","alt","src","process","logo","sideBarOptions","path","icon","CreditCard","title","acceso","ListAlt","LocalShipping","Apartment","MenuBook","TrendingUp","AttachMoney","People","DashboardNavbar","setisMobileNavOpen","setLoggedUser","loggedUser","user","avatar","navigate","useNavigate","pathname","useLocation","lastPartOfPath","split","length","logOut","nameOfPage","find","option","nombre","AppBar","elevation","Toolbar","to","style","marginLeft","Typography","align","color","variant","replace","Box","sx","flexGrow","IconButton","Avatar","component","Link","cursor","display","md","lg","onClick","ExitToApp","NavItem","href","Icon","rest","location","active","matchPath","end","ListItem","disableGutters","py","Button","RouterLink","justifyContent","textTransform","mr","size","DashboardSidebar","isMobileNavOpen","content","flexDirection","p","List","arrMenu","map","item","Drawer","xs","anchor","onClose","open","PaperProps","top","arr","forEach","indexOf","trim","undefined","push","splice","DashboardLayoutRoot","styled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","useState","MainNavbar","props","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","apiServerUrl","getMethod","url","axios","get","data","postMethod","newData","post","deleteMethod","infoOfElementToDelete","delete","Login","setIdSociety","societyName","useParams","localStorage","setItem","isAlertOpen","setIsAlertOpen","useEffect","societyStateObjectSetter","bancos","useQuery","id","JSON","stringify","cuentasbanco","Helmet","onChangeClientState","nombreComercial","Container","maxWidth","enableReinitialize","initialValues","email","dominio","password","onSubmit","values","actions","userCheck","estados","descripcion","resetForm","handleSubmit","TextField","fullWidth","label","name","onBlur","handleBlur","onChange","handleChange","value","autoComplete","type","Alert","severity","disabled","isSubmitting","nameToId","societyData","nombreSociedad","removeItem","mail","pass","loggedUserInfo","NotFound","textAlign","marginTop","isValidDate","d","f","Date","isNaN","getTime","mostrarFecha","fecha","toLocaleDateString","timeZone","mostrarFechaMesTXT","getDate","month","getFullYear","yearMonthDayString","getMonth","toString","padStart","isNumberUsedDig","endpoint","empresaId","numero","dig","Q_DIGITOS_COM_FACTURA","num","slice","isDateUsed","date","usePrompt","isPromptOpen","setIsPromptOpen","Prompt","ok","action","message","Dialog","handleClose","DialogTitle","DialogActions","handleActionAndClose","autoFocus","FormDolar","queryClient","useQueryClient","useMutation","newDolar","onMutate","creador","invalidateQueries","getQueryData","prevData","setQueryData","onError","err","context","onSettled","addDolar","mutate","mep","BCRA","setSubmitting","setFieldValue","Picker","as","maxLength","event","onlyNumbers","typeOfData","preventDefault","target","test","field","form","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","renderInput","params","required","columns","setRowIdToDelete","headerName","headerAlign","valueFormatter","preProcessEditCellProps","editable","Intl","NumberFormat","minimumFractionDigits","format","Number","renderCell","deleteId","row","Delete","e","GrillaDolar","rowIdToDelete","dolarInformation","isLoading","error","idDolar","cancelQueries","filter","dolar","eliminate","modifyData","rows","blue","onCellEditCommit","pageSize","disableSelectionOnClick","autoHeight","scrollbarSize","components","CustomToolbar","Dolar","minHeight","pt","FormCac","newCac","addCac","estimado","definitivo","year","GrillaCac","cacInformation","idCac","cac","Cac","FormRubro","newRubro","addRubro","rubro","GrillaRubro","rubroInformation","idRubro","onRowDoubleClick","compone","Rubro","FormSubRubro","newSubRubro","addSubRubro","subRubro","GrillaSubRubro","subrubroInformation","idSubRubro","subrubro","SubRubro","parseInt","FormBanco","newBanco","addBanco","banco","IrDetalleOP_1","GrillaBanco","bancoInformation","idBanco","irDetalle","descripcionLarga","onIrDetalle","sendRow","Banco","FormCuentaBanco","newCuentaBanco","addCuentaBanco","cuentaBanco","GrillaCuentaBanco","cuentaBancoInformation","idCuentaBanco","cuentabanco","CuentaBanco","FormUsuario","newUsuario","addUsuario","Passformat","rol_descripcion","renderEditCell","ComboBox","roles","GrillaUsuario","usuarioInformation","idUsuario","usuario","rolId","rol","density","api","selectedRol","setSelectedRol","Autocomplete","newValue","setEditCellValue","commitCellChange","setCellMode","options","isOptionEqualToValue","op","val","getOptionLabel","Usuarios","FormProveedor","newProveedor","addProveedor","razonSocial","CUIT","rubros","subRubros","join","console","log","mostrarCUIT","ComboBoxSub","GrillaProveedor","proveedorInformation","idProveedor","proveedor","rubroID","rubroId","subrubroID","subrubroId","telefono","CBU","nroCuenta","enviar_OP_auto","selectedRubro","setSelectedRubro","subR","selectedsubRubro","setSelectedsubRubro","Proveedores","Hidden","smUp","ManipularPersona","onSuccess","refetchQueries","checkName","Boolean","deleteRow","onDelete","toast","closeToast","m","GrillaPersona","el","onEditCellChange","Persona","ManipularEmpresa","checkCuit","cuit","GrillaEmpresa","Empresa","ManipularFideicomiso","fechaInicio","fechaFin","checkIfNameExists","setColor","passedData","colorElegido","ColorPicker","originalColor","css","colorOptions","GrillaFideicomiso","fideicomisoInformation","idFideicomiso","fideicomiso","cloud","previousStateColor","renderOption","c","Fideicomiso","createFilterOptions","DatosPrincipalesFideicomiso","selectedFideicomisoData","managerId","setManagerId","personaId","isDialogOpen","setIsDialogOpen","contactInfo","directionInfo","localizacionId","peopleInfo","setManagerInFideicomiso","addNewPerson","contacto","direccion","nameFormatter","AlertDialog","rowHeight","headerHeight","hideFooter","onCellDoubleClick","transform","DialogContent","Select","closeDialog","newName","inputValue","filterOptions","filtered","isExisting","some","selectOnFocus","clearOnBlur","handleHomeEndKeys","freeSolo","ManipularDetalleFideicomiso","typesOfProducts","initialData","codigo","addProduct","typeInForm","setTypeInForm","code","description","fideicomisoId","tipo","GrillaDetalleFideicomiso","products","deleteProduct","metros","precioULT","sortModel","sort","DetalleFideicomiso","nombreFideicomiso","ManipularOP","fideicomisos","proveedores","ddfacturas","addOP","fideInForm","setFideInForm","rsInForm","setRsInForm","factInForm","setFactInForm","setOpen","montoTotal","fechaIngreso","empresa","subRubroId","facturaId","factura","disablePortal","Collapse","in","mb","styles","StyleSheet","create","container","borderBottomWidth","alignItems","fontStyle","borderRightWidth","qty","paddingRight","rate","amount","amountRow","tablaFacturas","dataOP","dataFacturas","flexWrap","borderWidth","borderColor","borderBottomColor","color2","borderRightColor","empresas","detalle","txtOC","espacio","col1","col2","col3","tablaTEC","auth_obra","usuarios","rowbis","col1bis","col2bis","col3bis","tablaADM","monto","RET_SUSS","RET_GAN","RET_IVA","monto_a_pagar","auth_adm","col4","col5","rowf","descriptionf","totalf","tablaPagos","arr_id","arr_banco","arr_cid","arr_cuenta","OPpago","banco1","nro1","descri1","modo1","fecha1","monto1","banco2","nro2","descri2","modo2","fecha2","monto2","banco3","nro3","descri3","modo3","fecha3","monto3","banco4","nro4","descri4","modo4","fecha4","monto4","tableContainer","tablaPie","page","fontFamily","lineHeight","marginRight","titleContainer","reportTitle","reportTitleFide","subreportTitle","saltolinea","invoiceNoContainer","invoiceDateContainer","invoiceDate","parse","getItem","i","bancoId","j","orden_de_pago","idSociedad","ancho_logo","titulo","color3","uri","method","headers","createdAt","miOP","fa","puedeEditar","IrDetalleOP_2","ComboBoxEst","misFacturas","hide","ComboBoxRet","retenciones","NonObraAuthRow","NonAdmAuthRow","ComboBoxFon","fondos_s","DescargarPDF","EnviarMail","confirmada","GrillaOP","result","accesoOP","opInformation","grfacturas","estadoOP","idOP","getPdfBlob","cargar_y_subir_OP","pdf","NewDocument","toBlob","blobPdf","formData","FormData","append","authOBRA","tipoAutorizacion","opid","nonAuthObra","authADM","nonAuthAdm","mailTo","mailOP","mailConstructora","enviarCorreo","OP","moneda","estadoRET","retencion","estado","fondos","archivada","enviada","apr_obra","apr_adm","OPId","aprobado_obra","aprobado_adm","fondos_","formaPago","onAuthObra","onAuthAdm","onEnviar","cargarOP","esEditable","isCellEditable","csvOptions","fields","selectedRet","selectedEst","defaultValue","InputProps","readOnly","selectedFon","authRow","toUpperCase","nombrePDF","notify","setTimeout","document","fileName","blob","loading","enviar","authId","formaPagos","GrillaOpAuth","str","documento","authFila","AuthAdmOP","AuthObraOP","AgregarFactura","facturas","addFactura","FormDetalleOP","fetchPolicy","formOP","refetch","newOP","updateOP","isConfirmOP","setIsConfirmOP","verBotonDesconfirmar","flagPago","Grid","spacing","sm","handleModification","Switch","confirmarOP","defaultChecked","cuenta","valorCombo","regex","flag","valor","verEliminar","link","rel","DeleteRow","GrillaDetalleOP","selectedFacturaData","OPs","link2","fechaVTO","DetalleOP","React","verPDF","setVerPDF","buttonAdmRef","useRef","opCargadas","facturasCargadas","authFilaObra","authFilaAdm","verAdm","verAuthBoton","verBoxAdm","setVerBoxAdm","verObra","verBoxObra","setVerBoxObra","verAgregar","borderBottom","paddingBottom","ref","rol_usuario","rta","FormFactura","newFactura","fFechaIngreso","valueOptions","fFechaVTO","OPnumero","GrillaFactura","facturaInformation","idFactura","diasVTO","setDate","Factura","OT","certificadoId","usuarioId","sociedadId","updatedAt","items","sno","desc","verWeb","setVerWeb","guardar_en_server","Menu","estadoFactura","App","localStorageLoggedUserInfo","useAuth","localStorageIdSociety","ThemeProvider","element","dotenv","config","QueryClient","ReactDOM","render","client","getElementById"],"mappings":"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","file":"static/js/main.64891679.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    '@global': {\n      '*': {\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n        height: '100%',\n        width: '100%',\n      },\n      body: {\n        backgroundColor: '#f4f6f8',\n        height: '100%',\n        width: '100%',\n      },\n      a: {\n        textDecoration: 'none',\n      },\n      '#root': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n  })\n);\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","const array = [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\nexport default array;\n","const obj = {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\nexport default obj;\n","import { createTheme, colors } from '@mui/material';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white,\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#5664d2',\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c',\n    },\n  },\n  shadows,\n  typography,\n});\n\nexport default theme;\n","const apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nconst Logo = ({ idSociety }) => (\n  <img alt=\"Logo\" height=\"60px\" src={`${apiServerUrl}public/${idSociety?.logo}`} />\n);\nexport default Logo;\n","import {\n  AttachMoney,\n  TrendingUp,\n  LocalShipping,\n  People,\n  MenuBook,\n  Apartment,\n  /*Assignment,*/\n  ListAlt,\n  CreditCard,\n  /*\n  Construction,\n  MonetizationOn,\n  Business,\n  PeopleAlt,\n  Schema,\n  AssignmentTurnedIn,*/\n} from '@mui/icons-material';\n\nexport const sideBarOptions = [\n  {\n    path: 'op',\n    icon: CreditCard,\n    title: 'OPs',\n    acceso: 'oppago',\n  },\n\n  {\n    path: 'AuthAdmOP',\n    icon: CreditCard,\n    title: 'OPs Auth ADM',\n    acceso: 'AuthAdmOP',\n  },\n\n  {\n    path: 'AuthObraOP',\n    icon: CreditCard,\n    title: 'OPs Auth Obra',\n    acceso: 'AuthObraOP',\n  },\n\n  {\n    path: 'factura',\n    icon: ListAlt,\n    title: 'Facturas',\n    acceso: 'factura',\n  },\n  {\n    path: 'proveedores',\n    icon: LocalShipping,\n    title: 'Proveedores',\n    acceso: 'proveedores',\n  },\n  {\n    path: 'fideicomiso',\n    icon: Apartment,\n    title: 'Fideicomisos',\n    acceso: 'fideicomiso',\n  },\n  {\n    path: 'rubro',\n    icon: MenuBook,\n    title: 'Rubros',\n    acceso: 'rubro',\n  },\n\n/*\n  {\n    path: 'empresa',\n    icon: Business,\n    title: 'Empresa',\n  },*/\n  /*\n  {\n    path: 'persona',\n    icon: PeopleAlt,\n    title: 'Personas',\n  },*/\n  /*\n  {\n    path: 'OT',\n    icon: TrendingUp,\n    title: 'test pdf',\n    acceso: 'OT',\n  },*/\n  {\n    path: 'cac',\n    icon: TrendingUp,\n    title: 'CAC',\n    acceso: 'cac',\n  },\n  {\n    path: 'dolar',\n    icon: AttachMoney,\n    title: 'Dólar',\n    acceso: 'dolar',\n  },\n\n  {\n    path: 'banco',\n    icon: AttachMoney,\n    title: 'Bancos',\n    acceso: 'banco',\n  },\n\n  {\n    path: 'usuarios',\n    icon: People,\n    title: 'Usuarios',\n    acceso: 'usuarios',\n  },\n];\n","// import { useState } from 'react';\nimport {\n  Typography,\n  AppBar,\n  Toolbar,\n  Box,\n  IconButton,\n  Avatar,\n} from '@mui/material';\nimport { ExitToApp, Menu } from '@mui/icons-material';\nimport { Link, useLocation } from 'react-router-dom';\nimport Logo from 'src/components/auxiliares/Logo.js';\nimport { sideBarOptions } from 'src/components/auxiliares/sideBarOptions.js';\nimport { useNavigate } from 'react-router-dom';\n//import { useQuery } from 'react-query';\n//import { getMethod } from 'src/utils/api';\n\nexport default function DashboardNavbar({\n  setisMobileNavOpen,\n  setLoggedUser,\n  idSociety,\n  loggedUser,\n}) {\n\n  var pathAvatar = '/static/images/avatars/' + loggedUser.avatar;\n\n  const user = {avatar: pathAvatar,};\n\n  const navigate = useNavigate();\n\n  const { pathname } = useLocation();\n\n  // const lastPartOfPath = pathname.split('/').at(-1);\n  const lastPartOfPath = pathname.split('/')[pathname.split('/').length - 1];\n\n  if(!loggedUser){\n    logOut();\n  }\n\n  const nameOfPage =\n    sideBarOptions.find(option => option.path === lastPartOfPath)?.title ||\n    lastPartOfPath;\n\n  //const [notifications] = useState([]);\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n\n  /****************************************************/\n  /*************** deuda tecnica **********************/\n  /****************************************************/\n/*\n  const { data: bancos } = useQuery(['bancos', idSociety], () =>\n    getMethod(`banco/listar/${idSociety.id}`)\n  );\n  localStorage.setItem(\"bancos\", JSON.stringify(bancos));\n\n  const { data: cuentasbanco } = useQuery(['cuentasbanco', idSociety], () =>\n    getMethod(`cuentabanco/listar/${idSociety.id}/0`)\n  );  \n  localStorage.setItem(\"cuentasbanco\", JSON.stringify(cuentasbanco));*/\n\n  /****************************************************/\n  /****************************************************/\n  /****************************************************/\n\n  return (\n    <AppBar elevation={0}>\n      <Toolbar>\n        <Link to=\"/\">\n          <Logo idSociety={idSociety} />\n        </Link>\n        <div style={{ marginLeft: 50, fontSize: 24 }}>\n          <Typography align=\"left\" color=\"white\" variant=\"h4\">\n            {nameOfPage\n              .replace('-', ' de ')\n              .replace('%20', ' ')\n              .replace('%20', ' ')\n              .replace('%20', ' ')\n              .replace('_', ': ')}\n          </Typography>\n        </div>\n        <Box sx={{ flexGrow: 1 }} />\n\n        <div>\n          <Typography align=\"left\" color=\"white\" variant=\"h4\">\n            {loggedUser?.user}\n          </Typography>\n        </div>\n\n        <IconButton color=\"inherit\">\n          <Avatar\n            component={Link}\n            to=\"/\"\n            src={user.avatar}\n            sx={{\n              cursor: 'pointer',\n              width: 30,\n              height: 30,\n            }}\n          />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          sx={{ display: { md: 'block', lg: 'none' } }}\n          onClick={setisMobileNavOpen}\n        >\n          <Menu />\n        </IconButton>\n        <IconButton color=\"inherit\" onClick={logOut}>\n          <ExitToApp />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom';\nimport { ListItem, Button } from '@mui/material';\n\nexport function NavItem({ href, icon: Icon, title, ...rest }) {\n  const location = useLocation();\n\n  const active = href\n    ? !!matchPath(\n        {\n          path: href,\n          end: false,\n        },\n        location.pathname\n      )\n    : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0,\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main',\n          }),\n          '& svg': {\n            mr: 1,\n          },\n        }}\n        to={href}\n      >\n        {Icon && <Icon size=\"20\" />}\n        <span>{title}</span>\n      </Button>\n    </ListItem>\n  );\n}\n","import { Box, List, Drawer } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { NavItem } from './NavItem';\nimport { sideBarOptions } from './sideBarOptions';\n\nexport default function DashboardSidebar({ setisMobileNavOpen, setLoggedUser, isMobileNavOpen, idSociety, loggedUser }) {\n  // console.log('idSociety:', idSociety);\n  const navigate = useNavigate();\n  if(!loggedUser){\n    logOut();\n  }\n\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        p: 2,\n      }}\n    >\n      <List>\n        {arrMenu(sideBarOptions, loggedUser?.['rol.accesoTXT']).map(item => (\n          <NavItem\n            href={`/${idSociety?.nombre}/${item.path}`}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <>\n      <Drawer\n        variant=\"temporary\"\n        sx={{ display: { xs: 'block', lg: 'none' } }}\n        anchor=\"left\"\n        onClose={setisMobileNavOpen}\n        open={isMobileNavOpen}\n        PaperProps={{\n          sx: {\n            width: 256,\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n      <Drawer\n        variant=\"persistent\"\n        open\n        sx={{ display: { xs: 'none', lg: 'block' } }}\n        anchor=\"left\"\n        PaperProps={{\n          sx: {\n            width: 256,\n            top: 64,\n            height: 'calc(100% - 64px)',\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n    </>\n  );\n}\n\n// segun acceso en el accessTXT del rol\nfunction arrMenu(sideBarOptions, acceso){\n  \n  let arr =[{}]; \n\n  sideBarOptions.forEach(obj => {\n    if(acceso.indexOf(obj.acceso) !== -1 && obj.acceso.trim()!==\"\" && obj.acceso!==null && obj.acceso!==undefined){\n      arr.push(obj);\n    }  \n  })\n  arr.splice(0, 1);\n\n  return arr;\n}\n","import { useState } from 'react';\nimport { styled } from '@mui/system';\nimport { Outlet } from 'react-router-dom';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\nimport { useNavigate } from 'react-router-dom';\n// import { ReactQueryDevtools } from 'react-query/devtools';\n// <ReactQueryDevtools initialIsOpen={false} />\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}));\n\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 256,\n  },\n}));\n\nconst DashboardLayoutContainer = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n});\n\nconst DashboardLayoutContent = styled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n});\n\nexport default function DashboardLayout({ setLoggedUser, idSociety, loggedUser }) {\n  \n  const navigate = useNavigate();\n\n  if(!loggedUser){\n    logOut();\n  }\n\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n  const [isMobileNavOpen, setisMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar\n        setisMobileNavOpen={() => setisMobileNavOpen(!isMobileNavOpen)}\n        setLoggedUser={setLoggedUser}\n        idSociety={idSociety}\n        loggedUser={loggedUser}\n      />\n      <DashboardSidebar\n        idSociety={idSociety}\n        loggedUser={loggedUser}\n        setisMobileNavOpen={() => setisMobileNavOpen(!isMobileNavOpen)}\n        isMobileNavOpen={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n            \n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@mui/material';\nimport Logo from './Logo';\n\nconst MainNavbar = props => (\n  <AppBar elevation={0} {...props}>\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to='/'>\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { styled } from '@mui/system';\nimport MainNavbar from 'src/components/auxiliares/MainNavbar';\n\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}));\n\nconst MainLayoutWrapper = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n});\n\nconst MainLayoutContainer = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n});\n\nconst MainLayoutContent = styled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import axios from 'axios';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport const getMethod = async url => {\n  const { data } = await axios.get(`${apiServerUrl}${url}`);\n  return data;\n};\n\nexport const postMethod = async (url, newData) => {\n  const { data } = await axios.post(`${apiServerUrl}${url}`, newData);\n  return data;\n};\n\nexport const deleteMethod = async (url, infoOfElementToDelete) => {\n  // console.log('infoOfElementToDelete:', infoOfElementToDelete);\n  return await axios.delete(`${apiServerUrl}${url}`, { data: infoOfElementToDelete });\n};\n","import { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\n\nimport { Container, Box, TextField, Button, Alert } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { Formik } from 'formik';\nimport { getMethod } from 'src/utils/api';\nimport { postMethod } from 'src/utils/api';\nimport { useQuery } from 'react-query';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function Login({ setLoggedUser, idSociety, setIdSociety }) {\n\n  //const queryClient = useQueryClient();\n  let { societyName } = useParams();\n  const navigate = useNavigate();\n\n  // localStorage.clear();\n  \n  localStorage.setItem(\"loggedUserInfo\", null);\n  localStorage.setItem(\"bancos\", null);\n  localStorage.setItem(\"cuentasbanco\", null);\n  localStorage.setItem(\"estados\", null);\n  localStorage.setItem(\"formaPagos\", null);\n\n  const [isAlertOpen, setIsAlertOpen] = useState('none');\n\n\n  useEffect(() => {\n    societyStateObjectSetter(societyName, setIdSociety);\n  }, [setIdSociety, societyName]);\n\n  /****************************************************/\n  /*************** deuda tecnica **********************/\n  /****************************************************/\n\n  const { data: bancos } = useQuery(['bancos', idSociety], () =>\n    getMethod(`banco/listar/${idSociety.id}`)\n  );\n  localStorage.setItem(\"bancos\", JSON.stringify(bancos));\n\n  const { data: cuentasbanco } = useQuery(['cuentasbanco', idSociety], () =>\n    getMethod(`cuentabanco/listar/${idSociety.id}/0`)\n  );  \n  localStorage.setItem(\"cuentasbanco\", JSON.stringify(cuentasbanco));\n\n  /****************************************************/\n  /****************************************************/\n  /****************************************************/\n\n  return (\n    <>\n      <Helmet onChangeClientState={() => {}}>\n        <title>Login | {idSociety?.nombreComercial ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <div style={{ width: '100%' }} >\n            <img\n              style={{ display: 'block', margin: 'auto', width: '50%', backgroundColor:\"#6326d5\" }}\n              src={`${apiServerUrl}public/${idSociety?.logo}`}\n              alt=\"logo\"\n            />\n          </div>\n          <Formik\n            enableReinitialize=\"true\"\n            initialValues={{\n              email: `${idSociety?.dominio ?? ''}`,\n              password: '',\n            }}\n            onSubmit={async (values, actions) => {\n              if (await userCheck(idSociety.id, values.email, values.password, setLoggedUser)) {\n\n                /****************************************************/\n                /*************** deuda tecnica **********************/\n                /****************************************************/\n\n                const estados = [  \n                  { id: 0, descripcion: '-' },\n                  { id: 1, descripcion: 'Para autorizar Obra' },\n                  { id: 2, descripcion: 'Para pagar' },\n                  { id: 3, descripcion: 'Pagada' },\n                  { id: 4, descripcion: 'Para autorizar AC' },\n                  { id: 5, descripcion: 'Pagado Parcial' },\n                  { id: 6, descripcion: 'Anulado' },\n                  { id: 7, descripcion: 'Cargada en Banco' },\n                ];\n                localStorage.setItem(\"estados\", JSON.stringify(estados));\n                const formaPagos = \"-,Transferencia,Cheque,Efectivo,Otra\";\n                localStorage.setItem(\"formaPagos\", formaPagos);            \n\n                /****************************************************/\n                /****************************************************/\n                /****************************************************/\n\n                navigate(`/${societyName}`, { replace: true });\n              } else {\n                setIsAlertOpen('flex');\n                actions.resetForm();\n              }\n            }}\n          >\n            {function (props) {\n              return (\n                <form onSubmit={props.handleSubmit}>\n                  <TextField\n                    fullWidth\n                    label=\"Correo\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={props.handleBlur}\n                    onChange={props.handleChange}\n                    value={props.values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Contraseña\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    autoComplete=\"on\"\n                    onBlur={props.handleBlur}\n                    onChange={props.handleChange}\n                    type=\"password\"\n                    value={props.values.password}\n                    variant=\"outlined\"\n                  />\n                  <Box sx={{ py: 2 }}>\n                    <Alert\n                      style={{ display: isAlertOpen }}\n                      severity=\"error\"\n                      onClose={() => {\n                        setIsAlertOpen('none');\n                      }}\n                    >\n                      Correo y/o contraseña inválidos\n                    </Alert>\n                    <Button\n                      color=\"primary\"\n                      disabled={props.isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Ingresar\n                    </Button>\n                  </Box>\n                </form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n}\n\nasync function societyStateObjectSetter(societyName, setIdSociety) {\n  const societyData = await nameToId(societyName);\n  setIdSociety({ ...societyData });\n}\n\nasync function nameToId(nombreSociedad) {\n  const data = await getMethod(`sociedad/mostrar/${nombreSociedad}`);\n  localStorage.removeItem('idSociety');\n  if (data) {\n    localStorage.setItem('idSociety', JSON.stringify({ ...data }));\n  }\n  return await data;\n}\n\nasync function userCheck(idSociety, email, password, setLoggedUser) {\n  const loggedUserInfo = await postMethod(`usuario/login/${await idSociety}`, {\n    mail: email,\n    pass: password,\n  });\n\n\n  setLoggedUser(loggedUserInfo);\n  return loggedUserInfo !== null ? true : false;\n}\n","import { Container, Box, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n      }}\n    >\n      <Container >\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\n          404: La página no existe\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              width: 560,\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","import { getMethod } from './api';\n// import moment from 'moment';\n\nexport function isValidDate(d) {\n  let f = new Date(d);\n  return !isNaN(f.getTime());\n}\n\n// Devuelve CUIT con formato 20-44.123.225-8\nexport function mostrarCUIT(value) {\n  try {\n    value = value.split('');\n    value.splice(2, 0, '-');\n    value.splice(5, 0, '.');\n    value.splice(9, 0, '.');\n    value.splice(13, 0, '-');\n    return value.join('');\n  } catch (e) {\n    console.log('hubo un error: ', e);\n    return null;\n  }\n}\n\n// entra base de datos\n// Devuelve un Date con formato 1/5/2021\nexport function mostrarFecha(fecha) {\n\n  \n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return new Date(fecha).toLocaleDateString('es-AR', { timeZone: 'UTC' });\n  }\n}\n\n// Devuelve un Date con formato 5 dic. 2021\nexport function mostrarFechaMesTXT(fecha) {\n  let dd = new Date(fecha).getDate();\n  let mm = new Date(fecha).toLocaleDateString('es-AR', { timeZone: 'UTC',  month: 'short' });\n  let yyyy = new Date(fecha).getFullYear();\n  return dd + ' ' + mm + ' '  + yyyy;\n \n}\n\n// entra date\n// Devuelve un string con formato YYYY-MM-DD\nexport function yearMonthDayString(fecha) {\n\n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return `${fecha.getFullYear(fecha)}-${(1 + fecha.getMonth(fecha)).toString().padStart(2, '0')}-${fecha\n      .getDate(fecha)\n      .toString()\n      .padStart(2, '0')}`;\n  }\n\n \n}\n\n// entra date\n// Devuelve una fecha con dia 1\nexport function dateToStringWithDayEqualToOne(date) {\n  return `${date.getFullYear(date)}-${(1 + date.getMonth(date)).toString().padStart(2, '0')}-01`;\n}\n\nexport async function isNumberUsed(endpoint, idSociety, empresaId, numero) {\n  let url = `${endpoint}/mostrar/${idSociety}/${empresaId}/${numero}`;\n  let data = await getMethod(url);\n  return !!data;\n}\n\nexport async function isNumberUsedDig(endpoint, idSociety, empresaId, numero) {\n  \n  let dig = process.env.Q_DIGITOS_COM_FACTURA;\n  let num = \"\" + numero; \n  if(num.length > dig){\n    num = num.slice(num.length - dig);\n  } \n\n  let url = `${endpoint}/checknumero/${idSociety}/${empresaId}/${numero}`;\n  let data = await getMethod(url);\n\n  return !!data;\n}\n\n\nexport async function isDateUsed(endpoint, idSociety, date) {\n  let url = `${endpoint}/mostrar/${idSociety}/${date}`;\n  let data = await getMethod(url);\n  return !!data;\n}\n\nexport function onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n","import { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\n\nexport function usePrompt() {\n  const [isPromptOpen, setIsPromptOpen] = useState(false);\n\n  return { Prompt, setIsPromptOpen };\n\n  function Prompt({\n    ok = false,\n    action = () => {},\n    message = '¿Estás seguro de eliminar este registro?',\n  }) {\n    // console.log('action', action);\n    return (\n      <div>\n        <Dialog\n          open={isPromptOpen}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{message}</DialogTitle>\n          <DialogActions>\n            {ok ? (\n              <Button onClick={handleClose}>Ok</Button>\n            ) : (\n              <>\n                <Button onClick={handleClose}>No</Button>\n                <Button onClick={() => handleActionAndClose(action)} autoFocus>\n                  Sí\n                </Button>\n              </>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n\n  function handleClose() {\n    setIsPromptOpen(false);\n  }\n\n  function handleActionAndClose(action) {\n    action();\n    handleClose();\n  }\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { postMethod } from 'src/utils/api';\nimport { yearMonthDayString, isDateUsed } from 'src/utils/utils';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import useUser from \"../../hooks/useUser\";\n\nexport function FormDolar({ idSociety, loggedUser}) {\n  const { setIsPromptOpen, Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  /*\n  const user = useUser();\n  console.log(user); */\n\n  const { mutate: addDolar } = useMutation(\n    newDolar => postMethod(`dolar/agregar/${idSociety.id}`, newDolar),\n    {\n      onMutate: async newDolar => {\n        newDolar.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['dolar', idSociety]);\n        const prevData = await queryClient.getQueryData(['dolar', idSociety]);\n        const newData = [...prevData, { ...newDolar, id: new Date().getTime() }];\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          fecha: new Date(),\n          mep: '',\n          BCRA: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          values.fecha = yearMonthDayString(values.fecha);\n          if (await isDateUsed('dolar', idSociety.id, values.fecha)) {\n            setIsPromptOpen(true);\n          } else addDolar(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            <Field component={Picker} label=\"Fecha\" type=\"date\" name=\"fecha\" />\n            <Field\n              as={TextField}\n              label=\"BCRA\"\n              size=\"small\"\n              type=\"float\"\n              maxLength={4}\n              name=\"BCRA\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'BCRA')}\n            />\n            <Field\n              as={TextField}\n              label=\"MEP\"\n              size=\"small\"\n              type=\"float\"\n              name=\"mep\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'mep')}\n            />\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\nfunction Picker({ field, form }) {\n  const { name, value } = field;\n  const { setFieldValue } = form;\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DesktopDatePicker\n        label=\"Fecha\"\n        inputFormat=\"dd/MM/yyyy\"\n        value={value}\n        onChange={value => setFieldValue(name, value)}\n        renderInput={params => <TextField required size=\"small\" {...params} />}\n      />\n    </LocalizationProvider>\n  );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'fecha',\n    headerName: 'Fecha',\n    width: 150,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => mostrarFecha(value),\n  },\n  {\n    field: 'BCRA',\n    preProcessEditCellProps: onlyNumbers,\n    headerName: 'BCRA',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'mep',\n    preProcessEditCellProps: onlyNumbers,\n    headerName: 'MEP',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaDolar({ idSociety }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: dolarInformation,\n    isLoading,\n    error,\n  } = useQuery(['dolar', idSociety], () => getMethod(`dolar/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idDolar => await deleteMethod(`dolar/eliminar/${idSociety.id}`, { id: idDolar }),\n    {\n      onMutate: async idDolar => {\n        await queryClient.cancelQueries(['dolar', idSociety]);\n        const prevData = queryClient.getQueryData(['dolar', idSociety]);\n        const newData = prevData.filter(dolar => dolar.id !== idDolar);\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idDolar, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`dolar/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['dolar', idSociety]);\n        const prevData = queryClient.getQueryData(['dolar', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(dolar => dolar.id !== id),\n          { ...prevData.find(dolar => dolar.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={dolarInformation.map(dolar => ({\n            id: dolar.id,\n            fecha: dolar.fecha,\n            BCRA: dolar.BCRA,\n            blue: dolar.blue,\n            descripcion: dolar.descripcion,\n            mep: dolar.mep,\n            deleteId: dolar.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction onlyNumbers(data) {\n\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  const isValid = regex.test(data.props.value.toString());\n  const error = !isValid;\n  return { ...data.props, error };\n}\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormDolar } from 'src/components/dolar/FormDolar';\nimport { GrillaDolar } from 'src/components/dolar/GrillaDolar';\n\nexport function Dolar({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>Dólar | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <FormDolar idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaDolar idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { dateToStringWithDayEqualToOne, isDateUsed } from 'src/utils/utils';\n\nexport function FormCac({ idSociety, loggedUser }) {\n  const { Prompt, setIsPromptOpen } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addCac } = useMutation(\n    newCac => postMethod(`cac/agregar/${idSociety.id}`, newCac),\n    {\n      onMutate: async newCac => {\n        newCac.creador = loggedUser.id;\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = await queryClient.getQueryData(['cac', idSociety]);\n        const newData = [...prevData, { ...newCac, id: new Date().getTime() }];\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          fecha: new Date(),\n          estimado: '',\n          definitivo: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          values.fecha = dateToStringWithDayEqualToOne(values.fecha);\n          if (await isDateUsed('cac', idSociety.id, values.fecha)) {\n            setIsPromptOpen(true);\n          } else addCac(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            <Field component={Picker} label=\"Fecha\" type=\"date\" name=\"fecha\" />\n            <Field\n              as={TextField}\n              label=\"Estimado\"\n              required\n              type=\"float\"\n              size=\"small\"\n              maxLength={4}\n              name=\"estimado\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'estimado')}\n            />\n            <Field\n              as={TextField}\n              label=\"Definitivo\"\n              required\n              type=\"float\"\n              size=\"small\"\n              name=\"definitivo\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'definitivo')}\n            />\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya hay un mes con información, por favor editar el mes desde la grilla.\"\n        ok\n      />\n    </>\n  );\n\n  function onlyNumbers(event, setFieldValue, typeOfData) {\n    event.preventDefault();\n    const { value } = event.target;\n    const regex = /^\\d{0,4}(\\.\\d{0,2})?$/;\n    if (regex.test(value.toString())) {\n      setFieldValue(typeOfData, value.toString());\n    }\n  }\n\n  function Picker({ field, form }) {\n    const { name, value } = field;\n    const { setFieldValue } = form;\n\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label=\"Fecha\"\n          inputFormat=\"dd/MM/yyyy\"\n          value={value}\n          onChange={value => setFieldValue(name, value)}\n          renderInput={params => <TextField required size=\"small\" {...params} />}\n        />\n      </LocalizationProvider>\n    );\n  }\n}\n","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'fecha',\n    headerName: 'Fecha',\n    width: 150,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n  },\n  {\n    field: 'estimado',\n    headerName: 'Estimado',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    preProcessEditCellProps: onlyNumbers,\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'definitivo',\n    headerName: 'Definitivo',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    preProcessEditCellProps: onlyNumbers,\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n       \n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaCac({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt();\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: cacInformation,\n    isLoading,\n    error,\n  } = useQuery(['cac', idSociety], () => getMethod(`CAC/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idCac => await deleteMethod(`cac/eliminar/${idSociety.id}`, { id: idCac }),\n    {\n      onMutate: async idCac => {\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = queryClient.getQueryData(['cac', idSociety]);\n        const newData = prevData.filter(cac => cac.id !== idCac);\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idCac, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`cac/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = queryClient.getQueryData(['cac', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(cac => cac.id !== id),\n          { ...prevData.find(cac => cac.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={cacInformation.map(cac => ({\n            id: cac.id,\n            fecha: cac.fecha,\n            estimado: cac.estimado,\n            definitivo: cac.definitivo,\n            deleteId: cac.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n}\n\nfunction onlyNumbers(data) {\n  \n  const regex = /^\\d{0,4}(\\.\\d{0,2})?$/;\n  const isValid = regex.test(data.props.value.toString());\n  const error = !isValid;\n  return { ...data.props, error };\n}\n","\n  \nimport { Box, Container } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormCac } from 'src/components/cac/FormCac';\nimport { GrillaCac } from 'src/components/cac/GrillaCac';\n\nexport function Cac({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>CAC | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <FormCac idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaCac idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { Hidden } from '@material-ui/core';\n\nexport function FormRubro({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addRubro } = useMutation(\n    newRubro => postMethod(`rubro/agregar/${idSociety.id}`, newRubro),\n    {\n      onMutate: async newRubro => {\n        newRubro.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['rubro', idSociety]);\n        const prevData = await queryClient.getQueryData(['rubro', idSociety]);\n        const newData = [...prevData, { ...newRubro, id: new Date().getTime()}];\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          rubro: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addRubro(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Rubro\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"rubro\"\n            />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El rubro no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'rubro',\n    headerName: 'Rubro',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaRubro({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const navigate = useNavigate();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: rubroInformation,\n    isLoading,\n    error,\n  } = useQuery(['rubro', idSociety], () => getMethod(`rubro/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idRubro => await deleteMethod(`rubro/eliminar/${idSociety.id}`, { id: idRubro }),\n    {\n      onMutate: async idRubro => {\n        await queryClient.cancelQueries(['rubro', idSociety]);\n        const prevData = queryClient.getQueryData(['rubro', idSociety]);\n        const newData = prevData.filter(rubro => rubro.id !== idRubro);\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idRubro, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`rubro/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['rubro', idSociety]);\n        const prevData = queryClient.getQueryData(['rubro', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(rubro => rubro.id !== id),\n          { ...prevData.find(rubro => rubro.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={rubroInformation.map(rubro => ({\n            id: rubro.id,\n            rubro: rubro.rubro,\n            deleteId: rubro.id,\n          }))}\n          onCellEditCommit={modifyData}\n          onRowDoubleClick={a => {\n          // console.log(a);\n           return IrASubrubro(a);\n         }}\n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n    function IrASubrubro(params) {\n      navigate(`./${params.row.id}/Subrubros-${params.row.rubro}`);\n    }\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormRubro } from 'src/components/rubro/FormRubro';\nimport { GrillaRubro } from 'src/components/rubro/GrillaRubro';\n\nexport function Rubro({ idSociety, loggedUser}) {\n  return (\n    <>\n      <Helmet>\n        <title>Rubro | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormRubro idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaRubro idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormSubRubro({ idSociety, idRubro, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addSubRubro } = useMutation(\n    newSubRubro => postMethod(`subrubro/agregar/${idSociety.id}/${idRubro}`, newSubRubro),\n    {\n      onMutate: async newSubRubro => {\n        newSubRubro.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['subrubro', idSociety]);\n        const prevData = await queryClient.getQueryData(['subrubro', idSociety]);\n        const newData = [...prevData, { ...newSubRubro, id: new Date().getTime() }];\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          subRubro: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addSubRubro(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"SubRubro\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"subRubro\"\n            />\n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El subrubro no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'subRubro',\n    headerName: 'SubRubro',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaSubRubro({ idSociety, idRubro }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: subrubroInformation,\n    isLoading,\n    error,\n  } = useQuery(['subrubro', idSociety], () => getMethod(`subrubro/listar/${idSociety.id}/${idRubro}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idSubRubro => await deleteMethod(`subrubro/eliminar/${idSociety.id}`, { id: idSubRubro }),\n    {\n      onMutate: async idSubRubro => {\n        await queryClient.cancelQueries(['subrubro', idSociety]);\n        const prevData = queryClient.getQueryData(['subrubro', idSociety]);\n        const newData = prevData.filter(subrubro => subrubro.id !== idSubRubro);\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idSubRubro, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`subrubro/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['subrubro', idSociety]);\n        const prevData = queryClient.getQueryData(['subrubro', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(subrubro => subrubro.id !== id),\n          { ...prevData.find(subrubro => subrubro.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={subrubroInformation.map(subrubro => ({\n            id: subrubro.id,\n            subRubro: subrubro.subRubro,\n            deleteId: subrubro.id,\n          }))}\n          onCellEditCommit={modifyData}\n        \n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n         \n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n   \n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormSubRubro } from 'src/components/rubro/FormSubRubro';\nimport { GrillaSubRubro } from 'src/components/rubro/GrillaSubRubro';\n\nexport function SubRubro({ idSociety, loggedUser}) {\n  const { idRubro } = useParams();\n  const rubro = parseInt(idRubro);\n  return (\n    <>\n      <Helmet>\n        <title>SubRubro | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormSubRubro idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaSubRubro idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormBanco({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addBanco } = useMutation(\n    newBanco => postMethod(`banco/agregar/${idSociety.id}`, newBanco),\n    {\n      onMutate: async newBanco => {\n        newBanco.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['banco', idSociety]);\n        const prevData = await queryClient.getQueryData(['banco', idSociety]);\n        const newData = [...prevData, { ...newBanco, id: new Date().getTime()}];\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          banco: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addBanco(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Banco\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"banco\"\n            />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n            \n\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El Banco no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'banco',\n    headerName: 'Banco',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1\n  },\n  {\n    field: 'descripcionLarga',\n    headerName: 'Descripcion',\n    width: 250,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  \n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaBanco({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const navigate = useNavigate();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: bancoInformation,\n    isLoading,\n    error,\n  } = useQuery(['banco', idSociety], () => getMethod(`banco/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idBanco => await deleteMethod(`banco/eliminar/${idSociety.id}`, { id: idBanco }),\n    {\n      onMutate: async idBanco => {\n        await queryClient.cancelQueries(['banco', idSociety]);\n        const prevData = queryClient.getQueryData(['banco', idSociety]);\n        const newData = prevData.filter(banco => banco.id !== idBanco);\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idBanco, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`banco/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['banco', idSociety]);\n        const prevData = queryClient.getQueryData(['banco', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(banco => banco.id !== id),\n          { ...prevData.find(banco => banco.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async banco =>    \n      navigate(`./${banco.id}/Cuentas de Banco-${banco.banco}`)\n      //navigate(`./${params.row.id}/Cuentas de Banco-${params.row.banco}`);\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={bancoInformation.map(banco => ({\n            id: banco.id,\n            banco: banco.banco,\n            descripcionLarga: banco.descripcionLarga,\n            deleteId: banco.id,\n            onIrDetalle: () => irDetalle(banco),  \n          }))}\n          onCellEditCommit={modifyData}\n          \n          /* onRowDoubleClick={a => {return IrACuentaBanco(a);}}*/\n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n           <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            </Typography>\n            <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                 Para visualizar los cambios en otras pantallas del sistema es necesario salir y volver a loguearse, gracias.\n            </Typography>\n      </div>\n    );\n    /*\n    function IrACuentaBanco(params) {\n      navigate(`./${params.row.id}/Cuentas de Banco-${params.row.banco}`);\n    }*/\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const banco = params.row.banco;\n  return <Button onClick={sendRow} >{banco}  </Button>;\n} \n\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormBanco } from 'src/components/banco/FormBanco';\nimport { GrillaBanco } from 'src/components/banco/GrillaBanco';\n\nexport function Banco({ idSociety, loggedUser}) {\n  return (\n    <>\n      <Helmet>\n        <title>Banco | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormBanco idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaBanco idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\nexport function FormCuentaBanco({ idSociety, loggedUser }) {\n\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  const { idBanco } = useParams();\n\n  const { mutate: addCuentaBanco } = useMutation(\n    newCuentaBanco => postMethod(`cuentabanco/agregar/${idSociety.id}/${idBanco}`, newCuentaBanco),\n    {\n      onMutate: async newCuentaBanco => {\n        newCuentaBanco.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['cuentabanco', idSociety]);\n        const prevData = await queryClient.getQueryData(['cuentabanco', idSociety]);\n        const newData = [...prevData, { ...newCuentaBanco, id: new Date().getTime() }];\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          cuentaBanco: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addCuentaBanco(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Cuenta\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"cuentaBanco\"\n            />\n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El cuentabanco no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { Typography } from '@mui/material';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'cuentaBanco',\n    headerName: 'Cuenta',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'descripcionLarga',\n    headerName: 'Descripcion',\n    width: 250,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaCuentaBanco({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  const { idBanco } = useParams();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: cuentaBancoInformation,\n    isLoading,\n    error,\n  } = useQuery(['cuentabanco', idSociety], () => getMethod(`cuentabanco/listar/${idSociety.id}/${idBanco}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idCuentaBanco => await deleteMethod(`cuentabanco/eliminar/${idSociety.id}`, { id: idCuentaBanco }),\n    {\n      onMutate: async idCuentaBanco => {\n        await queryClient.cancelQueries(['cuentabanco', idSociety]);\n        const prevData = queryClient.getQueryData(['cuentabanco', idSociety]);\n        const newData = prevData.filter(cuentabanco => cuentabanco.id !== idCuentaBanco);\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idCuentaBanco, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`cuentabanco/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['cuentabanco', idSociety]);\n        const prevData = queryClient.getQueryData(['cuentabanco', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(cuentabanco => cuentabanco.id !== id),\n          { ...prevData.find(cuentabanco => cuentabanco.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={cuentaBancoInformation.map(cuentabanco => ({\n            id: cuentabanco.id,\n            cuentaBanco: cuentabanco.cuentaBanco,\n            descripcionLarga: cuentabanco.descripcionLarga,\n            deleteId: cuentabanco.id,\n          }))}\n          onCellEditCommit={modifyData}\n        \n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n         \n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </Typography>\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n            Para visualizar los cambios en otras pantallas del sistema es necesario salir y volver a loguearse, gracias.\n        </Typography>\n      </div>\n    );\n   \n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormCuentaBanco } from 'src/components/banco/FormCuentaBanco';\nimport { GrillaCuentaBanco } from 'src/components/banco/GrillaCuentaBanco';\n\nexport function CuentaBanco({ idSociety, loggedUser}) {\n  const { idRubro } = useParams();\n  const rubro = parseInt(idRubro);\n  return (\n    <>\n      <Helmet>\n        <title>CuentaBanco | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormCuentaBanco idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaCuentaBanco idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormUsuario({ idSociety, loggedUser}) {\n  //const { setIsPromptOpen, Prompt } = usePrompt();\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addUsuario } = useMutation(\n    newUsuario => postMethod(`usuario/agregar/${idSociety.id}`, newUsuario),\n    {\n      onMutate: async newUsuario => {\n        newUsuario.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['usuario', idSociety]);\n        const prevData = await queryClient.getQueryData(['usuario', idSociety]);\n        const newData = [...prevData, { ...newUsuario, id: new Date().getTime() }];\n        queryClient.setQueryData(['usuario', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['usuario', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          user: '',\n          mail: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n\n          addUsuario(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        \n        {({ isSubmitting }) => (\n          <Form>\n            <Field as={TextField} required size=\"small\" label='Usuario' type='string' maxLength={30} name='user' />\n            <Field as={TextField} required size=\"small\" label='Mail' type='mail' name='mail' />  \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'user',\n    headerName: 'Usuario',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 220,\n    headerAlign: 'center',\n  },\n  {\n    field: 'pass',\n    headerName: 'Clave',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    renderCell: Passformat,\n  },\n  {\n    field: 'rolId', // campo en grilla\n    headerName: 'Rol',\n    width: 150,\n    editable: true,\n    renderCell: ({ value }) => value.rol_descripcion, // a visualizar\n    renderEditCell: props => <ComboBox roles={roles} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nconst roles = [  \n  { id: 1, rol_descripcion: 'administrativo' },\n  { id: 2, rol_descripcion: 'obra' },\n  { id: 3, rol_descripcion: 'manager' },\n];\n\nexport function GrillaUsuario({ idSociety }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: usuarioInformation,\n    isLoading,\n    error,\n  } = useQuery(['usuario', idSociety], () => getMethod(`usuario/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idUsuario => await deleteMethod(`usuario/eliminar/${idSociety.id}`, { id: idUsuario }),\n    {\n      onMutate: async idUsuario => {\n        await queryClient.cancelQueries(['usuario', idSociety]);\n        const prevData = queryClient.getQueryData(['usuario', idSociety]);\n        const newData = prevData.filter(usuario => usuario.id !== idUsuario);\n        queryClient.setQueryData(['usuario', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idUsuario, context) => queryClient.setQueryData(['usuario', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n      async ({ field, id, value }) => \n          await postMethod(`usuario/modificar/${idSociety.id}`, {\n            id,\n            [field]: value,\n          }),\n          \n        {\n          onMutate: async ({ field, id, value }) => {\n            await queryClient.cancelQueries(['usuario', idSociety]);\n            const prevData = queryClient.getQueryData(['usuario', idSociety]);\n            // console.log('prevData', prevData);\n            const newData = [\n              ...prevData.filter(usuario => usuario.id !== id),\n              { ...prevData.find(usuario => usuario.id === id), [field]: value },\n            ];\n            // console.log('newData', newData);\n            queryClient.setQueryData(['usuario', idSociety], newData);\n            return prevData;\n          },\n          onError: (err, id, context) => queryClient.setQueryData(['usuario', idSociety], context),\n          onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n        }     \n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{height: '100%', width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={usuarioInformation.map(usuario => ({\n            id: usuario.id,\n            user: usuario.user,\n            mail: usuario.mail,\n            pass: usuario.pass,\n            rolId: { // es lo que manda por post a la api\n              id: usuario['rol.id'],\n              rol_descripcion: roles?.find(rol => rol.id === usuario['rol.id'])?.rol_descripcion,\n            }, \n            \n            deleteId: usuario.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          autoHeight={true}\n          disableSelectionOnClick\n          density={'comfortable'}\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction ComboBox({ roles, props }) {\n  const { id, api, field } = props;\n\n  roles = [\n    ...roles,\n    {\n      rol_descripcion: '',\n    },\n  ];\n  const [selectedRol, setSelectedRol] = useState({\n    rol_descripcion: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRol}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue);\n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}      \n      id=\"combo-box-demo\"\n      options={roles}\n      isOptionEqualToValue={(op, val) => op.rol_descripcion === val.rol_descripcion}\n      getOptionLabel={option => option.rol_descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rol\" />}\n    />\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction Passformat(params) {\n  //const sendRow = params.row.onIrDetalle;  \n  //const empresa = params.row.empresa;\n  return '***********';\n} \n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormUsuario } from 'src/components/usuarios/FormUsuario';\nimport { GrillaUsuario } from 'src/components/usuarios/GrillaUsuario';\n\nexport function Usuarios({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>Usuarios | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormUsuario idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaUsuario idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { Hidden } from '@material-ui/core';\n                \nexport function FormProveedor({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addProveedor } = useMutation(\n    newProveedor => postMethod(`proveedor/agregar/${idSociety.id}`, newProveedor),\n    {\n      onMutate: async newProveedor => {\n        newProveedor.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['proveedor', idSociety]);\n        const prevData = await queryClient.getQueryData(['proveedor', idSociety]);\n        const newData = [...prevData, { ...newProveedor, id: new Date().getTime()}];\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          razonSocial: '',\n          CUIT: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          // check cuit\n          addProveedor(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n            as={TextField}\n            label='CUIT'\n            type='string'\n            required\n            size=\"small\"\n            maxLength={11}\n            name='CUIT'\n            onChange={event => onlyNumbers(event, setFieldValue, 'CUIT')}\n          />\n          \n          <Field as={TextField} required size=\"small\" label='Razón Social' type='string' name='razonSocial' />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El CUIT no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}\n/* USAR !!!\nasync function checkCuit(idSociety, cuit) {\n  let url = `proveedor/mostrar/${idSociety}/${cuit}`;\n  ///return Boolean(await getMethod(url));\n  return false;\n}*/\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarCUIT } from 'src/utils/utils';\n\nconst columns = (rubros, subRubros, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'razonSocial',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 130,\n    // editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => mostrarCUIT(value),\n  },\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 140,\n    editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CBU',\n    headerName: 'CBU',\n    width: 200,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'banco',\n    headerName: 'Banco',\n    width: 120,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'nroCuenta',\n    headerName: '# Cuenta',\n    width: 140,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'rubroID',\n    headerName: 'Rubro',\n    width: 140,\n    editable: true,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBox rubros={rubros} props={props} />,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'subrubroID',\n    headerName: 'Sub Rubro',\n    width: 140,\n    editable: true,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBoxSub subRubros={subRubros} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'enviar_OP_auto',\n    headerName: 'Enviar',\n    type: 'boolean',\n    width: 50,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaProveedor({ idSociety }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: proveedorInformation,\n    isLoading,\n    error,\n  } = useQuery(['proveedor', idSociety], () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { data: rubros } = useQuery(['rubros', idSociety], () =>\n    getMethod(`rubro/listar/${idSociety.id}`)\n  );\n\n\n  const { data: subRubros } = useQuery(['subrubros', idSociety], () =>\n    getMethod(`subrubro/listar/${idSociety.id}/0`)\n  );\n\n  const { mutate: eliminate } = useMutation(\n    async idProveedor => await deleteMethod(`proveedor/eliminar/${idSociety.id}`, { id: idProveedor }),\n    {\n      onMutate: async idProveedor => {\n        await queryClient.cancelQueries(['proveedor', idSociety]);\n        const prevData = queryClient.getQueryData(['proveedor', idSociety]);\n        const newData = prevData.filter(proveedor => proveedor.id !== idProveedor);\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idProveedor, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`proveedor/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['proveedor', idSociety]);\n        const prevData = queryClient.getQueryData(['proveedor', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(proveedor => proveedor.id !== id),\n          { ...prevData.find(proveedor => proveedor.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={proveedorInformation.map(proveedor => ({\n            id: proveedor.id,\n            rubroID: {\n              id: proveedor.rubroId,\n              nombre: rubros?.find(rubro => rubro.id === proveedor.rubroId)?.rubro,\n            },\n            subrubroID: {\n              id: proveedor.subrubroId,\n              nombre: subRubros?.find(subRubro => subRubro.id === proveedor.subrubroId)?.subRubro,\n            },          \n            razonSocial: proveedor.razonSocial,\n            CUIT: proveedor.CUIT,\n            mail: proveedor.mail,\n            telefono: proveedor.telefono,\n            CBU: proveedor.CBU,\n            banco: proveedor.banco,\n            nroCuenta: proveedor.nroCuenta,\n            enviar_OP_auto: proveedor.enviar_OP_auto,\n            /*enviar_OP_auto: parseInt(proveedor.enviar_OP_auto===0)? false:true,*/\n            deleteId: proveedor.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(rubros, subRubros, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction ComboBox({ rubros, props }) {\n  const { id, api, field } = props;\n\n  rubros = [\n    ...rubros,\n    {\n      rubro: '',\n    },\n  ];\n  const [selectedRubro, setSelectedRubro] = useState({\n    rubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedRubro(newValue);\n     \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      // disablePortal\n      id=\"combo-box-demo\"\n      options={rubros}\n      isOptionEqualToValue={(op, val) => op.rubro === val.rubro}\n      getOptionLabel={option => option.rubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxSub({ subRubros, props }, params) {\n  const { id, api, field } = props;\n  // console.log('props que recibe el combo', props?.row?.rubroID.id);\n  subRubros = [\n    \n    ...subRubros.filter(subR => subR.rubroId === parseInt(props?.row?.rubroID.id)),\n    {\n      subRubro: '',\n    },\n  ];\n\n  const [selectedsubRubro, setSelectedsubRubro] = useState({\n    subRubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedsubRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedsubRubro(newValue);\n      \n        \n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }}\n      // disablePortal\n      id=\"combo-box-demo\"\n      options={subRubros}\n      isOptionEqualToValue={(op, val) => op.subRubro === val.subRubro}\n      getOptionLabel={option => option.subRubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"subRubro\" />}\n    />\n  );\n}\n\n","import { Container, Box, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormProveedor } from 'src/components/proveedores/FormProveedor';\nimport { GrillaProveedor } from 'src/components/proveedores/GrillaProveedor';\n\nexport function Proveedores({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>Proveedores | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n            <Box sx={{ pt: 3 }}>\n              <FormProveedor idSociety={idSociety} loggedUser={loggedUser} />\n            </Box>\n          </Hidden> \n          <Box sx={{ pt: 3 }}>\n            <GrillaProveedor idSociety={idSociety} loggedUser={loggedUser}/>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Button } from '@mui/material';\n\n\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n/// import FormControlLabel from '@mui/material/FormControlLabel';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularPersona({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(newData => postMethod(`persona/agregar/${idSociety}`, newData), {\n    onSuccess: () => {\n      queryClient.refetchQueries(['persona', idSociety]);\n    },\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        nombre: '',\n        mail: null,\n        telefono: null,\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        let bool = await checkName(idSociety, values.nombre);\n        !bool\n          ? mutate(values) // console.log('ya lo tenés'); //cambiar por un pop up\n          : resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field as={TextField} label=\"Nombre\" type=\"string\" maxLength={40} name=\"nombre\" />\n          <Field as={TextField} label=\"Email\" type=\"string\" maxLength={100} name=\"mail\" />\n          <Field as={TextField} label=\"Teléfono\" type=\"string\" maxLength={11} name=\"telefono\" />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nasync function checkName(idSociety, nombre) {\n  let n = \"\" + nombre ;\n  // controla blanco y espacios\n  if (n.trim() === '') {\n    return true;\n  }\n  // controla si ya existe el nombre\n  let url = `persona/mostrar/${idSociety}/${nombre}`;\n  return Boolean(await getMethod(url));\n}\n","import React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Button, Box } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  // { field: 'id', headerName: 'ID', width: 100 , headerAlign: 'center',},\n  {\n    field: 'nombre',\n    headerName: 'Nombre',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    /*\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },*/\n  },\n\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    /*\n    valueFormatter: ({ value }) => {\n      value = value.split('');\n      value.splice(2, 0, '-');\n      value.splice(5, 0, '.');\n      value.splice(9, 0, '.');\n      value.splice(13, 0, '-');\n      return value.join('');\n    },*/\n  },\n\n  {\n    field: 'delete',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaPersona({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    async (id) => {\n      await deleteMethod(`persona/eliminar/${idSociety}`, id);\n    },\n    {\n      onSuccess: async () => await queryClient.refetchQueries(['persona', idSociety]),\n    }\n  );\n\n  const { data, isLoading, error } = useQuery(['persona', idSociety], () =>\n    getMethod(`persona/listar/${idSociety}`)\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    let newData = {\n      id: e.id,\n      [e.field]: e.props.value,\n    };\n    postMethod(`persona/modificar/${idSociety}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={data.map((el) => ({\n          id: el.id,\n          nombre: el.nombre,\n          mail: el.mail,\n          telefono: el.telefono,\n          CUIT: el.CUIT,\n          onDelete: () => {\n            mutate(el.id);\n          },\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        scrollbarSize\n        onEditCellChange={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@mui/material';\nimport { ManipularPersona } from 'src/components/persona/ManipularPersona';\nimport { GrillaPersona } from 'src/components/persona/GrillaPersona';\n\nexport function Persona({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Fiduciante | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <ManipularPersona idSociety={idSociety} />\n          </Box>\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaPersona idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Button } from '@mui/material';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularEmpresa({ idSociety }) {\n  const queryClient = useQueryClient();\n  const { mutate } = useMutation(newData => postMethod(`empresa/agregar/${idSociety}`, newData), {\n    onSuccess: () => queryClient.refetchQueries(['empresas', idSociety]),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        razonSocial: '',\n        mail: '',\n        telefono: '',\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        !(await checkCuit(idSociety, values.CUIT))\n          ? mutate(values) // console.log('ya lo tenés'); //cambiar por un pop up\n          : resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field as={TextField} label=\"Razón Social\" type=\"string\" name=\"razonSocial\" />\n          <Field as={TextField} label=\"Email\" type=\"string\" name=\"mail\" />\n\n          <Field\n            as={TextField}\n            label=\"Teléfono\"\n            type=\"string\"\n            maxLength={11}\n            name=\"telefono\"\n            onChange={event => onlyNumbers(event, setFieldValue, 'telefono')}\n          />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nasync function checkCuit(idSociety, cuit) {\n  let url = `empresa/mostrar/${idSociety}/${cuit}`;\n  return Boolean(await getMethod(url));\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n","import React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Button, Box } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  // { field: 'id', headerName: 'ID', width: 100 , headerAlign: 'center',},\n  {\n    field: 'razonSocial',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 150,\n    // editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      value = value.split('');\n      value.splice(2, 0, '-');\n      value.splice(5, 0, '.');\n      value.splice(9, 0, '.');\n      value.splice(13, 0, '-');\n      return value.join('');\n    },\n  },\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaEmpresa({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    async (id) => {\n      await deleteMethod(`empresa/eliminar/${idSociety}`, id);\n    },\n    {\n      onSuccess: async () => await queryClient.refetchQueries(['empresas', idSociety]),\n    }\n  );\n\n  const { data, isLoading, error } = useQuery(['empresas', idSociety], () =>\n    getMethod(`empresa/listar/${idSociety}`)\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    let newData = {\n      id: e.id,\n      [e.field]: e.props.value,\n    };\n    postMethod(`empresa/modificar/${idSociety}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={data.map((el) => ({\n          id: el.id,\n          razonSocial: el.razonSocial,\n          CUIT: el.CUIT,\n          mail: el.mail,\n          telefono: el.telefono,\n          onDelete: () => {\n            mutate(el.id);\n          },\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        scrollbarSize\n        onEditCellChange={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@mui/material';\n\nimport { ManipularEmpresa } from 'src/components/empresa/ManipularEmpresa';\nimport { GrillaEmpresa } from 'src/components/empresa/GrillaEmpresa';\n\nexport function Empresa({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Empresas | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <ManipularEmpresa idSociety={idSociety} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaEmpresa idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularFideicomiso({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    newData => postMethod(`fideicomiso/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: () => {\n        queryClient.refetchQueries(['fideicomiso', idSociety]);\n      },\n    }\n  );\n\n  return (\n    <Formik\n      initialValues={{\n        nombre: '',\n        fechaInicio: null,\n        fechaFin: null,\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        let bool = await checkIfNameExists(idSociety.id, values.nombre);\n        !bool && mutate(values);\n\n        resetForm();\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field\n            as={TextField}\n            required\n            label='Nombre Fideicomiso'\n            size=\"small\"\n            type='string'\n            maxLength={40}\n            name='nombre'\n          />\n          <Field name='fechaInicio' >\n            {({ field: { value, name }, form: { setFieldValue } }) => (\n              <Picker label='Inicio' value={value} setFieldValue={setFieldValue} name={name} />\n            )}\n          </Field>\n          <Field name='fechaFin'>\n            {({ field: { value, name }, form: { setFieldValue } }) => (\n              <Picker\n                label='Finalizacion'\n                value={value}\n                setFieldValue={setFieldValue}\n                name={name}\n              />\n            )}\n          </Field>\n\n          <Button type='submit' disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n\n  function Picker({ value, name, setFieldValue, label }) {\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label={label}\n          value={value}\n          inputFormat='dd/MM/yyyy'\n          renderInput={params => <TextField  size=\"small\" {...params} />}\n          onChange={value => setFieldValue(name, value)}\n        />\n      </LocalizationProvider>\n    );\n  }\n\n  async function checkIfNameExists(idSociety, nombre) {\n    return Boolean(await getMethod(`fideicomiso/mostrar/${idSociety}/${nombre}`));\n  }\n}\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\n// import { Delete as DeleteIcon } from '@mui/icons-material';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { mostrarFecha } from 'src/utils/utils';\n// import { Uploader } from 'src/components/auxiliares/Uploader';\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n//const columns = (color, setColor, id,  setNewLogoFlag, setIsPromptOpen, setRowIdToDelete) => [\nconst columns = (color, setColor, id,  setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'nombre',\n    headerName: 'Nombre',\n    width: 200,\n    headerAlign: 'center',\n    align: 'left',\n  },\n  {\n    field: 'fechaInicio',\n    headerName: 'Inicio',\n    editable: true,\n    width: 170,\n    type: 'date',\n    headerAlign: 'center',      \n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n    \n  },\n  {\n    field: 'fechaFin',\n    headerName: 'Finalización',\n    editable: true,\n    width: 170,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n  },\n  /*\n  {\n    field: 'cloud',\n    headerName: 'Cloud',\n    editable: true,\n    width: 200,\n    headerAlign: 'center',\n    align: 'left',\n  },*/\n\n  {\n    field: 'logo',\n    headerName: 'Logo',\n    width: 150,\n    renderCell: passedData =>\n      passedData.row.logo ? (\n        <img\n          style={{ display: 'block', margin: 'auto', width: '30%' }}\n          src={`${apiServerUrl}sociedades/${id}/${passedData.row.logo}`}\n          alt=\"logo\"\n        />\n      ): (\"\"), \n  },\n\n  {\n    field: 'colorElegido',\n    headerName: 'Color',\n    width: 150,\n    editable: false,\n    renderCell: ({ row: { colorElegido } }) => (\n      <div style={{ width: '100%', height: '100%', background: colorElegido }}></div>\n    ),\n    renderEditCell: ({ row: { colorElegido } }) => (\n      <ColorPicker\n        originalColor={colors.filter(color => color.css === colorElegido)[0]}\n        color={color}\n        setColor={setColor}\n        colorOptions={colors}\n      />\n    ),\n  },\n\n];\n\nconst colors = [\n  { label: 'red', css: 'red' },\n  { label: 'DarkGreen', css: 'DarkGreen' },\n  { label: 'MidnightBlue', css: 'MidnightBlue' },\n  { label: 'black', css: 'black' },\n  { label: 'Salmon', css: 'LightSalmon' },\n  { label: 'Khaki', css: 'Khaki' },\n  { label: 'Bisque', css: 'Bisque' },\n  { label: 'Plum', css: 'Plum' },\n  { label: 'Orchid', css: 'Orchid' },\n  { label: 'Chocolate', css: 'Chocolate' },\n  { label: 'LightSteelBlue', css: 'LightSteelBlue' },  \n  { label: 'orange', css: 'orange' },\n  { label: 'green', css: 'green' }\n \n];\n\nexport function GrillaFideicomiso({ idSociety }) {\n\n  const [color, setColor] = useState(null);\n  //const [fechaInicio, setFechaInicio] = useState(null);\n  // const [newLogoFlag, setNewLogoFlag] = useState(false);\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: fideicomisoInformation,\n    isLoading,\n    error,\n  } = useQuery(['fideicomiso', idSociety], () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idFideicomiso => await deleteMethod(`fideicomiso/eliminar/${idSociety.id}`, { id: idFideicomiso }),\n    {\n      onMutate: async idFideicomiso => {\n        await queryClient.cancelQueries(['fideicomiso', idSociety]);\n        const prevData = queryClient.getQueryData(['fideicomiso', idSociety]);\n        const newData = prevData.filter(fideicomiso => fideicomiso.id !== idFideicomiso);\n        queryClient.setQueryData(['fideicomiso', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idFideicomiso, context) => queryClient.setQueryData(['fideicomiso', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['fideicomiso', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`fideicomiso/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['fideicomiso', idSociety]);\n        const prevData = queryClient.getQueryData(['fideicomiso', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(fideicomiso => fideicomiso.id !== id),\n          { ...prevData.find(fideicomiso => fideicomiso.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['fideicomiso', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['fideicomiso', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['fideicomiso', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={fideicomisoInformation.map(fideicomiso => ({\n            id: fideicomiso.id,\n            nombre: fideicomiso.nombre,\n            fechaInicio: fideicomiso.fechaInicio,\n            fechaFin: fideicomiso.fechaFin,\n            colorElegido: fideicomiso.color,\n            logo: fideicomiso.logo,\n            cloud: fideicomiso.cloud,\n            deleteId: fideicomiso.id,\n          }))}\n          onCellEditCommit={modifyData}\n          //columns={columns(color, setColor, idSociety?.id, setNewLogoFlag, setIsPromptOpen, setRowIdToDelete)}\n          columns={columns(color, setColor, idSociety?.id, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\n\nfunction ColorPicker({ color, setColor, colorOptions, originalColor }) {\n  useEffect(\n    () =>\n      setColor(previousStateColor =>\n        originalColor?.css !== previousStateColor?.css ? originalColor : previousStateColor\n      ),\n    [originalColor, setColor]\n  );\n  return (\n    <Autocomplete\n      value={color}\n      onChange={(event, newValue) => {\n        setColor(newValue);\n      }}\n      options={colorOptions}\n      sx={{ width: 300 }}\n      isOptionEqualToValue={(option, value) => option.label === value.label}\n      renderInput={params => <TextField style={{ background: color?.css }} {...params} />}\n      renderOption={(props, option, c) => {\n        // console.log(props, option, c);\n        return (\n          <div {...props} style={{ background: option?.css }}>\n            {option.label}\n          </div>\n        );\n      }}\n    />\n  );\n}\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { ManipularFideicomiso } from 'src/components/fideicomiso/ManipularFideicomiso';\nimport { GrillaFideicomiso } from 'src/components/fideicomiso/GrillaFideicomiso';\n\nexport function Fideicomiso({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Fideicomisos | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <ManipularFideicomiso idSociety={idSociety} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaFideicomiso idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  TextField,\n  Autocomplete,\n  createFilterOptions,\n  Dialog,\n  DialogContent,\n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useMutation, useQuery } from 'react-query';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nconst filter = createFilterOptions();\n\nexport function DatosPrincipalesFideicomiso({ selectedFideicomisoData, idSociety }) {\n  \n  const [managerId, setManagerId] = useState();\n  useEffect(() => setManagerId(selectedFideicomisoData?.personaId), [selectedFideicomisoData]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { data: contactInfo } = useQuery(['persona', managerId], () =>\n    getMethod(`persona/mostrar/${idSociety.id}/${managerId}`)\n  );\n\n  const { data: directionInfo } = useQuery(\n    ['localización', selectedFideicomisoData?.localizacionId],\n    () =>\n      getMethod(`localizacion/mostrar/${idSociety.id}/${selectedFideicomisoData?.localizacionId}`)\n  );\n\n  const { data: peopleInfo } = useQuery(['personas'], () =>\n    getMethod(`persona/listar/${idSociety.id}`)\n  );\n\n  const { mutate: setManagerInFideicomiso } = useMutation(newData =>\n    postMethod(`fideicomiso/modificar/${idSociety.id}`, newData)\n  );\n\n  const { mutate: addNewPerson } = useMutation(\n    newData => postMethod(`persona/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: data => {\n        setManagerId(data.id);\n        setManagerInFideicomiso({\n          id: selectedFideicomisoData.id,\n          personaId: data.id,\n        });\n      },\n    }\n  );\n  // console.log('contactInfo:', contactInfo);\n\n  const rows = [\n    {\n      id: 1,\n      contacto: contactInfo?.nombre,\n      fechaInicio: selectedFideicomisoData?.fechaInicio,\n      fechaFin: selectedFideicomisoData?.fechaFin,\n      direccion: directionInfo?.direccion,\n    },\n  ];\n\n  const columns = [\n    {\n      field: 'contacto',\n      headerName: 'Contacto',\n      width: 350,\n      headerAlign: 'center',\n      align: 'center',\n    },\n    {\n      field: 'fechaInicio',\n      headerName: 'Inicio',\n      width: 160,\n      headerAlign: 'center',\n      align: 'center',\n      type: 'date',\n      nameFormatter: ({ name }) =>\n        new Date(name).toLocaleDateString('es-AR', {\n          year: 'numeric',\n          month: 'short',\n          timeZone: 'UTC',\n        }),\n      editable: true,\n    },\n    {\n      field: 'fechaFin',\n      headerName: 'Fin',\n      width: 100,\n      headerAlign: 'center',\n      align: 'center',\n      type: 'date',\n      nameFormatter: ({ name }) =>\n        new Date(name).toLocaleDateString('es-AR', {\n          year: 'numeric',\n          month: 'short',\n          timeZone: 'UTC',\n        }),\n      editable: true,\n    },\n    {\n      field: 'direccion',\n      headerName: 'Dirección',\n      width: 200,\n      editable: false,\n      headerAlign: 'center',\n      align: 'center',\n    },\n  ];\n  return (\n    <>\n      <AlertDialog isDialogOpen={isDialogOpen} setIsDialogOpen={setIsDialogOpen} />\n      <Box width={'auto'}>\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h3\">\n          {selectedFideicomisoData?.nombre}\n        </Typography>\n        {selectedFideicomisoData && (\n          <DataGrid\n            columns={columns}\n            rows={rows}\n            rowHeight={75}\n            headerHeight={35}\n            hideFooter\n            autoHeight={'false'}\n            pageSize={1}\n            onCellDoubleClick={e => {\n              if (e.field === 'contacto') {\n                setIsDialogOpen(true);\n                // console.log('isDialogOpen:', isDialogOpen);\n              }\n            }}\n          />\n        )}\n      </Box>\n    </>\n  );\n\n  function AlertDialog({ isDialogOpen, setIsDialogOpen }) {\n    return (\n      <>\n        <Dialog\n          open={isDialogOpen}\n          onClose={() => setIsDialogOpen(false)}\n          fullWidth\n          style={{ transform: 'translate(0, -200px)' }}\n        >\n          <DialogContent>\n            <Select peopleInfo={peopleInfo} closeDialog={() => setIsDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </>\n    );\n  }\n\n  function Select({ peopleInfo, closeDialog }) {\n    return (\n      <Autocomplete\n        value={contactInfo?.nombre}\n        onChange={(event, newName) => {\n          if (typeof newName === 'string') {\n            //agrego desde el teclado sin ir a agregar\n            addNewPerson({ nombre: newName });\n            closeDialog();\n          } else if (newName && newName.inputValue) {\n            //agrego nuevo yendo a \"agregar\" en el dd\n            addNewPerson({ nombre: newName.inputValue });\n            closeDialog();\n          } else {\n            //elijo opción del dd\n            if (newName?.id !== managerId) {\n              setManagerId(newName.id);\n              setManagerInFideicomiso({\n                id: selectedFideicomisoData.id,\n                personaId: newName.id,\n              });\n              closeDialog();\n            }\n          }\n        }}\n        filterOptions={(options, params) => {\n          // console.log('options:', options);\n          const filtered = filter(options, params);\n          const { inputValue } = params;\n          const isExisting = options.some(option => inputValue === option.nombre);\n          if (inputValue !== '' && !isExisting) {\n            filtered.push({\n              inputValue,\n              nombre: `agregar ${inputValue}`,\n            });\n          }\n\n          return filtered;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        options={peopleInfo}\n        getOptionLabel={option => {\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.nombre;\n        }}\n        renderOption={(props, option) => <li {...props}>{option.nombre}</li>}\n        freeSolo\n        renderInput={params => <TextField {...params} />}\n      />\n    );\n  }\n}\n","import { useState } from 'react';\nimport { TextField, Button, Autocomplete } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularDetalleFideicomiso({ idSociety, selectedFideicomisoData }) {\n  // console.log('selectedFideicomisoData', selectedFideicomisoData);\n  const { data: typesOfProducts } = useQuery(\n    ['typesOfProducts'],\n    () => getMethod(`configuracion/listar/${idSociety.id}/tipo_producto`),\n    {\n      initialData: [\n        {\n          id: 7,\n          descripcion: 'UF',\n          codigo: 1,\n          descripcionLarga: 'Unidad funcional',\n        },\n        {\n          id: 8,\n          descripcion: 'Cod. Nom.',\n          codigo: 2,\n          descripcionLarga: 'Código de nomenclatura',\n        },\n        {\n          id: 9,\n          descripcion: 'Cochera',\n          codigo: 3,\n          descripcionLarga: 'Cochera Auto',\n        },\n        {\n          id: 10,\n          descripcion: 'Cochera Moto',\n          codigo: 4,\n          descripcionLarga: 'Cochera Moto',\n        },\n        {\n          id: 11,\n          descripcion: 'Baulera',\n          codigo: 5,\n          descripcionLarga: 'Baulera',\n        },\n        {\n          id: 12,\n          descripcion: 'Local',\n          codigo: 6,\n          descripcionLarga: 'Local comercial',\n        },\n        {\n          id: 13,\n          descripcion: 'Lote',\n          codigo: 7,\n          descripcionLarga: 'Lote, terreno',\n        },\n        {\n          id: 14,\n          descripcion: 'Casa',\n          codigo: 8,\n          descripcionLarga: 'Casa',\n        },\n        {\n          id: 15,\n          descripcion: 'Bungalo',\n          codigo: 9,\n          descripcionLarga: 'Bungalo',\n        },\n      ],\n    }\n  );\n  // console.log('typesOfProducts:', typesOfProducts);\n\n  const queryClient = useQueryClient();\n  const { mutate: addProduct } = useMutation(\n    newData => postMethod(`producto/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['productos', idSociety, selectedFideicomisoData]),\n    }\n  );\n\n  const [typeInForm, setTypeInForm] = useState(null);\n\n  return (\n    <Formik\n      initialValues={{\n        code: '',\n        type: '',\n        description: '',\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        // console.log('values:', values);\n        addProduct({\n          fideicomisoId: selectedFideicomisoData.id,\n          codigo: values.code,\n          descripcion: values.description,\n          tipo: values.type.codigo,\n        });\n        resetForm();\n        setTypeInForm(null);\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field\n            as={TextField}\n            label=\"Código\"\n            type=\"string\"\n            maxLength={40}\n            size={'small'}\n            name=\"code\"\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label=\"Tipo\"\n            //disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setTypeInForm(newValue);\n              setFieldValue('type', newValue);\n            }}\n            value={typeInForm}\n            getOptionLabel={option => option.descripcion}\n            isOptionEqualToValue={(option, value) => option.descripcion === value.descripcion}\n            options={typesOfProducts}\n            renderInput={params => <TextField {...params} label=\"Tipo\" />}\n          />\n\n          <Field\n            as={TextField}\n            size={'small'}\n            label=\"Descripcion\"\n            type=\"string\"\n            maxLength={100}\n            name=\"description\"\n          />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n          \n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Box, Button } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  {\n    field: 'codigo',\n    headerName: 'Código',\n    width: 140,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'metros',\n    headerName: 'Metros',\n    type: 'number',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n  },\n\n  {\n    field: 'precioULT',\n    type: 'number',\n    headerName: 'Precio',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: '',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaDetalleFideicomiso({ idSociety, selectedFideicomisoData }) {\n  // console.log('idSociety:', idSociety);\n  // console.log('selectedFideicomisoData:', selectedFideicomisoData);\n  const {\n    data: products,\n    isLoading,\n    error,\n  } = useQuery(['productos', idSociety, selectedFideicomisoData], () =>\n    getMethod(`producto/listar/${idSociety?.id}/${selectedFideicomisoData?.id}`)\n  );\n\n  const queryClient = useQueryClient();\n\n  const { mutate: deleteProduct } = useMutation(\n    async id =>\n      await deleteMethod(`producto/eliminar/${idSociety?.id}`, {\n        fideicomisoId: selectedFideicomisoData?.id,\n        id: id,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['productos', idSociety, selectedFideicomisoData]),\n    }\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    // console.log('e:', e);\n    let newData = {\n      id: e.id,\n      idFideicomiso: selectedFideicomisoData?.id,\n      [e.field]: e.value,\n    };\n    // console.log('newData:', newData);\n    postMethod(`producto/modificar/${idSociety?.id}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={products.map(el => ({\n          id: el.id,\n          codigo: el.codigo,\n          metros: el.metros,\n          precioULT: el.precioULT,\n          onDelete: () => deleteProduct(el.id),\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        sortModel={[\n          {\n            field: 'codigo',\n            sort: 'asc',\n          },\n        ]}\n        scrollbarSize\n        onCellEditCommit={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { getMethod } from 'src/utils/api';\nimport { Container, Box, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { DatosPrincipalesFideicomiso } from 'src/components/fideicomiso/DatosPrincipalesFideicomiso';\nimport { ManipularDetalleFideicomiso } from 'src/components/detalleFideicomiso/ManipularDetalleFideicomiso';\nimport { GrillaDetalleFideicomiso } from 'src/components/detalleFideicomiso/GrillaDetalleFideicomiso';\n\nexport function DetalleFideicomiso({ idSociety }) {\n  const { nombreFideicomiso } = useParams();\n\n  const { data } = useQuery(['fideicomiso', idSociety.id], () =>\n    getMethod(`fideicomiso/listar/${idSociety.id}`)\n  );\n\n  const selectedFideicomisoData = data?.find(el => el.nombre === nombreFideicomiso);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {nombreFideicomiso} | {idSociety?.nombre}\n        </title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <DatosPrincipalesFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n              Grilla de Productos\n            </Typography>\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <ManipularDetalleFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaDetalleFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { IconButton, Collapse, Box, TextField, Button, Autocomplete, Alert } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { getMethod, postMethod } from 'src/utils/api';\n\n\n\nexport function ManipularOP({ idSociety, loggedUser  }) {\n\n  const { data: fideicomisos } = useQuery(\n    ['fideicomisos'],\n    () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n\n  const { data: proveedores } = useQuery(\n    ['proveedores'],\n    () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n\n  const { data: ddfacturas } = useQuery(\n    ['ddfacturas'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: addOP } = useMutation(\n    newData => postMethod(`OP/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety])\n    }\n  );\n\n\n  const [fideInForm, setFideInForm] = useState(null);\n  const [rsInForm, setRsInForm] = useState(null);\n  const [factInForm, setFactInForm] = useState(null);  \n  const [open, setOpen] = useState(false);\n  \n  return (\n    <Formik\n      initialValues={{\n        \n        numero: '',\n        montoTotal: '',\n        fechaIngreso: new Date(),\n\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        \n        addOP({\n          fideicomisoId: values.fideicomiso.id,\n          empresaId: values.empresa.id,\n          rubroId: values.empresa.rubroId,\n          subRubroId: values.empresa.subrubroId,\n          facturaId: values.factura.id,\n          creador: loggedUser.id ,\n                    \n        });\n\n        //resetForm();\n        setOpen(true);\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Fideicomiso'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFideInForm(newValue);\n              setFieldValue('fideicomiso', newValue);\n            }}\n            value={fideInForm}\n            getOptionLabel={option => option.nombre}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(fideicomisos? fideicomisos:[])}\n            renderInput={params => <TextField {...params} label='Fideicomiso' />}\n          />\n          \n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Razon Social'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setRsInForm(newValue);\n              setFieldValue('empresa', newValue);\n            }}\n            value={rsInForm}\n            getOptionLabel={option => option.razonSocial}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField {...params} label='Razon Social' />}\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Factura N॰'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFactInForm(newValue);\n              setFieldValue('factura', newValue);\n            }}\n            value={factInForm}\n            getOptionLabel={option => option.numero}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={ddfacturas? ddfacturas?.filter(factura => factura?.empresaId === rsInForm?.id):[]}\n            renderInput={params => <TextField {...params} label='Factura N॰' />}\n          />\n\n          <Button id='bagregar' variant=\"text\" type='submit' disabled={isSubmitting}>\n            Agregar\n          </Button>\n\n        \n\n          <Box sx={{ width: '100%' }}>\n            <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>         \n          </Box>\n\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\n\n\n","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst styles = StyleSheet.create({\n\n    container: {\n        flexDirection: 'row',\n        //borderBottomColor: '#bff0fd',\n        //backgroundColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 21,\n        fontSize: 10,\n        textAlign: 'center',\n        fontStyle: 'bold',\n        flexGrow: 1,\n    },\n\n\n  row: {\n    flexDirection: 'row',\n    //borderBottomColor: '#bff0fd',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  description: {\n      width: '55%',\n      textAlign: 'left',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      paddingLeft: 8,\n  },\n  qty: {\n      width: '15%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n  rate: {\n      width: '15%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n  amount: {\n    width: '15%'\n},\n  amountRow: {\n      width: '15%',\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n});\n\n\n  const tablaFacturas = ({dataOP, dataFacturas}) => (\n   \n   <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }}>\n       \n       <View /* Encabezado*/   \n       style={[styles.container, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color2:'#ffffff'}]}>\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Proveedor</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Detalle</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Nº Factura</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Nº OC</Text>\n            <Text style={[styles.amount, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Importe</Text>\n      </View>\n  \n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.numero}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.numero}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.numero}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.numero}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.numero}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.montoTotal}</Text>\n      </View>\n\n\n    </View>\n  );\n  \n  export default tablaFacturas","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst styles = StyleSheet.create({\n\n  espacio: { \n    height: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  col1: {\n    width: '11%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col2: {\n    width: '55%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col3: {\n    width: '33%',\n    textAlign: 'center',\n    paddingLeft: 8,\n  },\n\n});\n\n\n\n  const tablaTEC = ({dataOP}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }} >\n       \n       <View style={styles.espacio} >\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>Detalles:</Text>\n            <Text style={styles.col2}></Text>\n            <Text style={styles.col3}></Text>\n      </View>\n       \n  \n       <View style={styles.row} >\n            <Text style={styles.col1}></Text>\n            <Text style={styles.col2}>{dataOP?.descripcion}</Text>\n            <Text style={styles.col3}>Aprobado por {dataOP?.auth_obra[0]?.usuarios[0]?.user}</Text>\n      </View>    \n\n    </View>\n  );\n  \n  export default tablaTEC","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst styles = StyleSheet.create({\n\n  espacio: { \n    height: 8,\n  },\n\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  rowbis: {\n    flexDirection: 'row',\n    alignItems: 'left',\n    height: 24,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  col1: {\n    width: '33%',\n    textAlign: 'right',\n    paddingLeft: 8,\n  },\n  col1bis: {\n    width: '33%',\n    textAlign: 'right',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n  col2bis: {\n    width: '33%',\n    textAlign: 'center',\n    backgroundColor: '#B4B4B4',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n  col3: {\n    width: '33%',\n    textAlign: 'center',\n    paddingLeft: 8,\n  },\n  col3bis: {\n    width: '33%',\n    textAlign: 'center',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n\n});\n\n  const tablaADM = ({dataOP}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', }} >\n          \n       <View style={styles.espacio} >\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n      </View>\n       \n  \n       <View style={styles.row} >\n            <Text style={styles.col1}>FACTURAS:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.monto}</Text>\n            <Text style={styles.col3}></Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET SUSS:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_SUSS}</Text>\n            <Text style={styles.col3}></Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET GAN:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_GAN}</Text>\n            <Text style={styles.col3}></Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET IVA:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_IVA}</Text>\n            <Text style={styles.col3}></Text>\n      </View>\n\n      <View style={styles.rowbis} >\n            <Text style={styles.col1bis}>Monto a Abonar:</Text>\n            <Text style={styles.col2bis}>${dataOP?.monto_a_pagar}</Text>\n            <Text style={styles.col3bis}>Aprobado por {dataOP?.auth_adm[0]? dataOP.auth_adm[0].usuarios[0]?.user:\"\"}</Text>\n      </View>\n\n     \n\n    </View>\n  );\n  \n  export default tablaADM","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst styles = StyleSheet.create({\n\n  container: {\n      flexDirection: 'row',\n      //borderBottomColor: '#bff0fd',\n      //backgroundColor: '#bff0fd',\n      borderBottomWidth: 1,\n      alignItems: 'center',\n      height: 21,\n      fontSize: 10,\n      textAlign: 'center',\n      fontStyle: 'bold',\n      flexGrow: 1,\n  },\n\n\n  row: {\n    flexDirection: 'row',\n    // borderBottomColor: '#bff0fd',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 8,\n    fontStyle: 'bold',\n  },\n  col1: {\n      width: '16%',\n      textAlign: 'left',\n      //borderRightColor: bcolor,\n      borderRightWidth: 1,\n      paddingLeft: 5,\n  },\n  col2: {\n      width: '20%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'left',\n      paddingLeft: 5,\n  },\n  col3: {\n      width: '20%',\n      //borderRightColor: '#bff0fd', son 2\n      borderRightWidth: 1,\n      textAlign: 'left',\n      paddingLeft: 5,\n  },\n  col4: {\n    width: '12%',\n    //borderRightColor: '#bff0fd',\n    borderRightWidth: 1,\n    textAlign: 'center',\n    paddingLeft: 5,\n},\n  col5: {\n    width: '12%',\n    textAlign: 'right',\n    paddingRight: 5,\n  },\n  rowf: {\n    flexDirection: 'row',\n    borderBottomColor: '#ffffff',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  descriptionf: {\n    width: '88%',\n    textAlign: 'right',\n    //borderRightColor: '#bff0fd',\n    borderRightWidth: 1,\n    paddingRight: 8,\n  },\n  totalf: {\n    width: '12%',\n    textAlign: 'right',\n    paddingRight: 8,\n  },\n});\n\n\n  const tablaPagos = ({dataOP, arr_id, arr_banco, arr_cid, arr_cuenta}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }}>\n       \n      <View /* Encabezado*/   \n       style={[styles.container, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color2:'#ffffff'}]}>\n         <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Banco</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Cuenta Nro</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Comprobante</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Modo</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Fecha</Text>\n        <Text style={styles.col5}>Monto</Text>\n        \n      </View> \n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco1)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro1)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.descri1}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo1}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha1)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto1}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco2)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro2)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.descri2}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo2}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha2)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto2}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco3)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro3)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.descri3}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo3}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha3)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto3}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco4)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro4)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.descri4}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo4}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha4)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto4}</Text>\n      </View>\n\n   \n\n      <View style={styles.rowf}>\n            <Text style={[styles.descriptionf,{ borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>TOTAL</Text>\n            <Text style={styles.totalf}>{(parseInt(dataOP?.OPpago?.monto1? dataOP?.OPpago?.monto1:0) + parseInt(dataOP?.OPpago?.monto2? dataOP?.OPpago?.monto2:0)+ parseInt(dataOP?.OPpago?.monto3? dataOP?.OPpago?.monto3:0) + parseInt(dataOP?.OPpago?.monto4? dataOP?.OPpago?.monto4:0))}</Text>\n      </View>\n      \n      \n\n    </View>\n  );\n  \n  export default tablaPagos","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst borderColor = '#90e5fc';\nconst styles = StyleSheet.create({\n    tableContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 8,\n\n    \n    },\n    container: {\n      flexDirection: 'row',\n\n      borderBottomWidth: 1,\n      alignItems: 'center',\n      height: 21,\n      textAlign: 'center',\n      fontStyle: 'bold',\n      flexGrow: 1,\n  },\n  description: {\n      width: '60%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  qty: {\n      width: '10%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  rate: {\n      width: '15%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  amount: {\n      width: '15%'\n  },\n\n  espacio: { \n    height: 8,\n  },\n\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 15,\n    fontSize: 7,\n    fontStyle: 'bold',\n  },\n\n  col1: {\n    width: '30%',\n    textAlign: 'right',\n    paddingLeft: 8,\n  },\n  col2: {\n    width: '30%',\n    textAlign: 'left',\n\n    paddingLeft: 8,\n  },\n\n  col3: {\n    width: '40%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n\n\n});\n\n  const tablaPie = ({dataOP}) => (\n    <View style={styles.tableContainer}>\n\n       <View style={styles.row} >\n            <Text style={styles.col1}>CBU:</Text>\n            <Text style={styles.col2}>{dataOP?.empresas[0]?.CBU}</Text>\n            <Text style={styles.col3}>Cuenta Bancaria: {dataOP?.empresas[0]?.nroCuenta}</Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>CUIT:</Text>\n            <Text style={styles.col2}>{dataOP?.empresas[0]?.CUIT}</Text>\n            <Text style={styles.col3}>Email:   {dataOP?.empresas[0]?.mail}</Text>\n      </View>      \n     \n\n    </View>\n  );\n  \n  export default tablaPie","import React from 'react';\nimport { Page, Document, Image } from '@react-pdf/renderer';\nimport TablaFacturas from './tablaFacturas';\nimport TablaTEC from './tablaTEC';\nimport TablaADM from './tablaADM';\nimport TablaPagos from './tablaPagos';\nimport TablaPie from './tablaPie';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst styles = StyleSheet.create({\n    page: {\n        fontFamily: 'Helvetica',\n        fontSize: 11,\n        paddingTop: 10,\n        paddingLeft:60,\n        paddingRight:60,\n        lineHeight: 1.5,\n        flexDirection: 'column',\n    }, \n    logo: {\n        height: 43,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    titleContainer:{\n      flexDirection: 'row',\n      marginTop: 24,\n    },\n    reportTitle:{\n        color: '#101010',\n        letterSpacing: 4,\n        fontSize: 22,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n    reportTitleFide:{\n        \n        letterSpacing: 4,\n        fontSize: 22,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n    subreportTitle:{\n      color: '#101010',\n      letterSpacing: 4,\n      fontSize: 18,\n      textAlign: 'center',\n      textTransform: 'uppercase',\n    },\n    saltolinea:{\n        fontSize: 8,\n    },\n    invoiceNoContainer: {\n      flexDirection: 'row',\n      marginTop: 36,\n      justifyContent: 'flex-end'\n    },\n    invoiceDateContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n    },\n    invoiceDate: {\n            fontSize: 12,\n            fontStyle: 'bold',\n    },\n\n  });\n\n  var arr_id = [];\n  var arr_banco = [];\n  var arr_cid = [];\n  var arr_cuenta = [];\n  \n  if(JSON.parse(localStorage.getItem(\"bancos\"))){\n\n    var bancos = JSON.parse(localStorage.getItem(\"bancos\"));\n    var banco_en_blanco = {id:0, banco:\"\", descripcionLarga:\"\" };\n    bancos.push(banco_en_blanco);\n\n\n    for (var i = 0; i < bancos.length; i++) {\n        arr_id.push(bancos[i].id);\n        arr_banco.push(bancos[i].banco);\n    }   \n\n    var cuentasbanco = JSON.parse(localStorage.getItem(\"cuentasbanco\"));  \n    var cuenta_en_blanco = {id: 0,  bancoId: 0,  cuentaBanco: \"\",  descripcionLarga: \"\",  bancos: [{banco: \"\"}]};\n    cuentasbanco.push(cuenta_en_blanco);\n\n\n    for (var j= 0; j < cuentasbanco.length; j++) {\n        arr_cid.push(cuentasbanco[j].id);\n        arr_cuenta.push(cuentasbanco[j].cuentaBanco);\n    } \n\n  }\n  \n\n  const orden_de_pago = ({dataOP, dataFacturas, apiServerUrl, idSociedad}) => (\n\n            <Document >\n                <Page size=\"A4\" style={styles.page}> \n\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>  \n\n                    <View style={{flexDirection: 'row',marginLeft: '0',marginRight: '0'}} >\n                        <Text style={[styles.reportTitleFide, {width: (dataOP? 100 - dataOP?.fideicomisos[0]?.ancho_logo + '%':'75%'), color: dataOP?.fideicomisos[0]?.color}]}>{dataOP?.fideicomisos[0]?.titulo}</Text>\n                        <View style={{width: dataOP? (dataOP?.fideicomisos[0]?.ancho_logo + '%'):'25%' }} >\n                        <Image style={[styles.logo, {backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color3:'#FFFFFF' }]} src={{ uri: `${apiServerUrl}/sociedades/${idSociedad}/${dataOP? dataOP?.fideicomisos[0]?.logo:'logo.png'}` , method: \"GET\", headers: { \"Cache-Control\": \"no-cache\" }, body: \"\" }} />                   \n                        </View>\n                    </View>\n\n                    <View style={styles.titleContainer}>\n                        <Text style={styles.reportTitle}>SOLICITUD DE PAGO     Nº\t{dataOP?.numero}</Text>\n                        \n                    </View>\n\n                    <View style={styles.invoiceDateContainer}>\n                        <Text style={styles.label}>Fecha: </Text>\n                        <Text >{mostrarFecha(dataOP?.createdAt)}</Text>\n                    </View >\n\n                    <TablaFacturas dataOP={dataOP} dataFacturas={dataFacturas} />\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>\n\n                    <View >\n                        <Text style={styles.subreportTitle}>APROBACIÓN TÉCNICA</Text>                       \n                    </View>\n                    <TablaTEC dataOP={dataOP} />\n                   \n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>\n                    <View >\n                        <Text style={styles.subreportTitle}>APROBACIÓN ADMINISTRATIVA</Text>                       \n                    </View>\n                    <TablaADM dataOP={dataOP} />\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View> \n\n                    <View >\n                        <Text style={styles.subreportTitle}>PAGO</Text>                       \n                    </View>                   \n                    <TablaPagos dataOP={dataOP} arr_id={arr_id} arr_banco={arr_banco} arr_cid={arr_cid} arr_cuenta={arr_cuenta} />\n\n                    <TablaPie dataOP={dataOP} />\n\n                </Page>\n            </Document>\n        );\n  \n  export default orden_de_pago","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Box, Button, TextField, Autocomplete} from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PDFDownloadLink, pdf } from \"@react-pdf/renderer\";\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\n\nvar miOP={};\nvar fa={};\nvar idSociedad=0;\n\nconst columns = (puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'createdAt',\n    headerName: 'Fecha',\n    width: 120,\n    type: 'date',\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => new Date(value).toLocaleDateString('es-AR', { timeZone: 'UTC' }),\n  },\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'numero',\n    headerName: 'Numero',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    renderCell: IrDetalleOP_2,    \n  },\n  {\n    field: 'empresa',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },  \n  {\n    field: 'monto',\n    headerName: 'Monto',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    align: 'left',    \n  },\n  {\n    field: 'estadoOP', // campo en grilla\n    headerName: 'Estado',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxEst estados={estados} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'facturas',\n    headerName: 'Facturas',\n    width: 140,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { misFacturas }}) => misFacturas?.map(({numero}) => numero)?.join(', '), \n  },\n  {\n    field: 'RET_SUSS',\n    headerName: 'SUSS',\n    width: 120,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_GAN',\n    headerName: 'GAN',\n    width: 120,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_IVA',\n    headerName: 'IVA',\n    width: 120,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'retencion',\n    hide: true,\n  },\n  {\n    field: 'estadoRET', // campo en grilla\n    headerName: 'Retenciones',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxRet retenciones={retenciones} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'aprobado_obra',\n    hide: true,\n  },\n  {\n    field: 'aprobado obra',\n    headerName: 'Ap. Obra',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonObraAuthRow,\n  },\n  {\n    field: 'aprobado_adm',\n    hide: true,\n  },\n  {\n    field: 'aprobado adm',\n    headerName: 'Ap. ADM',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonAdmAuthRow,\n  },\n  {\n    field: 'estado',\n    hide: true,\n  },\n  {\n    field: 'fondos_',\n    hide: true,\n  },\n\n  {\n    field: 'fondos', // campo en grilla\n    headerName: 'Fondos',\n    width: 150,\n    type: 'singleSelect',\n    editable: puedeEditar, //props.row.confirmada,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxFon fondos_s={fondos_s} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'archivada',\n    headerName: 'Generar',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DescargarPDF,\n  },\n  {\n    field: 'rubro',\n    hide: true,\n  },  \n  {\n    field: 'rubroID',\n    headerName: 'Rubro',\n    width: 140,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBox rubros={rubros} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'subrubro',\n    hide: true,\n  },\n  {\n    field: 'subrubroID',\n    headerName: 'Sub Rubro',\n    width: 140,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBoxSub subRubros={subRubros} props={props} />,\n    headerAlign: 'center',\n  },  \n  {\n    field: 'formaPago',\n    headerName: 'Forma Pago',\n    width: 160,\n    editable: false,\n  },\n  {\n    field: 'descripcion',\n    headerName: 'Detalle',\n    width: 140,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'center',    \n  }, \n  {\n    field: 'enviada',\n    headerName: 'Enviar',\n    width: 70,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: EnviarMail,\n  },\n  {\n    field: 'confirmada',\n    headerName: 'Conf',\n    type: 'boolean',\n    width: 120,\n    editable: false,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    hide: !puedeEditar,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId, confirmada } }) => (\n      confirmada? \"\":<DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nconst retenciones = [  \n  { id: 1, descripcion: '-' },\n  { id: 2, descripcion: 'OK' },\n  { id: 3, descripcion: 'Pendiente' },\n];\n\n// por ahora se inicializa en el login\nvar estados = JSON.parse(localStorage.getItem(\"estados\"));\n\n\nconst fondos_s = [  \n  { id: 1, descripcion: '-' },\n  { id: 2, descripcion: 'OK cargado' },\n];\n\n\nexport function GrillaOP({ idSociety, loggedUser}) {\n  \n  idSociedad = idSociety.id;\n  var result = {};\n\n  var puedeEditar = true;\n  const accesoOP = loggedUser?.['rol.op'];\n  if( accesoOP ==='vista'){puedeEditar =false}\n  //manager\n\n  const navigate = useNavigate();\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  \n  const apiServerUrl = process.env.REACT_APP_API_SERVER\n                                                      \n  const {\n    data: opInformation,\n    isLoading,\n    error,\n  } = useQuery(['OP', idSociety], () => getMethod(`OP/listar/${idSociety.id}/todas/nulo`));\n\n  const queryClient = useQueryClient();\n\n  const { data: rubros } = useQuery(['rubros', idSociety], () =>\n    getMethod(`rubro/listar/${idSociety.id}`)\n  );\n\n  const { data: subRubros } = useQuery(['subrubros', idSociety], () =>\n    getMethod(`subrubro/listar/${idSociety.id}/0`)\n  );\n\n  // es un array de facturas para la columna facturas asociada a una OP (OPId)\n  const { data: grfacturas } = useQuery(['grfacturas', idSociety.id], async() =>\n  await getMethod(`factura/listar/${idSociety.id}/todas/nada`));\n\n\n  const { mutate: irDetalle } = useMutation(\n\n    async el => await  getMethod(`op/mostrar/${idSociety.id}/${el.id}`),\n    {onSettled: (el) => { /*queryClient.refetchQueries(['formOP', idSociety]);*/\n    navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el.confirmada}`)}\n  }\n    /*async el =>{\n\n    \n      navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el.confirmada}`)}\n*/\n  );\n\n  const { mutate: eliminate } = useMutation(\n    async idOP => await deleteMethod(`OP/eliminar/${idSociety.id}`, { id: idOP }),\n    {\n      onMutate: async idOP => {\n        await queryClient.cancelQueries(['OP', idSociety]);\n        const prevData = queryClient.getQueryData(['OP', idSociety]);\n        const newData = prevData.filter(op => op.id !== idOP);\n        queryClient.setQueryData(['OP', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idOP, context) => queryClient.setQueryData(['OP', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n    }\n  );\n\n   /***** generar y subir pdf ***********************************************************************/\n\n  const { mutate: cargar_y_subir_OP } = useMutation(\n    async el =>         \n        result = await getMethod(`op/mostrarConFacturas/${idSociety.id}/${el.id}`),\n    {\n      onSuccess: async () =>{\n         miOP = result.op;\n         fa = {item: result.item};\n         getPdfBlob(miOP?.id, miOP?.fideicomisos[0]?.nombre, miOP?.numero);\n        }        \n    }     \n  );\n\n  async function getPdfBlob(idOP, fideicomiso, numero){\n\n    let blobPdf = await pdf(NewDocument()).toBlob();\n    let formData = new FormData();\n    formData.append('logo', blobPdf);\n    formData.append('id', idOP);\n    formData.append('fideicomiso', fideicomiso);\n    formData.append('numero', numero);\n    formData.append('archivada', 1);    \n    postMethod(`op/modificar/${idSociety.id}`, formData);\n    \n  }\n\n  const NewDocument = () => {\n    \n    return (\n      <RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociety.id} />\n    )\n  }\n  /***** fin generar y subir pdf ************************************************************************/\n\n \n  const { mutate: nonAuthObra } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n        id : el.authOBRA,\n        tipoAutorizacion: 'obra',\n        opid : el.id,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: nonAuthAdm } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n\n        id : el.authADM,\n        tipoAutorizacion: 'adm',\n        opid : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: enviarCorreo } = useMutation(\n    async el =>\n      await postMethod(`OP/enviarMail/${idSociety?.id}`, {\n\n        mailTo : idSociety?.mailOP,\n        mailConstructora : idSociety?.mailConstructora,\n        fideicomiso : el.fideicomisos[0]?.nombre,        \n        razonSocial : el.empresas[0]?.razonSocial,\n        enviar_OP_auto : el.empresas[0]?.enviar_OP_auto,\n        numero : el.numero,\n        id : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>//{\n      //if(field!='fico'){\n        // console.log([field], id),\n            await postMethod(`OP/modificar/${idSociety.id}`, {id,[field]: value,}),\n            \n        {\n          onMutate: async ({ field, id, value }) => {\n            await queryClient.cancelQueries(['OP', idSociety]);\n            const prevData = queryClient.getQueryData(['OP', idSociety]);\n            const newData = [\n              ...prevData.filter(op => op.id !== id),\n              { ...prevData.find(op => op.id === id), [field]: value },\n            ];\n            queryClient.setQueryData(['OP', idSociety], newData);\n            return prevData;\n          },\n          onError: (err, id, context) => queryClient.setQueryData(['OP', idSociety], context),\n          onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n        }\n     // }\n    //}\n  );\n  \n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <ToastContainer /> \n        <DataGrid \n          rows={opInformation.map(OP => ({\n            id: OP.id,    \n            acceso: accesoOP,\n            numero: OP.numero,\n            empresa: OP.empresas[0]?.razonSocial,\n            empresaId: OP.empresaId,\n            monto: OP.monto, \n            moneda: OP.moneda,             \n            RET_SUSS: OP.RET_SUSS,\n            RET_GAN: OP.RET_GAN,\n            RET_IVA: OP.RET_IVA,\n            rubroId: OP.rubroId,            \n            estadoRET: {\n              id: OP.estadoRET,\n              descripcion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            },\n            estadoOP: {\n              id: OP.estadoOP,\n              descripcion: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            },\n            confirmada: OP.confirmada===0? false: true,\n            fondos: {\n              id: OP.fondos,\n              descripcion: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,\n            },\n            fideicomiso: OP.fideicomisos[0]?.nombre,\n            archivada: OP.archivada,\n            enviada: OP.enviada,\n            descripcion: OP.descripcion,\n            createdAt: OP.createdAt,   \n            rubroID: {\n              id: OP.rubroId,\n              nombre: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            },\n            subrubroID: {\n              id: OP.subrubroId,\n              nombre: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,\n            }, \n            apr_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            apr_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            misFacturas: grfacturas?.filter(factura => factura?.OPId === OP.id),\n            deleteId: OP.id,\n            /* para exportar*/\n            retencion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            aprobado_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            aprobado_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            estado: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            fondos_: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,  \n            formaPago: OP.formaPago,          \n            rubro: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            subrubro: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,     \n            onAuthObra: () => nonAuthObra(OP),\n            onAuthAdm: () => nonAuthAdm(OP),\n            onEnviar: () => enviarCorreo(OP),\n            cargarOP: () => cargar_y_subir_OP(OP),\n            esEditable: () => (OP),\n            onIrDetalle: () => irDetalle(OP),    \n            \n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete)}\n          isCellEditable={(params) => (!params.row.confirmada || accesoOP ==='total')}\n          disableSelectionOnClick\n          autoHeight\n          density={'comfortable'}\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n         \n          \n        >\n        \n\n        </DataGrid>\n      </div>\n    );\n\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport csvOptions={{ fields: ['createdAt', 'fideicomiso', 'numero','empresa','monto','moneda','RET_SUSS','RET_GAN','RET_IVA','fondos_','retencion', 'aprobado_obra', 'aprobado_adm', 'estado', 'fondos_', 'rubro', 'subrubro','descripcion'] }} />\n      \n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n\n  const sendRow = params.row.onIrDetalle;\n  const fideicomiso = params.row.fideicomiso;\n  return <Button onClick={sendRow} >{fideicomiso}  </Button>;\n} \nfunction IrDetalleOP_2(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const numero = params.row.numero;\n  return <Button onClick={sendRow} >{numero}  </Button>;\n} \n\n\nfunction ComboBox({ rubros, props }) {\n  const { id, api, field } = props;\n\n  rubros = [\n    ...rubros,\n    {\n      rubro: '',\n    },\n  ];\n  const [selectedRubro, setSelectedRubro] = useState({\n    rubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedRubro(newValue);\n     \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      //disablePortal\n      id=\"combo-box-demo\"\n      options={rubros}\n      isOptionEqualToValue={(op, val) => op.rubro === val.rubro}\n      getOptionLabel={option => option.rubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxSub({ subRubros, props }, params) {\n  const { id, api, field } = props;\n  \n  subRubros = [\n    \n    ...subRubros.filter(subR => subR.rubroId === parseInt(props?.row?.rubroID.id)),\n    {\n      subRubro: '',\n    },\n  ];\n\n  const [selectedsubRubro, setSelectedsubRubro] = useState({\n    subRubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedsubRubro}\n      onChange={async (event, newValue) => {        \n        setSelectedsubRubro(newValue);       \n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }}\n      id=\"combo-box-demo\"\n      options={subRubros}\n      isOptionEqualToValue={(op, val) => op.subRubro === val.subRubro}\n      getOptionLabel={option => option.subRubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"subRubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxRet({ retenciones, props }) {\n  const { id, api, field } = props;\n\n  retenciones = [\n    ...retenciones,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedRet, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRet}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue);    \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={retenciones}\n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Retencion\" />}\n    />\n  );\n}\n\nfunction ComboBoxEst({ estados, props }) {\n  const { id, api, field } = props;\n\n  estados = [\n    ...estados,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedEst, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.estadoOP.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n\n  return (\n    <Autocomplete\n      value={selectedEst}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue); \n   \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={estados}      \n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Estado\" />}\n    />\n  );\n    }\n}\n\nfunction ComboBoxFon({fondos_s, props}) {\n  const { id, api, field } = props;\n\n  fondos_s = [\n    ...fondos_s,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedFon, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n\n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.fondos.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n    return (<Autocomplete\n    value={selectedFon}\n    \n    onChange={async (event, newValue) => {\n      setSelectedRol(newValue); \n      if(newValue?.id > 0){\n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }\n    }}\n\n    id=\"combo-box-demo\"\n    options={fondos_s}\n    isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n    getOptionLabel={option => option.descripcion}\n    sx={{ width: 300 }}\n    renderInput={params => <TextField {...params} label=\"Fondos\" />}\n  />)\n  }\n}\n\nfunction NonObraAuthRow(params) {\n  \n  const authRow = params.row.onAuthObra;\n  const apr_obra = params.row.apr_obra;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Obra\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_obra !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_obra}  </Button>;\n    }else{\n      let str = \"\" + apr_obra;\n      return \"\" + str.toUpperCase();\n    }\n  }else{\n    return \"\"\n  }\n} \n\nfunction NonAdmAuthRow(params) {\n\n  const authRow = params.row.onAuthAdm;  \n  const apr_adm = params.row.apr_adm;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Adm\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_adm !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_adm}  </Button>;\n    }else{\n      let str = \"\" + apr_adm;\n      return \"\" + str.toUpperCase();\n    }\n   \n  }else{\n    return \"\"\n  }\n\n} \n\nfunction DescargarPDF(params) {  \n  \n  var cargarOP = params.row.cargarOP;\n  const fideicomiso = params.row.fideicomiso;\n  const numero = params.row.numero;\n  var nombrePDF = \"OP_\" +  fideicomiso + \"_\" + numero + \".pdf\";\n  const archivada = params.row.archivada;\n  const apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n  \n  const notify = () =>{\n    \n    cargarOP();\n    // return(\n    setTimeout(() => {\n    \n        toast(({ closeToast}) => (\n          // cargarOP()\n          <Box>\n            <Button\n              sx={{ p: 1, m: 1 }}\n              variant='contained'\n              color='secondary'\n              size='small'\n              //onMouseDownCapture={cargarOP()}\n              onClick={closeToast}>\n              \n              Cancelar\n            </Button>\n\n            <PDFDownloadLink document={<RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociedad} />} fileName={nombrePDF} >\n              {({ blob, url, loading, error }) => {\n          \n                return (loading ? 'Loading document...' : 'Descargar')}\n              }\n            </PDFDownloadLink> \n\n            \n          </Box>\n        )) // )\n      }, 800);\n    };\n  \n  if(archivada === 0){\n    return <Button onClick={notify} >Para Generar</Button>;\n  }else{\n    return <Button onClick={notify} >Generada</Button>;    \n  }\n\n} \n\nfunction EnviarMail(params) {\n\n  const enviar = params.row.onEnviar;  \n  const enviada = params.row.enviada;\n  const archivada = params.row.archivada;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            enviar();\n            closeToast();\n          }}>Enviar\n        </Button>\n      </Box>\n    ));\n  \n    if(archivada === 0){\n      return \"\";\n    }else{\n      if(enviada === 0){\n        return <Button onClick={notify} >Enviar</Button>;\n      \n      }else{\n        return <Button onClick={notify} >Re enviar</Button>;\n      }   \n    }\n  \n} ","import { Container, Box, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { ManipularOP } from 'src/components/OP/ManipularOP';\nimport { GrillaOP } from 'src/components/OP/GrillaOP';\n\nexport function OP({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n            <Box sx={{ pt: 3 }}>\n              <ManipularOP idSociety={idSociety}  loggedUser={loggedUser} />\n            </Box>\n          </Hidden>\n          <Box sx={{ pt: 3 }}>\n            <GrillaOP idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Button} from '@mui/material';\nimport PriceCheckIcon from '@mui/icons-material/PriceCheck';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod} from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'createdAt',\n    headerName: 'Fecha',\n    editable: false,\n    width: 120,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => mostrarFecha(value),\n  },\n\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'numero',\n    headerName: 'Numero',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    renderCell: IrDetalleOP_2,    \n  },\n\n  {\n    field: 'empresa',\n    headerName: 'Razón Social',\n    editable: false,\n    width: 160,\n    headerAlign: 'center',\n    align: 'center',\n  },  \n  {\n    field: 'monto',\n    headerName: 'Monto',\n    editable: false,\n    width: 125,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    editable: false,\n    width: 60,\n    headerAlign: 'center',\n    align: 'left',    \n  },\n  {\n    field: 'formaPago',\n    headerName: 'Forma Pago',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'PriceCheckIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { authId } }) => (\n      <PriceCheckIcon\n        onClick={e => {\n\n          setRowIdToDelete(authId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n\n];\n\n\n// por ahora se inicializa en el login\nvar formaPagos =[];\nif(localStorage.getItem(\"formaPagos\")){\n  formaPagos = localStorage.getItem(\"formaPagos\").split(\",\")\n}else{  \n  formaPagos[0] =\"Otra\";\n}\n\nexport function GrillaOpAuth({ idSociety,  loggedUser, tipo }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n  const navigate = useNavigate();\n  \n  let str = '';\n  if(tipo ==='adm'){\n    str = `OP/listar/${idSociety.id}/authADM/nulo`;\n  }else{\n    str = `OP/listar/${idSociety.id}/authObra/nulo`;\n  }\n\n  const {\n    data: opInformation,\n    isLoading,\n    error,\n  } = useQuery(['OP' + tipo, idSociety], () => getMethod(str));\n \n  const queryClient = useQueryClient();\n\n  const { mutate: authFila } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: tipo,\n        creador: loggedUser.id\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP' + tipo, idSociety]),\n    }\n\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async el =>    \n      navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el.confirmada}`)\n\n  );\n  \n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`OP/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['OP' + tipo, idSociety]);\n        const prevData = queryClient.getQueryData(['OP' + tipo, idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(OP => OP.id !== id),\n          { ...prevData.find(OP => OP.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['OP' + tipo, idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['OP' + tipo, idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['OP' + tipo, idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Autorizar fila?\" action={() => authFila(rowIdToDelete)} />\n        <DataGrid\n          rows={opInformation.map(OP => ({\n            id: OP.id,        \n            numero: OP.numero,\n            empresa: OP.empresas[0].razonSocial,\n            monto: OP.monto,\n            moneda: OP.moneda,   \n            formaPago: OP.formaPago,      \n            fideicomiso: OP.fideicomisos[0].nombre,          \n            apr_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            apr_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            createdAt: OP.createdAt,\n            authId: OP.id,\n            onIrDetalle: () => irDetalle(OP),   \n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const fideicomiso = params.row.fideicomiso;\n  return <Button onClick={sendRow} >{fideicomiso}  </Button>;\n} \nfunction IrDetalleOP_2(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const numero = params.row.numero;\n  return <Button onClick={sendRow} >{numero}  </Button>;\n} \n\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { GrillaOpAuth } from 'src/components/OP/GrillaOpAuth';\n\nexport function AuthAdmOP({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container >\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOpAuth idSociety={idSociety}  loggedUser={loggedUser} tipo='adm' />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { GrillaOpAuth } from 'src/components/OP/GrillaOpAuth';\n\nexport function AuthObraOP({ idSociety,  loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container >\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOpAuth idSociety={idSociety}  loggedUser={loggedUser} tipo='obra' />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { useState } from 'react';\nimport { TextField, Button, Autocomplete } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { getMethod, postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function AgregarFactura({ idSociety, empresaId, OPId }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  \n  const { data: facturas } = useQuery(\n    ['facturas'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0`));\n\n  const { mutate: addFactura } = useMutation(\n    async factura =>\n      await postMethod(`factura/modificar/${idSociety.id}`, \n      {id: factura?.factura?.id,\n      OPId: OPId\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['facturas', idSociety]),\n    }\n  );\n\n  const [typeInForm, setTypeInForm] = useState(null);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          factura: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n       \n          addFactura(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Número Factura'\n              disablePortal\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setTypeInForm(newValue);\n                setFieldValue('factura', newValue);\n              }}\n              value={typeInForm}\n              getOptionLabel={option => option.numero}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={facturas? facturas?.filter(factura => factura?.empresaId === parseInt(empresaId)):[]}\n              renderInput={params => <TextField {...params} label='Número Factura' />}\n            />\n            \n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar Factura\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"...error\"\n        ok\n      />\n    </>\n  );\n}\n","import { useState } from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport { TextField, Typography, Grid, Autocomplete, Hidden, Switch} from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { getMethod, postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { isValidDate, yearMonthDayString } from 'src/utils/utils'; \n\n\nexport function FormDetalleOP({ idSociety, OPId, loggedUser, estadoOP, confirmada}) {\n  \n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  var acceso = true;\n\n  if(loggedUser?.['rol.op'] ==='vista'){\n       acceso =false;\n  }\n\n  const{\n      data: formOP,\n      isLoading,\n      error,\n      refetch\n    } = useQuery(['formOP', idSociety.id], () =>\n     getMethod(`op/mostrar/${idSociety.id}/${OPId}`,{fetchPolicy: 'network-only'})\n  ); \n\n  /*\n  setTimeout(() => {\n    setGan(formOP?.RET_GAN);\n    console.log(7777, formOP?.RET_GAN);\n  }, 700)*/\n\n  const { mutate: updateOP } = useMutation(\n      async newOP =>\n        await postMethod(`op/modificar/${idSociety.id}`, newOP),\n      {\n        onSuccess: async () => await queryClient.refetchQueries(['formOP', idSociety])\n      }\n    );\n\n  // por ahora se inicializa en el login\n  var estados = JSON.parse(localStorage.getItem(\"estados\"));\n  const [isConfirmOP, setIsConfirmOP] = useState(parseInt(confirmada));\n  const [typeInForm, setTypeInForm] = useState(estados[parseInt(estadoOP)]);\n\n\n\n  var bancos = JSON.parse(localStorage.getItem(\"bancos\"));\n  var banco_en_blanco = {id:0, banco:\"\", descripcionLarga:\"\" };\n  bancos.push(banco_en_blanco);\n\n  /*\n\n    <div>\n      <button\n        onClick={() => {refetch()}}\n      >\n        Refetch\n      </button>\n      <p></p>\n    </div>\n\n*/\n\n  var cuentasbanco = JSON.parse(localStorage.getItem(\"cuentasbanco\"));  \n  var cuenta_en_blanco = {id: 0,  bancoId: 0,  cuentaBanco: \"\",  descripcionLarga: \"\",  bancos: [{banco: \"\"}]};\n  cuentasbanco.push(cuenta_en_blanco);\n  \n  // por ahora se inicializa en el login\n  var formaPagos = localStorage.getItem(\"formaPagos\").split(\",\")\n  \n  var verBotonDesconfirmar = (loggedUser['rol.op'] ==='total' && (isConfirmOP===1))? false:true;\n//console.log(999999, isValidDate(\"2021-12-13\"));\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n          \n    <>\n\n      <Formik \n        initialValues={{\n          id: OPId,\n          flagPago: 1,// es para avisarle a la api que se modifica OPpagos\n          \n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          updateOP(values);\n          // resetForm();\n          setSubmitting(false);\n          // refetch();\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form  >\n            \n                <Grid container spacing={{ xs: 0.5, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }} >                  \n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Aprobación Técnica \n                      </Typography>\n                    \n\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={6}>\n                        <TextField   sx={{ width: '68ch' }} label=\"Detalle\"  defaultValue={formOP?.descripcion || \"\"} type=\"float\"  name=\"descripcion\" \n                        onChange={event => handleModification(event, setFieldValue, refetch, 'descripcion', idSociety.id, OPId, 0, 0)}\n                        /* onFocus={event => formOP.descripcion? handleModification(event, setFieldValue, refetch, 'descripcion', idSociety.id, OPId, 0, 0):false } */\n                        InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}\n\n                        />                  \n                  </Grid>                 \n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Aprobado por:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                        {formOP?.auth_obra?formOP.auth_obra[0]?.usuarios[0]?.user:''}\n                        </Typography>\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Aprobación Administrativa\n                      </Typography>\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={2}   >\n                  <Typography  align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                  Estado:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        </Typography>\n                  </Grid>     \n                  <Grid item md={2}>                  \n                    <Field\n                      as={Autocomplete}\n                      size={'small'}\n                      label='Estado'\n                      disabled={!acceso || (isConfirmOP===1)}\n                      disablePortal\n                      style={{ width: '160px', display: 'inline-flex' }}\n                      onChange={(event, newValue) => {\n                        setTypeInForm(newValue);\n                        setFieldValue('estadoOP', newValue);                        \n                        onlyNumbers(event, setFieldValue, refetch, 'estadoOP', idSociety.id, OPId, 0, newValue.id)\n                      }}\n                      value={typeInForm}\n                      getOptionLabel={option => option.descripcion}\n                      isOptionEqualToValue={(option, value) => option.id === value.id}\n                      options={estados}\n                      renderInput={params => <TextField {...params} label='Estado' />}\n                      \n                    />\n                  </Grid> \n\n                  <Grid item md={3}>  \n                      <Hidden  smUp={(loggedUser['rol.op'] ==='total'  || (isConfirmOP!==1)?true:false)} >\n                          <Typography align=\"center\" color=\"green\" variant=\"h5\">                      \n                            {(isConfirmOP===1)?\"Confirmada!\":\"\"}\n                          </Typography> \n                      </Hidden>\n\n                      <Hidden  smUp={(!acceso || (typeInForm.id!==3)  || (isConfirmOP===1)?true:false)} >\n\n                                                    \n                           <Typography align=\"left\" color=\"blue\" variant=\"h5\">                      \n                           <Switch  onChange={event => confirmarOP(event, setIsConfirmOP,'confirmada', idSociety.id, OPId, 0, 1)}  /> Confirmar\n                          </Typography> \n                      </Hidden>\n\n                      <Hidden  smUp={(verBotonDesconfirmar)} >\n                      \n                          <Typography align=\"left\" color=\"blue\" variant=\"h5\">                      \n                              <Switch  defaultChecked onChange={event => confirmarOP(event, setIsConfirmOP,'confirmada', idSociety.id, OPId, 0, 0)}  /> Desconfirmar\n                              </Typography> \n                          \n                          </Hidden>\n\n                  </Grid>\n                  <Grid item md={5}>                           \n                  </Grid>\n             \n\n                  <Grid item md={2}>\n                  <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                  Sumatoria Facturas:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        </Typography>\n                  </Grid>     \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        &nbsp;{formOP?.monto}\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Forma de Pago:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        {formOP?.formaPago}\n                        </Typography>\n                  </Grid>\n\n\n\n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Monto a Abonar:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  \n                              </Typography>\n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        &nbsp;{formOP?.monto_a_pagar}\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Aprobado por:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        {formOP?.auth_adm?formOP.auth_adm[0]?.usuarios[0]?.user:''}\n                        </Typography>\n                  </Grid>              \n\n\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                                 \n                  <Grid item md={2}>\n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"RET GAN\" type=\"number\" key={formOP?.RET_GAN} defaultValue={formOP?.RET_GAN}  name=\"RET_GAN\" onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_GAN', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={2}>\n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"RET IVA\" type=\"number\" key={formOP?.RET_IVA} defaultValue={formOP?.RET_IVA}  name=\"RET_IVA\" onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_IVA', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>  \n                  <Grid item md={2}>\n                  <TextField size={'small'} sx={{ width: '20ch' }} label=\"RET SUSS\" type=\"number\"  key={formOP?.RET_SUSS}  defaultValue={formOP?.RET_SUSS}  name=\"RET_SUSS\"  onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_SUSS', idSociety.id, OPId, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={6}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Pago\n                      </Typography>\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Banco\n                        </Typography>\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Nro Cuenta\n                        </Typography>                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Comprobante\n                        </Typography>              \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Modo\n                        </Typography>              \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Fecha\n                        </Typography>                      \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Monto\n                        </Typography>                \n                  </Grid>  \n\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco1(newValue);\n                          setFieldValue('banco1', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco1', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco1 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro1(newValue);\n                          setFieldValue('nro1', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro1', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro1 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco1 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri1} defaultValue={formOP?.OPpago.descri1} name=\"descri1\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri1', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>  \n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n    \n                            onlyNumbers(event, setFieldValue, refetch, 'modo1', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo1 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>  \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha1)? formOP?.OPpago.fecha1:null}\n                          name=\"fecha1\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha1', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n                   \n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto1\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto1}  defaultValue={formOP?.OPpago.monto1}  onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto1', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }} />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco2(newValue);\n                          setFieldValue('banco2', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco2', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco2 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro2(newValue);\n                          setFieldValue('nro2', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro2', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro2 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco2 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri2} defaultValue={formOP?.OPpago.descri2} name=\"descri2\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri2', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>  \n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo2', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo2 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>  \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha2)? formOP?.OPpago.fecha2:null}\n                          name=\"fecha2\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha2', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto2\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto2}  defaultValue={formOP?.OPpago.monto2}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto2', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }} />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco3(newValue);\n                          setFieldValue('banco3', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco3', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco3 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro3(newValue);\n                          setFieldValue('nro3', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro3', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro3 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco3 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri3} defaultValue={formOP?.OPpago.descri3} name=\"descri3\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri3', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>  \n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo3', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo3 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>  \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha3)? formOP?.OPpago.fecha3:null}\n                          name=\"fecha3\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha3', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto3\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto3}  defaultValue={formOP?.OPpago.monto3}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto3', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }} />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco4(newValue);\n                          setFieldValue('banco4', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco4', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco4 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro4(newValue);\n                          setFieldValue('nro4', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro4', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro4 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco4 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri4}  defaultValue={formOP?.OPpago.descri4} name=\"descri4\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri4', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>  \n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo4', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo4 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>  \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha4)? formOP?.OPpago.fecha4:null}\n                          name=\"fecha4\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha4', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto4\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto4}  defaultValue={formOP?.OPpago.monto4}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto4', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }} />                  \n                  </Grid>\n              \n                </Grid>\n            \n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}\n\n\nfunction onlyNumbers(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flagPago, valorCombo) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,7}(\\.\\d{0,2})?$/;\n  console.log(regex.test(value.toString()));\n  if (regex.test(value.toString())) {\n\n    setFieldValue(typeOfData, value.toString());\n    handleModification(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flagPago, valorCombo);\n\n  }else{\n    return false;\n  }\n}\n\nfunction handleModification(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flag, valorCombo) {\n\n  \n  let val = null;\n \n  if(flag === 2){ // si es una fecha\n    \n    val = yearMonthDayString(event) + \" 03:00:00\";\n  }else{  \n    event.preventDefault();\n    const { value } = event.target;\n    setFieldValue(typeOfData, value.toString());\n\n    val = value;\n    if(typeOfData==='estadoOP'){\n      val = valorCombo;\n    }\n    if(typeOfData==='banco1' || typeOfData==='banco2' || typeOfData==='banco3' || typeOfData==='banco4'){\n      val = valorCombo;\n    }\n    if(typeOfData==='nro1' || typeOfData==='nro2' || typeOfData==='nro3' || typeOfData==='nro4'){\n      val = valorCombo;\n    }\n    if(typeOfData==='modo1' || typeOfData==='modo2' || typeOfData==='modo3'  || typeOfData==='modo4'){\n      val = valorCombo;\n    }\n  }\n\n  let newData = {\n        id: OPId,\n        [typeOfData]: val,\n      };\n  if(flag > 0){\n        newData.flagPago = 1;\n  }    \n    \n  postMethod(`op/modificar/${idSociety}`, newData);\n  setTimeout(() => {\n    refetch();\n    console.log(\"refetch\");\n  }, 500)\n\n\n}\n\nfunction confirmarOP(event, setIsConfirmOP, typeOfData, idSociety, OPId, flagPago, valor) {\n  event.preventDefault();\n\n  setIsConfirmOP(valor);\n  let newData = {\n        id: OPId,\n        [typeOfData]: valor,\n      };\n  if(flagPago===1){\n        newData.flagPago = 1;\n  }    \n    \n  postMethod(`op/modificar/${idSociety}`, newData);\n\n\n}\n\n","import { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Box, Button } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getMethod, postMethod } from 'src/utils/api';\n\n// const columns = [\nconst columns = (puedeEditar, verEliminar) => [\n  {\n    field: 'empresa',\n    headerName: 'Proveedor',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'detalle',\n    headerName: 'Detalle',\n    width: 175,\n    editable: puedeEditar,\n    headerAlign: 'center',\n  },\n  {\n    field: 'numero',\n    headerName: 'Nro Factura',\n    width: 185,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'txtOC',\n    headerName: 'Nro OC',\n    width: 130,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'montoTotal',\n    headerName: 'Importe',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n\n  {\n    field: 'link2',\n    headerName: '',\n    width: 20,\n    editable: false,\n    headerAlign: 'center',\n    renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >ver</a>)\n  },\n  {\n    field: 'deleteIcon',\n    headerName: '',\n    hide: !verEliminar,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n\n];\n\nexport function GrillaDetalleOP({ idSociety, OPId, loggedUser, selectedFacturaData }) {\n  \n  //var acceso = true;\n  //if(loggedUser?.['rol.op'] ==='vista'){acceso =false}\n  var puedeEditar = true;\n  const accesoOP = loggedUser?.['rol.op'];\n  if( accesoOP ==='vista'){puedeEditar =false}\n\n\n  var verEliminar = true;\n  if(loggedUser?.['rol.op'] ==='parcial' || loggedUser?.['rol.op'] ==='vista'){verEliminar =false}\n\n  const {\n    data: facturas,    \n    /*rowLength: filas,*/\n    isLoading,\n    error,\n  } = useQuery(['facturas', idSociety, selectedFacturaData], () =>\n    getMethod(`factura/listar/${idSociety?.id}/opid/${OPId}`)\n  );\n\n  const queryClient = useQueryClient();\n\n  const { mutate: deleteProduct } = useMutation(\n    async id =>\n      await postMethod(`factura/modificar/${idSociety?.id}`, {\n        //libera la factura con OPId= null\n        id: id,\n        OPId: null,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['facturas', idSociety, selectedFacturaData]),\n    }\n  );\n\n\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    \n    let newData = {\n      id: e.id,\n     [e.field]: e.value,\n    };\n    \n    postMethod(`factura/modificar/${idSociety?.id}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        \n        \n        rows={facturas.map(el => ({\n          id: el.id,\n          empresa:(el.empresas[0]?el.empresas[0].razonSocial:''),\n          confirmada:(el.OPs[0]?el.OPs[0].confirmada:0),\n          numero: el.numero,\n          link: el.link,\n          link2: el.link,\n          montoTotal: el.montoTotal,\n          moneda: el.moneda,\n          detalle: el.detalle,\n          txtOC: el.txtOC,\n          fechaIngreso: el.fechaIngreso,\n          fechaVTO: el.fechaVTO,  \n          onDelete: () => deleteProduct(el.id),\n        }))}\n\n        columns={columns(puedeEditar, verEliminar)}\n        isCellEditable={(params) => (!params.row.confirmada || accesoOP ==='total')}\n        disableSelectionOnClick           \n        autoHeight   \n        onCellEditCommit={handleCellModification}\n     \n      />\n    </div>\n  );\n}\n\n\n\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}>\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React from 'react';\nimport { useRef } from 'react'\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Container, Box, Typography, Grid } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { AgregarFactura } from 'src/components/detalleOP/AgregarFactura';\nimport { FormDetalleOP } from 'src/components/detalleOP/FormDetalleOP';\nimport { GrillaDetalleOP } from 'src/components/detalleOP/GrillaDetalleOP';\nimport { mostrarFechaMesTXT } from 'src/utils/utils';\nimport { PDFDownloadLink, PDFViewer, pdf } from \"@react-pdf/renderer\";\nimport { toast } from 'react-toastify';\nimport { useQueryClient, useMutation } from 'react-query';\nimport { Button, Hidden } from '@mui/material';\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\nimport { useQuery } from 'react-query';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n\nexport function DetalleOP({ idSociety, loggedUser }) {\n\n  const [verPDF, setVerPDF] = React.useState(false);\n  const { idOP } = useParams();\n  const { fecha } = useParams();  \n  const { empresaId } = useParams();  \n  const { numero } = useParams();\n  const { fideicomiso } = useParams();\n  const { estadoOP } = useParams();\n  const { confirmada } = useParams();\n  const id = idSociety.id;\n  const fileName=\"OP_\" + fideicomiso + \"_\" + numero + \".pdf\";\n  const buttonAdmRef = useRef();  \n\n   //guarda pdf en server\n   const getPdfBlob = async () =>   {\n\n    let blobPdf = await pdf(NewDocument()).toBlob();\n    let formData = new FormData();\n    formData.append('logo', blobPdf);\n    formData.append('id', idOP);\n    formData.append('fideicomiso', fideicomiso);\n    formData.append('numero', numero);    \n    postMethod(`op/modificar/${idSociety.id}`, formData);\n    \n  }\n\n  const guardar_en_server = () => {\n\n    setTimeout(() => {\n      getPdfBlob();\n    }, 300);\n  }\n\n  // es el reporte .pdf\n  const NewDocument = () => {\n    return (\n      <RepOp dataOP={opCargadas(dataOP)} dataFacturas={facturasCargadas(fa)} apiServerUrl={apiServerUrl} idSociedad={id} />\n    )\n  }\n\n  const { data: fa,\n  } = useQuery(\n    ['fa'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/${idOP}`));\n\n  function facturasCargadas(fa){\n      if(fa){     \n        return { item: fa};\n      }else{\n        return null\n      }\n  }\n  \n  const {\n    data: dataOP,\n    } = useQuery(['dataOP', idSociety.id], () =>\n    getMethod(`op/mostrar/${idSociety.id}/${idOP}`)\n  );  \n  \n  const queryClient = useQueryClient();\n\n  const { mutate: authFilaObra } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: 'obra',\n        creador: loggedUser.id\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['dataOP', idSociety]),\n    }\n  );\n\n  const { mutate: authFilaAdm } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: 'adm',\n        creador: loggedUser.id\n\n      }),\n      \n    {\n      onSuccess: async () =>        \n        await queryClient.refetchQueries(['dataOP', idSociety]),\n    }\n  );\n\n  function opCargadas(dataOP){\n    if(dataOP){     \n      return dataOP;\n    }else{\n      return null\n    }\n}\n\n  /* ************************* */\n  var verAdm = verAuthBoton(\"adm\", dataOP, \"Autorizar en Obra\", loggedUser?.[\"rol.descripcion\"]);\n  const [verBoxAdm, setVerBoxAdm] = useState(verAdm);  \n\n  var verObra = verAuthBoton(\"obra\", dataOP, \"Autorizar en Obra\", loggedUser?.[\"rol.descripcion\"]);\n  const [verBoxObra, setVerBoxObra] = useState(verObra);\n\n  let verAgregar = (loggedUser?.['rol.op'] ==='vista'); // si es vista listo no la ve\n  if(!verAgregar){\n      let conf = dataOP?(dataOP?.confirmada===1):false;\n      if(conf){// confirmada y no es vista\n              if(loggedUser?.['rol.op'] ==='total'){  // si es parcial\n                    verAgregar = false;\n              }else{\n                    verAgregar = true;\n              }\n      }\n  }\n  //dataOP?(dataOP?.confirmada===1):false\n  /* ************************* */\n\n  return (   \n    <div id=\"MENU\" style={{ minHeight: \"100vh\" }}>\n      <nav\n      style={{\n        display: \"flex\",\n        borderBottom: \"1px solid black\",\n        paddingBottom: \"5px\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      <Box display={verBoxObra} sx={{ pt: 1 }}>\n        <Button\n        \n        onClick={() => {\n          toast(({ closeToast }) => (\n            <Box>\n              <Button\n                sx={{ p: 1, m: 1 }}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={closeToast}\n              >\n                Cancelar\n              </Button>\n              <Button\n                sx={{ p: 1, m: 1 }}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={() => {\n                  setVerBoxObra(\"none\")\n                  authFilaObra(idOP)\n                  closeToast();\n                }}\n              >\n                Autorizar\n              </Button>\n            </Box>\n          ));\n        }}\n      >\n        Autorizar en Obra\n        </Button>\n      </Box>\n      <Box display={verBoxAdm} sx={{ pt: 1 }}>\n        <Button\n          ref={buttonAdmRef}\n          /*variant=\"info\"*/\n          \n          onClick={() => {\n            toast(({ closeToast }) => (\n              <Box>\n                <Button\n                  sx={{ p: 1, m: 1 }}\n                  \n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={closeToast}\n                >\n                  Cancelar\n                </Button>\n                <Button\n                  sx={{ p: 1, m: 1 }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={() => {\n                    setVerBoxAdm(\"none\")\n                    authFilaAdm(idOP)\n                    closeToast();\n                  }}\n                >\n                  Autorizar\n                </Button>\n              </Box>\n            ));\n          }}\n        >        \n          Autorizar ADM\n        </Button>      \n      </Box>\n\n      <Box sx={{ pt: 1 }}>\n        <Button\n          /*variant=\"info\"*/\n          onClick={() => {\n            setVerPDF(!verPDF);\n          }}\n        >\n          {verPDF ? \"Ocultar PDF\" : \"Ver PDF\"}\n        </Button>\n\n        <PDFDownloadLink\n          document={<RepOp dataOP={opCargadas(dataOP)} dataFacturas={facturasCargadas(fa)} apiServerUrl={apiServerUrl} idSociedad={id} />}\n          fileName={fileName}\n        >\n          <Button variant=\"info\" onClick={guardar_en_server} >Descargar</Button>\n        </PDFDownloadLink>\n\n   \n      </Box>\n  \n\n\n    </nav>     \n\n      <Helmet>\n          <title>\n          op:{numero.replace(\"OP_\",\"\")} | {idSociety?.nombre}\n          </title>\n      </Helmet>  \n      <>\n                  \n          {verPDF ? (\n            <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\n              <RepOp dataOP={opCargadas(dataOP)} dataFacturas={facturasCargadas(fa)} apiServerUrl={apiServerUrl} idSociedad={id} />\n            </PDFViewer>\n          ) : \n     \n          <Box\n                sx={{\n                  backgroundColor: 'background.default',\n                  minHeight: '100%',\n                  py: 3,\n                }}\n              >\n            <Container >\n\n              <Box sx={{ pt: 3 }}>\n                <Grid container spacing={{ xs: 0.5, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }} >\n                                \n                      <Grid item md={7}>\n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                              Solicitud de Pago: {numero.replace(\"OP_\",\"\")}\n                            </Typography>\n                      </Grid>\n                      <Grid item md={5}>\n                            <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                              {mostrarFechaMesTXT(fecha)}\n                            </Typography>\n                      </Grid>             \n\n                </Grid>\n              </Box>\n              <Hidden  smUp={( verAgregar)} >\n              <Box sx={{ pt: 3 }}>\n              \n                <AgregarFactura\n                  OPId={idOP}\n                  fecha={fecha}\n                  empresaId={empresaId}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n                />\n               \n              </Box>\n              </Hidden> \n              <Box  sx={{ pt: 3 }}>\n                <GrillaDetalleOP\n                  OPId={idOP}\n                  fecha={fecha}\n                  empresaId={empresaId}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n                />\n              </Box>\n\n              <Box  sx={{ pt: 3 }}>\n                <FormDetalleOP\n                  OPId={idOP}\n                  estadoOP={estadoOP}\n                  confirmada={confirmada}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n                />\n              </Box>    \n           \n   \n                 \n         \n            </Container>\n            \n          </Box>\n          \n          }\n        </>\n   \n    </div>\n  );\n}\n\n\nfunction verAuthBoton(tipo, dataOP, label, rol_usuario){\n  // rol adm, obra, manager\n\n  let rta = \"\";\n\n  if(tipo === \"manager\"){rta = label} \n  if(tipo === rol_usuario){rta = label} \n\n\n  if(tipo===\"adm\"){\n    if(dataOP?.auth_adm){\n      if(dataOP.auth_adm[0]){\n        if(dataOP.auth_adm[0].usuarios[0].user !== undefined){\n          rta = \"\";\n        }\n      }     \n    }\n  }else{\n    if(dataOP?.auth_obra){\n      if(dataOP.auth_obra[0]){\n        if(dataOP.auth_obra[0].usuarios[0].user !== undefined){\n          rta = \"\";\n        }\n      }     \n    }\n  }  \n\n  if(rta ===\"\"){\n    return \"none\";\n  }else{  \n    return \"\";\n  }  \n\n}\n\n","import { useState } from 'react';\nimport { useQuery} from 'react-query';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { isNumberUsed, isNumberUsedDig } from 'src/utils/utils';\nimport { IconButton, Collapse, Box, TextField, Button, Autocomplete, Alert } from '@mui/material';\nimport { getMethod, postMethod } from 'src/utils/api';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormFactura({ idSociety, loggedUser}) {\n  //const { Prompt } = usePrompt();\n  const { setIsPromptOpen, Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { data: fideicomisos } = useQuery(\n    ['fideicomisos'],\n    () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n  const { data: proveedores } = useQuery(\n    ['proveedores'],\n    () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n  const { mutate: addFactura } = useMutation(\n    newFactura => postMethod(`factura/agregar/${idSociety.id}`, newFactura),\n    {\n      onMutate: async newFactura => {\n        newFactura.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['factura', idSociety]);\n        const prevData = await queryClient.getQueryData(['factura', idSociety]);\n        const newData = [...prevData, { ...newFactura, id: new Date().getTime() }];\n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n\n  const [fideInForm, setFideInForm] = useState(null);\n  const [typeInForm, setTypeInForm] = useState(null);\n  const [open, setOpen] = useState(false);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          numero: '',\n          montoTotal: '',\n          fechaIngreso: new Date(),\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          isNumberUsedDig('factura', idSociety.id, values.empresa.id , values.numero);\n          //if (await isNumberUsedDig('factura', idSociety.id, values.empresa.id , values.numero)) {\n          if (true) {\n            setIsPromptOpen(true);\n          }else{\n            addFactura({\n              numero: values.numero,\n              montoTotal: values.montoTotal,\n              fechaIngreso: values.fechaIngreso,\n              empresaId: values.empresa.id,\n              fideicomisoId: values.fideicomiso.id,\n              moneda: 'ARS',\n              creador: loggedUser.id\n            });            \n            //resetForm();\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Fideicomiso'\n              title=\"Seleccione un fideicomiso.\"\n              disablePortal\n              required\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setFideInForm(newValue);\n                setFieldValue('fideicomiso', newValue);\n              }}\n              value={fideInForm}\n              getOptionLabel={option => option.nombre}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={(fideicomisos? fideicomisos:[])}\n              renderInput={params => <TextField {...params} label='Fideicomiso' />}\n            />\n\n             <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Razon Social'\n            title=\"Seleccione un proveedor.\"\n            disablePortal\n            required\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setTypeInForm(newValue);\n              setFieldValue('empresa', newValue);\n            }}\n            value={typeInForm}\n            getOptionLabel={option => option?.razonSocial}\n            isOptionEqualToValue={(option, value) => option?.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField {...params} label='Razon Social' />}\n          />\n\n        \n          <Field\n            as={TextField}\n            title=\"Cargar número completo de la factura.\"\n            label='Numero'\n            type='float'\n            required\n            maxLength={8}\n            size=\"small\"\n            sx={{ width: '20ch' }}\n            name='numero'\n            onChange={event => onlyNumbers(event, setFieldValue, 'numero')}\n          />          \n          \n\n          <Field\n            as={TextField}\n            label='Monto'\n            title=\"Monto total, solo numeros.\"\n            required\n            type='float'\n            size=\"small\"\n            sx={{ width: '20ch' }}\n            name='montoTotal'\n            onChange={event => onlyNumbers(event, setFieldValue, 'montoTotal')}\n          />\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n\n            <Box sx={{ width: '100%' }}>\n            <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>         \n          </Box>\n\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe ese número de factura para esa razon social.\"\n        ok\n      />\n    </>\n  );\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,9}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Button } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\nimport { useNavigate } from 'react-router-dom';\n\nconst columns = (acceso, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    /*renderCell: IrDetalleOP_1,*/\n  }, \n  {\n    field: 'empresa',\n    headerName: 'Razon Social',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'numero',\n    headerName: 'Número',\n    width: 155,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'montoTotal',\n    headerName: 'Monto',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n\n  {\n    field: 'moneda',\n    headerName: '',\n    width: 50,\n    editable: acceso,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'link',\n    headerName: 'Link',\n    width: 110,\n    editable: acceso,\n    headerAlign: 'center',\n    /*renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >{ link }</a>)*/\n  },\n  {\n    field: 'link2',\n    headerName: '',\n    width: 20,\n    editable: false,\n    headerAlign: 'center',\n    renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >ver</a>)\n  },\n\n  {\n    field: 'fechaIngreso',\n    headerName: 'Fecha',\n    width: 155,\n    type: 'date',\n    editable: acceso,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: fFechaIngreso,\n    \n  },\n  {\n    field: 'diasVTO',\n    headerName: 'Días VTO',\n    width: 140,\n    editable: acceso,\n    type: 'singleSelect',\n    valueOptions: [0,1,2,3,4,5,6,7,10,14,15,20,21,28,30,40,50,60,70,80,90,100,120,150]\n  },\n  {\n    field: 'id',\n    headerName: 'VTO',\n    width: 155,\n    type: 'date',\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: fFechaVTO,\n    \n  },\n  {\n    field: 'OPnumero',\n    headerName: 'OP',\n    width: 100,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'estadoOP',\n    headerName: 'Estado OP',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    hide: !acceso,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId, OPnumero} }) => (OPnumero>0? '':\n      <DeleteIcon\n        onClick={e => {\n\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\n// por ahora se inicializa en el login\nvar estados = JSON.parse(localStorage.getItem(\"estados\"));\n\nexport function GrillaFactura({ idSociety, loggedUser }) {\n  \n  const navigate = useNavigate();\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  \n  var acceso = true;\n  if(loggedUser?.['rol.factura'] ==='vista'){acceso =false}\n\n\n  const {\n    data: facturaInformation,\n    isLoading,\n    error,\n  } = useQuery(['factura', idSociety], () => getMethod(`factura/listar/${idSociety.id}/todas/nada`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idFactura => await deleteMethod(`factura/eliminar/${idSociety.id}`, { id: idFactura }),\n    {\n      onMutate: async idFactura => {\n        await queryClient.cancelQueries(['factura', idSociety]);\n        const prevData = queryClient.getQueryData(['factura', idSociety]);\n        const newData = prevData.filter(factura => factura.id !== idFactura);\n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idFactura, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    \n    async ({ field, id, value }) =>\n      ( \n     \n\n      await postMethod(`factura/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      })\n      ),\n      \n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['factura', idSociety]);\n        const prevData = queryClient.getQueryData(['factura', idSociety]);\n\n        const newData = [\n          ...prevData.filter(factura => factura.id !== id),\n          { ...prevData.find(factura => factura.id === id), [field]: value },\n        ];  \n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async el =>    \n      navigate(`./${el?.OPs[0]?.id}/${el?.OPs[0]?.createdAt}/${el.empresaId}/${el?.OPs[0]?.numero}/${el.fideicomisos[0]?.nombre}/${el?.OPs[0]?.estadoOP}/${el?.OPs[0]?.confirmada}`)\n\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={facturaInformation.map(factura => ({\n            id: factura.id,\n            fideicomiso: (factura?.fideicomisos? factura?.fideicomisos[0]?.nombre:''),\n            empresaId: factura.empresaId,\n            empresa:(factura?.empresas? factura?.empresas[0]?.razonSocial:''),\n            numero: factura.numero,\n            link: factura.link,\n            link2: factura.link,\n            montoTotal: factura.montoTotal,\n            moneda: factura.moneda,\n            fechaIngreso: factura.fechaIngreso,\n            diasVTO: factura.diasVTO, \n            fechaVTO: factura.fechaVTO,  \n            OPnumero : (factura?.OPs? factura?.OPs[0]?.numero:''),\n            // OPId: factura.OPId,\n            estadoOP:(factura?.OPs? estados[factura?.OPs[0]?.estado]?.descripcion:''),\n            deleteId: factura.id,\n            onIrDetalle: () => irDetalle(factura),  \n\n          }))}OPs\n          onCellEditCommit={modifyData}\n          columns={columns(acceso, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction fFechaVTO(params) {\n  let f = new Date(params.row.fechaIngreso)\n  let d =0;\n  if(params.row.diasVTO){ \n    if(params.row.diasVTO > 0 ){\n       d =params.row.diasVTO;\n    }\n  }\n  f.setDate(f.getDate() + d);\n  let fechaVTO = mostrarFecha(f);\n\n\n  return fechaVTO;\n}\n\nfunction fFechaIngreso(params) {\n  let fechaIngreso = null; \n  if(params.row.fechaIngreso){\n    fechaIngreso = mostrarFecha(params.row.fechaIngreso);\n  }else{\n    fechaIngreso = '';\n  }\n\n  return fechaIngreso;\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const OPnumero = params.row.OPnumero;\n  return <Button onClick={sendRow} >{OPnumero}  </Button>;\n} ","import { Container, Box, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormFactura } from 'src/components/factura/FormFactura';\nimport { GrillaFactura } from 'src/components/factura/GrillaFactura';\n\nexport function Factura({ idSociety , loggedUser}) {\n  return (\n    <>\n      <Helmet>\n        <title>Facturas | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n          <Box sx={{ pt: 3 }} >\n            <FormFactura idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          </Hidden> \n          <Box sx={{ pt: 3 }}>\n            <GrillaFactura idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { PDFDownloadLink, PDFViewer, pdf } from \"@react-pdf/renderer\";\nimport { Button } from '@mui/material';\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\nimport { postMethod } from 'src/utils/api';\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function OT({ idSociety }) {\n  const id = idSociety.id;\n\n  const dataFacturas ={ \n      item: [\n      {\n          id: 31,\n          OPId: 35,\n          numero: \"333\",\n          fechaIngreso: \"2021-12-17T00:00:00.000Z\",\n          fechaVTO: null,\n          path: null,\n          link: null,\n          empresaId: 1,\n          montoTotal: \"47000\",\n          moneda: \"ARS\",\n          detalle: null,\n          txtOC: null,\n          estadoFactura: null,\n          fideicomisoId: null,\n          rubroId: null,\n          subRubroId: null,\n          usuarioId: 1,\n          empresas: [\n              {\n                  razonSocial: \"Abelson s.a.\"\n              }\n          ]\n      },\n      {\n          id: 19,\n          OPId: 35,\n          numero: \"1919\",\n          fechaIngreso: \"2021-11-04T00:00:00.000Z\",\n          fechaVTO: null,\n          path: null,\n          link: \"aaaa\",\n          empresaId: 1,\n          montoTotal: \"47000\",\n          moneda: \"ARS\",\n          detalle: null,\n          txtOC: null,\n          estadoFactura: null,\n          fideicomisoId: 1,\n          rubroId: null,\n          subRubroId: null,\n          usuarioId: 1,\n          empresas: [\n              {\n                  razonSocial: \"Abelson s.a.\"\n              }\n          ]\n      }\n  ]};\n\n  const dataOP = {\n    id: 35,\n    numero: 56,\n    empresaId: 1,\n    monto: \"94000\",\n    monto_a_pagar: \"93445\",\n    RET_SUSS: \"222\",\n    RET_GAN: \"333\",\n    RET_IVA: \"0\",\n    estadoRET: 2,\n    fideicomisoId: 1,\n    certificadoId: null,\n    estado: 1,\n    estadoOP: 2,\n    fondos: 2,\n    archivada: 0,\n    descripcion: \"wwww\",\n    authADM: 33,\n    authOBRA: 31,\n    createdAt: \"01/03/2021\",\n    auth_obra: [\n      {\n          id: 31,\n          usuarios: [\n              {\n                  user: \"martin\",\n                  id: 1\n              }\n          ]\n      }\n    ],\n    auth_adm: [\n      {\n          \"id\": 33,\n          \"usuarios\": [\n              {\n                  \"user\": \"martin\",\n                  \"id\": 1\n              }\n          ]\n      }\n    ],\n    empresas: [\n      {\n          razonSocial: \"Abelson s.a.\",\n          CUIT: \"30652000076\",\n          mail: \"test@verelmail.com\",\n          CBU: \"0070088720000002642004\",\n          banco: \"Galicia\",\n          nroCuenta: \"2642-0088-0\"\n      }\n    ],\n    \"OPpago\": {\n        id: 3,\n        OPId: 35,\n        banco1: \"bna\",\n        nro1: \"0070088720000002642004\",\n        descri1: \"123\",\n        fecha1: \"01/06/2021\",\n        monto1: \"234.00\",\n        banco2: \"bna\",\n        nro2: \"0070088720000002642004\",\n        descri2: \"asd\",\n        fecha2: \"01/06/2021\",\n        monto2: \"444.00\",\n        banco3: \"\",\n        nro3: \"\",\n        descri3: \"\",\n        fecha3: \"\",\n        monto3: \"0.00\",\n        banco4: null,\n        nro4: null,\n        descri4: null,\n        fecha4: null,\n        monto4: null,\n        usuarioId: 1,\n        sociedadId: 1,\n        createdAt: \"2021-12-05T04:32:09.000Z\",\n        updatedAt: \"2021-12-18T01:32:01.000Z\"\n    },\n    fideicomisos: [\n      {\n          nombre: \"Barlovento\",\n          logo: \"logo_fide_1.png\",\n          color: \"green\",\n          color2: \"#D0F0C0\",\n      }\n    ],\n\n    items: [\n      {\n        sno: 1,\n        desc: \"ad sunt culpa occaecat qui\",\n        qty: 5,\n        rate: 405.89,\n      },\n      {\n        sno: 2,\n        desc: \"cillum quis sunt qui aute\",\n        qty: 5,\n        rate: 373.11,\n      },\n      {\n        sno: 3,\n        desc: \"ea commodo labore culpa irure\",\n        qty: 5,\n        rate: 458.61,\n      },\n      {\n        sno: 4,\n        desc: \"nisi consequat et adipisicing dolor\",\n        qty: 10,\n        rate: 725.24,\n      },\n      {\n        sno: 5,\n        desc: \"proident cillum anim elit esse\",\n        qty: 4,\n        rate: 141.02,\n      },\n    ],\n  };\n\n  const [verWeb, setVerWeb] = React.useState(false);\n  const [verPDF, setVerPDF] = React.useState(false);\n\n  const NewDocument = () => {\n    return (\n      <RepOp dataOP={dataOP} />\n    )\n  }\n\n //guarda en server\n  const getPdfBlob = async () =>   {\n\n      let blobPdf = await pdf(NewDocument()).toBlob();\n      let formData = new FormData();\n      formData.append('logo', blobPdf);\n      formData.append('id', 15);    \n      postMethod('op/modificar/1', formData);\n      \n  }\n\n  const guardar_en_server = () => {\n\n    setTimeout(() => {\n      getPdfBlob();\n    }, 300);\n  }\n\n  const Menu = () => (\n    <nav\n      style={{\n        display: \"flex\",\n        borderBottom: \"1px solid black\",\n        paddingBottom: \"5px\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <Button\n        variant=\"dark\"\n        onClick={() => {\n          setVerWeb(!verWeb);\n          setVerPDF(false);\n        }}\n      >\n        {verWeb ? \"Ocultar Web\" : \"Ver Web\"}\n      </Button>\n      <Button\n        variant=\"dark\"\n        onClick={() => {\n          setVerPDF(!verPDF);\n          setVerWeb(false);\n        }}\n      >\n        {verPDF ? \"Ocultar PDF\" : \"Ver PDF\"}\n      </Button>\n\n      <PDFDownloadLink\n        document={<RepOp dataOP={dataOP} />}\n        fileName=\"miReporte.pdf\"\n      >\n        <Button variant=\"info\" onClick={guardar_en_server} >Crear y Descargar</Button>\n      </PDFDownloadLink>\n\n\n    </nav>\n  );\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      <Menu /> \n        <>          \n          {verPDF ? (\n            <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\n              <RepOp dataOP={dataOP} dataFacturas={dataFacturas} apiServerUrl={apiServerUrl} idSociedad={id} />\n            </PDFViewer>\n          ) : null}\n        </>\n   \n    </div>\n  );\n}\n\n\n","import { useState } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport dotenv from 'dotenv';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport GlobalStyles from 'src/components/auxiliares/GlobalStyles';\nimport theme from 'src/theme';\n// import { UserContext } from 'src/context/UserContext';\n\n// *** Generales *********************************\n\nimport DashboardLayout from 'src/components/auxiliares/DashboardLayout';\nimport MainLayout from 'src/components/auxiliares/MainLayout';\nimport { Login } from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport { useAuth } from 'src/utils/useAuth';\n\n// *** Auxiliares *********************************\nimport { Dolar } from 'src/pages/Dolar';\nimport { Cac } from 'src/pages/Cac';\nimport { Rubro } from 'src/pages/Rubro';\nimport { SubRubro } from 'src/pages/SubRubro';\nimport { Banco } from 'src/pages/Banco';\nimport { CuentaBanco } from 'src/pages/CuentaBanco';\n\n// *** Maestros *********************************\nimport { Usuarios } from 'src/pages/Usuarios';\nimport { Proveedores } from 'src/pages/Proveedores';\nimport { Persona } from 'src/pages/Persona';\nimport { Empresa } from 'src/pages/Empresa';\n\n// *** Fide *********************************\nimport { Fideicomiso } from 'src/pages/Fideicomiso';\nimport { DetalleFideicomiso } from 'src/pages/DetalleFideicomiso';\n\n// *** Contrato *********************************\n//import { Contratos } from 'src/pages/Contratos';\n//import { ContratoAlta } from 'src/pages/ContratoAlta';\n//import { Cobros } from 'src/pages/Cobros';\n//import { Cuotas } from 'src/pages/Cuotas';\n//import { DetalleContrato } from 'src/pages/DetalleContrato';\n//import { ContratoVista } from 'src/pages/ContratoVista';\n\n// *** Pagos *********************************\nimport { OP } from 'src/pages/OP';\nimport { AuthAdmOP } from 'src/pages/AuthAdmOP';\nimport { AuthObraOP } from 'src/pages/AuthObraOP';\nimport { DetalleOP } from 'src/pages/DetalleOP';\nimport { Factura } from 'src/pages/Factura';\n\n// *** Orden de Trabajo **********************\nimport { OT } from 'src/pages/OT';\n//import { DetalleOT } from 'src/pages/DetalleOT';\n//import { Certificado } from 'src/pages/Certificado';\n\ndotenv.config();\n\nexport default function App() {\n  const { loggedUser, setLoggedUser } = useAuth();\n  const [idSociety, setIdSociety] = useState(() => {\n    const localStorageIdSociety = localStorage.getItem('idSociety');\n    return localStorageIdSociety ? JSON.parse(localStorageIdSociety) : null;\n  });\n\n//  const userData = {\n//    id: 0,\n//  }\n// <UserContext.Provider value={userData} >\n// </UserContext.Provider> \n  return (\n    \n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Routes>\n        {loggedUser ? (\n          <>\n            \n            <Route path=\"/\" element={<Navigate to={`${idSociety?.nombre}`} />} />\n            <Route\n              path=\":societyName\"\n              element={\n                <DashboardLayout\n                \n                  setLoggedUser={setLoggedUser}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n                />\n              }\n            >\n              <Route path=\"dolar\" element={<Dolar idSociety={idSociety} loggedUser={loggedUser}  />} />\n              <Route path=\"cac\" element={<Cac idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"OT\" element={<OT idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"empresa\" element={<Empresa idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"persona\" element={<Persona idSociety={idSociety}  loggedUser={loggedUser}  />} />\n\n              <Route path=\"factura\">\n                <Route path=\"\" element={<Factura idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"OP\">\n                <Route path=\"\" element={<OP idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"AuthAdmOP\">\n                <Route path=\"\" element={<AuthAdmOP idSociety={idSociety}  loggedUser={loggedUser} />}  />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"AuthObraOP\">\n                <Route path=\"\" element={<AuthObraOP idSociety={idSociety}  loggedUser={loggedUser} />}  />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n\n              \n              <Route path=\"proveedores\" element={<Proveedores idSociety={idSociety}   loggedUser={loggedUser} />} />\n              <Route path=\"usuarios\" element={<Usuarios idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              \n              <Route path=\"rubro\"> \n                <Route path=\"\" element={<Rubro idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idRubro/:rubro\"\n                  element={<SubRubro idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"banco\"> \n                <Route path=\"\" element={<Banco idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idBanco/:banco\"\n                  element={<CuentaBanco idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              \n              <Route path=\"fideicomiso\">\n                <Route path=\"\" element={<Fideicomiso idSociety={idSociety}  loggedUser={loggedUser}  />} />\n                <Route\n                  path=\":nombreFideicomiso\"\n                  element={<DetalleFideicomiso idSociety={idSociety}   loggedUser={loggedUser}  />}\n                />\n              </Route>\n              <Route path=\"*\" element={<NotFound />} />\n            </Route>\n            \n          </>\n        ) : (\n          <MainLayout>\n            <Route\n              path=\":societyName/login\"\n              element={\n                <Login\n                  setLoggedUser={setLoggedUser}\n                  idSociety={idSociety}\n                  setIdSociety={setIdSociety}\n                />\n              }\n            />\n            <Route path=\":societyName\" element={<Navigate to=\"login\" />} />\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </MainLayout>\n        )}\n      </Routes>\n    </ThemeProvider>\n    \n  )}\n","import { useEffect, useState } from 'react';\n\nexport function useAuth() {\n  const [loggedUser, setLoggedUser] = useState(() => {\n    const localStorageLoggedUserInfo = localStorage.getItem('loggedUserInfo');\n    return localStorageLoggedUserInfo ? JSON.parse(localStorageLoggedUserInfo) : null;\n  });\n  useEffect(() => {\n    localStorage.setItem('loggedUserInfo', JSON.stringify(loggedUser));\n  }, [loggedUser]);\n\n  return { loggedUser, setLoggedUser };\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  \n  <BrowserRouter>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}