{"version":3,"sources":["components/auxiliares/GlobalStyles.js","theme/shadows.js","theme/typography.js","theme/index.js","components/auxiliares/Logo.js","components/auxiliares/sideBarOptions.js","components/auxiliares/DashboardNavbar.js","components/auxiliares/NavItem.js","components/auxiliares/DashboardSidebar.js","components/auxiliares/DashboardLayout.js","components/auxiliares/MainNavbar.js","components/auxiliares/MainLayout.js","utils/api.js","pages/Login.js","pages/NotFound.js","utils/utils.js","utils/usePrompt.js","components/dolar/FormDolar.js","components/dolar/GrillaDolar.js","pages/Dolar.js","components/cac/FormCac.js","components/cac/GrillaCac.js","pages/Cac.js","components/rubro/FormRubro.js","components/rubro/GrillaRubro.js","pages/Rubro.js","components/rubro/FormSubRubro.js","components/rubro/GrillaSubRubro.js","pages/SubRubro.js","components/banco/FormBanco.js","components/banco/GrillaBanco.js","pages/Banco.js","components/banco/FormCuentaBanco.js","components/banco/GrillaCuentaBanco.js","pages/CuentaBanco.js","components/usuarios/FormUsuario.js","components/usuarios/GrillaUsuario.js","pages/Usuarios.js","components/proveedores/FormProveedor.js","components/proveedores/GrillaProveedor.js","pages/Proveedores.js","components/persona/ManipularPersona.js","components/persona/GrillaPersona.js","pages/Persona.js","components/empresa/ManipularEmpresa.js","components/empresa/GrillaEmpresa.js","pages/Empresa.js","components/fideicomiso/ManipularFideicomiso.js","components/fideicomiso/GrillaFideicomiso.js","pages/Fideicomiso.js","components/fideicomiso/DatosPrincipalesFideicomiso.js","components/detalleFideicomiso/ManipularDetalleFideicomiso.js","components/detalleFideicomiso/GrillaDetalleFideicomiso.js","pages/DetalleFideicomiso.js","components/OP/ManipularOP.js","components/reportes/orden_de_pago/tablaFacturas.js","components/reportes/orden_de_pago/tablaTEC.js","components/reportes/orden_de_pago/tablaADM.js","components/reportes/orden_de_pago/tablaPagos.js","components/reportes/orden_de_pago/tablaPie.js","components/reportes/orden_de_pago/orden_de_pago.js","components/OP/GrillaOP.js","pages/OP.js","components/OP/GrillaOpAuth.js","pages/AuthAdmOP.js","pages/AuthObraOP.js","components/detalleOP/AgregarFactura.js","components/detalleOP/FormDetalleOP.js","components/detalleOP/GrillaDetalleOP.js","pages/DetalleOP.js","components/factura/FormFactura.js","components/factura/GrillaFactura.js","pages/Factura.js","pages/OT.js","App.js","utils/useAuth.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","array","obj","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","Logo","idSociety","alt","src","process","logo","sideBarOptions","path","icon","CreditCard","title","acceso","ListAlt","LocalShipping","Apartment","MenuBook","TrendingUp","AttachMoney","People","DashboardNavbar","setisMobileNavOpen","setLoggedUser","loggedUser","user","avatar","navigate","useNavigate","pathname","useLocation","lastPartOfPath","split","length","logOut","nameOfPage","find","option","nombre","AppBar","elevation","Toolbar","to","style","marginLeft","Typography","align","color","variant","replace","Box","sx","flexGrow","IconButton","Avatar","component","Link","cursor","display","md","lg","onClick","ExitToApp","NavItem","href","Icon","rest","location","active","matchPath","end","ListItem","disableGutters","py","Button","RouterLink","justifyContent","textTransform","mr","size","DashboardSidebar","isMobileNavOpen","content","flexDirection","p","List","arrMenu","map","item","Drawer","xs","anchor","onClose","open","PaperProps","top","arr","forEach","indexOf","trim","undefined","push","splice","DashboardLayoutRoot","styled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","useState","MainNavbar","props","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","apiServerUrl","getMethod","url","axios","get","data","postMethod","newData","post","deleteMethod","infoOfElementToDelete","delete","Login","setIdSociety","useContext","SocietyContext","societyName","useParams","localStorage","setItem","isAlertOpen","setIsAlertOpen","useEffect","societyStateObjectSetter","bancos","useQuery","id","JSON","stringify","cuentasbanco","descripcion","Helmet","onChangeClientState","nombreComercial","Container","maxWidth","enableReinitialize","initialValues","email","dominio","password","onSubmit","values","actions","userCheck","resetForm","handleSubmit","TextField","fullWidth","label","name","onBlur","handleBlur","onChange","handleChange","value","autoComplete","type","Alert","severity","disabled","isSubmitting","nameToId","societyData","nombreSociedad","removeItem","mail","pass","loggedUserInfo","NotFound","textAlign","marginTop","Qdigitos","isValidDate","d","f","Date","isNaN","getTime","mostrarFecha","fecha","toLocaleDateString","timeZone","mostrarFechaMesTXT","getDate","month","getFullYear","yearMonthDayString","getMonth","toString","padStart","isNumberUsedDig","endpoint","empresaId","numero","num","parseInt","slice","isDateUsed","date","usePrompt","isPromptOpen","setIsPromptOpen","Prompt","ok","action","message","Dialog","handleClose","DialogTitle","DialogActions","handleActionAndClose","autoFocus","FormDolar","queryClient","useQueryClient","useMutation","newDolar","onMutate","creador","invalidateQueries","getQueryData","prevData","setQueryData","onError","err","context","onSettled","addDolar","mutate","mep","BCRA","setSubmitting","setFieldValue","Picker","as","maxLength","event","onlyNumbers","typeOfData","preventDefault","target","test","field","form","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","renderInput","params","required","columns","setRowIdToDelete","headerName","headerAlign","valueFormatter","preProcessEditCellProps","editable","Intl","NumberFormat","minimumFractionDigits","format","Number","renderCell","deleteId","row","Delete","e","GrillaDolar","rowIdToDelete","dolarInformation","isLoading","error","idDolar","cancelQueries","filter","dolar","eliminate","modifyData","rows","blue","onCellEditCommit","pageSize","disableSelectionOnClick","autoHeight","scrollbarSize","components","CustomToolbar","Dolar","minHeight","pt","FormCac","newCac","addCac","estimado","definitivo","year","GrillaCac","cacInformation","idCac","cac","Cac","FormRubro","newRubro","addRubro","rubro","GrillaRubro","rubroInformation","idRubro","onRowDoubleClick","compone","Rubro","FormSubRubro","newSubRubro","addSubRubro","subRubro","GrillaSubRubro","subrubroInformation","idSubRubro","subrubro","SubRubro","FormBanco","newBanco","addBanco","banco","IrDetalleOP_1","GrillaBanco","bancoInformation","idBanco","irDetalle","descripcionLarga","onIrDetalle","sendRow","Banco","FormCuentaBanco","newCuentaBanco","addCuentaBanco","cuentaBanco","GrillaCuentaBanco","cuentaBancoInformation","idCuentaBanco","cuentabanco","CuentaBanco","FormUsuario","newUsuario","addUsuario","Passformat","rol_descripcion","renderEditCell","ComboBox","roles","GrillaUsuario","usuarioInformation","idUsuario","usuario","rolId","rol","density","api","selectedRol","setSelectedRol","Autocomplete","newValue","setEditCellValue","commitCellChange","setCellMode","options","isOptionEqualToValue","op","val","getOptionLabel","Usuarios","FormProveedor","newProveedor","addProveedor","razonSocial","CUIT","rubros","subRubros","join","console","log","mostrarCUIT","ComboBoxSub","GrillaProveedor","proveedorInformation","idProveedor","proveedor","rubroID","rubroId","subrubroID","subrubroId","telefono","CBU","nroCuenta","enviar_OP_auto","selectedRubro","setSelectedRubro","subR","selectedsubRubro","setSelectedsubRubro","Proveedores","Hidden","smUp","ManipularPersona","onSuccess","refetchQueries","checkName","Boolean","deleteRow","onDelete","toast","closeToast","m","GrillaPersona","el","onEditCellChange","Persona","ManipularEmpresa","checkCuit","cuit","GrillaEmpresa","Empresa","ManipularFideicomiso","fechaInicio","fechaFin","checkIfNameExists","setColor","passedData","colorElegido","ColorPicker","originalColor","css","colorOptions","GrillaFideicomiso","fideicomisoInformation","idFideicomiso","fideicomiso","cloud","previousStateColor","renderOption","c","Fideicomiso","createFilterOptions","DatosPrincipalesFideicomiso","selectedFideicomisoData","managerId","setManagerId","personaId","isDialogOpen","setIsDialogOpen","contactInfo","directionInfo","localizacionId","peopleInfo","setManagerInFideicomiso","addNewPerson","contacto","direccion","nameFormatter","AlertDialog","rowHeight","headerHeight","hideFooter","onCellDoubleClick","transform","DialogContent","Select","closeDialog","newName","inputValue","filterOptions","filtered","isExisting","some","selectOnFocus","clearOnBlur","handleHomeEndKeys","freeSolo","ManipularDetalleFideicomiso","typesOfProducts","initialData","codigo","addProduct","typeInForm","setTypeInForm","code","description","fideicomisoId","tipo","GrillaDetalleFideicomiso","products","deleteProduct","metros","precioULT","sortModel","sort","DetalleFideicomiso","nombreFideicomiso","ManipularOP","verCheckBlue","chkblue","setChkblue","fideicomisos","proveedores","ddfacturas","ddfacturasBlue","addOP","fideInForm","setFideInForm","rsInForm","setRsInForm","factInForm","setFactInForm","setOpen","montoTotal","fechaIngreso","empresa","subRubroId","facturaId","factura","disablePortal","FormControlLabel","control","Checkbox","onlyCheck","Collapse","in","mb","styles","StyleSheet","create","container","borderBottomWidth","alignItems","fontStyle","borderRightWidth","qty","paddingRight","rate","amount","amountRow","tablaFacturas","dataOP","dataFacturas","flexWrap","borderWidth","borderColor","borderBottomColor","color2","borderRightColor","empresas","detalle","link","txtOC","espacio","col1","col2","col3","tablaTEC","auth_obra","usuarios","rowbis","col1bis","col2bis","col3bis","tablaADM","monto","RET_SUSS","COMP_SUSS","RET_GAN","COMP_GAN","RET_IVA","COMP_IVA","monto_a_pagar","auth_adm","col4","col5","rowf","descriptionf","totalf","tablaPagos","arr_id","arr_banco","arr_cid","arr_cuenta","OPpago","modo1","banco1","nro1","descri1","fecha1","monto1","modo2","banco2","nro2","descri2","fecha2","monto2","modo3","banco3","nro3","descri3","fecha3","monto3","modo4","banco4","nro4","descri4","fecha4","monto4","parseFloat","tableContainer","tablaPie","page","fontFamily","lineHeight","marginRight","titleContainer","reportTitle","reportTitleFide","subreportTitle","saltolinea","invoiceNoContainer","invoiceDateContainer","invoiceDate","parse","getItem","i","bancoId","j","orden_de_pago","idSociedad","ancho_logo","titulo","color3","uri","method","headers","createdAt","miOP","fa","verColumnBlue","puedeEditar","hide","bgcolor","IrDetalleOP_2","ComboBoxEst","estados","misFacturas","ComboBoxRet","retenciones","NonObraAuthRow","NonAdmAuthRow","ComboBoxFon","fondos_s","DescargarPDF","EnviarMail","confirmada","GrillaOP","result","accesoOP","opInformation","grfacturas","estadoOP","idOP","getPdfBlob","cargar_y_subir_OP","pdf","NewDocument","toBlob","blobPdf","formData","FormData","append","authOBRA","tipoAutorizacion","opid","nonAuthObra","authADM","nonAuthAdm","mailTo","mailOP","mailaccount","mailfromname","mailConstructora","enviarCorreo","selectionModel","setSelectionModel","OP","moneda","estadoRET","retencion","estado","fondos","archivada","enviada","apr_obra","apr_adm","OPId","aprobado_obra","aprobado_adm","fondos_","formaPago","onAuthObra","onAuthAdm","onEnviar","cargarOP","esEditable","isCellEditable","checkboxSelection","onSelectionModelChange","getOPs","generar_y_enviar","getPdfBlob_2","enviarCorreo_2","rta","csvOptions","fields","selectedRet","selectedEst","defaultValue","InputProps","readOnly","selectedFon","authRow","toUpperCase","nombrePDF","notify","setTimeout","document","fileName","blob","loading","enviar","authId","formaPagos","GrillaOpAuth","str","documento","authFila","AuthAdmOP","AuthObraOP","AgregarFactura","refetch","facturas","addFactura","FormDetalleOP","formOP","newOP","updateOP","isConfirmOP","setIsConfirmOP","verBotonDesconfirmar","flagPago","Grid","spacing","sm","handleModification","Switch","confirmarOP","defaultChecked","cuenta","inputProps","min","Math","round","valorCombo","regex","flag","valor","verEliminar","rel","DeleteRow","GrillaDetalleOP","selectedFacturaData","OPs","link2","fechaVTO","DetalleOP","React","verPDF","setVerPDF","buttonAdmRef","useRef","facturasCargadas","cargadas","authFilaObra","authFilaAdm","verAdm","verAuthBoton","verBoxAdm","setVerBoxAdm","verObra","verBoxObra","setVerBoxObra","verAgregar","borderBottom","paddingBottom","mt","ref","rol_usuario","FormFactura","newFactura","setFBlue","n","fFechaIngreso","valueOptions","fFechaVTO","OPnumero","GrillaFactura","facturaInformation","idFactura","diasVTO","setDate","Factura","OT","certificadoId","usuarioId","sociedadId","updatedAt","items","sno","desc","verWeb","setVerWeb","guardar_en_server","Menu","estadoFactura","createContext","App","localStorageLoggedUserInfo","useAuth","localStorageIdSociety","Provider","ThemeProvider","element","dotenv","config","QueryClient","ReactDOM","render","client","getElementById"],"mappings":"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","file":"static/js/main.da78b14c.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    '@global': {\n      '*': {\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n        height: '100%',\n        width: '100%',\n      },\n      body: {\n        backgroundColor: '#f4f6f8',\n        height: '100%',\n        width: '100%',\n      },\n      a: {\n        textDecoration: 'none',\n      },\n      '#root': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n  })\n);\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","const array = [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\nexport default array;\n","const obj = {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\nexport default obj;\n","import { createTheme, colors } from '@mui/material';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white,\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#5664d2',\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c',\n    },\n  },\n  shadows,\n  typography,\n});\n\nexport default theme;\n","const apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nconst Logo = ({ idSociety }) => (\n  <img alt=\"Logo\" height=\"60px\" src={`${apiServerUrl}public/${idSociety?.logo}`} />\n);\nexport default Logo;\n","import {\n  AttachMoney,\n  TrendingUp,\n  LocalShipping,\n  People,\n  MenuBook,\n  Apartment,\n  /*Assignment,*/\n  ListAlt,\n  CreditCard,\n  /*\n  Construction,\n  MonetizationOn,\n  Business,\n  PeopleAlt,\n  Schema,\n  AssignmentTurnedIn,*/\n} from '@mui/icons-material';\n\nexport const sideBarOptions = [\n  {\n    path: 'op',\n    icon: CreditCard,\n    title: 'OPs',\n    acceso: 'oppago',\n  },\n\n  {\n    path: 'AuthAdmOP',\n    icon: CreditCard,\n    title: 'OPs Auth ADM',\n    acceso: 'AuthAdmOP',\n  },\n\n  {\n    path: 'AuthObraOP',\n    icon: CreditCard,\n    title: 'OPs Auth Obra',\n    acceso: 'AuthObraOP',\n  },\n\n  {\n    path: 'factura',\n    icon: ListAlt,\n    title: 'Facturas',\n    acceso: 'factura',\n  },\n  {\n    path: 'proveedores',\n    icon: LocalShipping,\n    title: 'Proveedores',\n    acceso: 'proveedores',\n  },\n  {\n    path: 'fideicomiso',\n    icon: Apartment,\n    title: 'Fideicomisos',\n    acceso: 'fideicomiso',\n  },\n  {\n    path: 'rubro',\n    icon: MenuBook,\n    title: 'Rubros',\n    acceso: 'rubro',\n  },\n\n/*\n  {\n    path: 'empresa',\n    icon: Business,\n    title: 'Empresa',\n  },*/\n  /*\n  {\n    path: 'persona',\n    icon: PeopleAlt,\n    title: 'Personas',\n  },*/\n  /*\n  {\n    path: 'OT',\n    icon: TrendingUp,\n    title: 'test pdf',\n    acceso: 'OT',\n  },*/\n  {\n    path: 'cac',\n    icon: TrendingUp,\n    title: 'CAC',\n    acceso: 'cac',\n  },\n  {\n    path: 'dolar',\n    icon: AttachMoney,\n    title: 'Dólar',\n    acceso: 'dolar',\n  },\n\n  {\n    path: 'banco',\n    icon: AttachMoney,\n    title: 'Bancos',\n    acceso: 'banco',\n  },\n\n  {\n    path: 'usuarios',\n    icon: People,\n    title: 'Usuarios',\n    acceso: 'usuarios',\n  },\n];\n","// import { useState } from 'react';\nimport {\n  Typography,\n  AppBar,\n  Toolbar,\n  Box,\n  IconButton,\n  Avatar,\n} from '@mui/material';\nimport { ExitToApp, Menu } from '@mui/icons-material';\nimport { Link, useLocation } from 'react-router-dom';\nimport Logo from 'src/components/auxiliares/Logo.js';\nimport { sideBarOptions } from 'src/components/auxiliares/sideBarOptions.js';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport default function DashboardNavbar({\n  setisMobileNavOpen,\n  setLoggedUser,\n  idSociety,\n  loggedUser,\n}) {\n\n  var pathAvatar = '/static/images/avatars/' + loggedUser.avatar;\n\n  const user = {avatar: pathAvatar,};\n\n  const navigate = useNavigate();\n\n  const { pathname } = useLocation();\n\n  const lastPartOfPath = pathname.split('/')[pathname.split('/').length - 1];\n\n  if(!loggedUser){\n    logOut();\n  }\n\n  const nameOfPage =\n    sideBarOptions.find(option => option.path === lastPartOfPath)?.title ||\n    lastPartOfPath;\n\n  //const [notifications] = useState([]);\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n\n\n  return (\n    <AppBar elevation={0}>\n      <Toolbar>\n        <Link to=\"/\">\n          <Logo idSociety={idSociety} />\n        </Link>\n        <div style={{ marginLeft: 50, fontSize: 24 }}>\n          <Typography align=\"left\" color=\"white\" variant=\"h4\">\n            {nameOfPage==='0' || nameOfPage==='1'? 'OP Detalle': nameOfPage\n              .replace('-', ' de ')\n              .replace('%20', ' ')\n              .replace('%20', ' ')\n              .replace('%20', ' ')\n              .replace('_', ': ')}\n          </Typography>\n        </div>\n        <Box sx={{ flexGrow: 1 }} />\n\n        <div>\n          <Typography align=\"left\" color=\"white\" variant=\"h4\">\n            {loggedUser?.user}\n          </Typography>\n        </div>\n\n        <IconButton color=\"inherit\">\n          <Avatar\n            component={Link}\n            to=\"/\"\n            src={user.avatar}\n            sx={{\n              cursor: 'pointer',\n              width: 30,\n              height: 30,\n            }}\n          />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          sx={{ display: { md: 'block', lg: 'none' } }}\n          onClick={setisMobileNavOpen}\n        >\n          <Menu />\n        </IconButton>\n        <IconButton color=\"inherit\" onClick={logOut}>\n          <ExitToApp />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom';\nimport { ListItem, Button } from '@mui/material';\n\nexport function NavItem({ href, icon: Icon, title, ...rest }) {\n  const location = useLocation();\n\n  const active = href\n    ? !!matchPath(\n        {\n          path: href,\n          end: false,\n        },\n        location.pathname\n      )\n    : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0,\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main',\n          }),\n          '& svg': {\n            mr: 1,\n          },\n        }}\n        to={href}\n      >\n        {Icon && <Icon size=\"20\" />}\n        <span>{title}</span>\n      </Button>\n    </ListItem>\n  );\n}\n","import { Box, List, Drawer } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { NavItem } from './NavItem';\nimport { sideBarOptions } from './sideBarOptions';\n\nexport default function DashboardSidebar({ setisMobileNavOpen, setLoggedUser, isMobileNavOpen, idSociety, loggedUser }) {\n  // console.log('idSociety:', idSociety);\n  const navigate = useNavigate();\n  if(!loggedUser){\n    logOut();\n  }\n\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        p: 2,\n      }}\n    >\n      <List>\n        {arrMenu(sideBarOptions, loggedUser?.['rol.accesoTXT']).map(item => (\n          <NavItem\n            href={`/${idSociety?.nombre}/${item.path}`}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <>\n      <Drawer\n        variant=\"temporary\"\n        sx={{ display: { xs: 'block', lg: 'none' } }}\n        anchor=\"left\"\n        onClose={setisMobileNavOpen}\n        open={isMobileNavOpen}\n        PaperProps={{\n          sx: {\n            width: 256,\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n      <Drawer\n        variant=\"persistent\"\n        open\n        sx={{ display: { xs: 'none', lg: 'block' } }}\n        anchor=\"left\"\n        PaperProps={{\n          sx: {\n            width: 256,\n            top: 64,\n            height: 'calc(100% - 64px)',\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n    </>\n  );\n}\n\n// segun acceso en el accessTXT del rol\nfunction arrMenu(sideBarOptions, acceso){\n  \n  let arr =[{}]; \n\n  sideBarOptions.forEach(obj => {\n    if(acceso.indexOf(obj.acceso) !== -1 && obj.acceso.trim()!==\"\" && obj.acceso!==null && obj.acceso!==undefined){\n      arr.push(obj);\n    }  \n  })\n  arr.splice(0, 1);\n\n  return arr;\n}\n","import { useState } from 'react';\nimport { styled } from '@mui/system';\nimport { Outlet } from 'react-router-dom';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\nimport { useNavigate } from 'react-router-dom';\n// import { ReactQueryDevtools } from 'react-query/devtools';\n// <ReactQueryDevtools initialIsOpen={false} />\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}));\n\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 256,\n  },\n}));\n\nconst DashboardLayoutContainer = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n});\n\nconst DashboardLayoutContent = styled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n});\n\nexport default function DashboardLayout({ setLoggedUser, idSociety, loggedUser }) {\n  \n  const navigate = useNavigate();\n\n  if(!loggedUser){\n    logOut();\n  }\n\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n  const [isMobileNavOpen, setisMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar\n        setisMobileNavOpen={() => setisMobileNavOpen(!isMobileNavOpen)}\n        setLoggedUser={setLoggedUser}\n        idSociety={idSociety}\n        loggedUser={loggedUser}\n      />\n      <DashboardSidebar\n        idSociety={idSociety}\n        loggedUser={loggedUser}\n        setisMobileNavOpen={() => setisMobileNavOpen(!isMobileNavOpen)}\n        isMobileNavOpen={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n            \n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@mui/material';\nimport Logo from './Logo';\n\nconst MainNavbar = props => (\n  <AppBar elevation={0} {...props}>\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to='/'>\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { styled } from '@mui/system';\nimport MainNavbar from 'src/components/auxiliares/MainNavbar';\n\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}));\n\nconst MainLayoutWrapper = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n});\n\nconst MainLayoutContainer = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n});\n\nconst MainLayoutContent = styled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import axios from 'axios';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport const getMethod = async url => {\n  const { data } = await axios.get(`${apiServerUrl}${url}`);\n  return data;\n};\n\nexport const postMethod = async (url, newData) => {\n  const { data } = await axios.post(`${apiServerUrl}${url}`, newData);\n  return data;\n};\n\nexport const deleteMethod = async (url, infoOfElementToDelete) => {\n  // console.log('infoOfElementToDelete:', infoOfElementToDelete);\n  return await axios.delete(`${apiServerUrl}${url}`, { data: infoOfElementToDelete });\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Box, TextField, Button, Alert } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { Formik } from 'formik';\nimport { getMethod } from 'src/utils/api';\nimport { postMethod } from 'src/utils/api';\nimport { useQuery } from 'react-query';\nimport { SocietyContext } from 'src/App';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function Login({ setLoggedUser, setIdSociety }) {\n\n  const idSociety = useContext(SocietyContext);\n  //const queryClient = useQueryClient();\n  let { societyName } = useParams();\n  const navigate = useNavigate();\n\n  // localStorage.clear();\n  \n  localStorage.setItem(\"loggedUserInfo\", null);\n  localStorage.setItem(\"bs\", null);\n  localStorage.setItem(\"co\", null);\n  localStorage.setItem(\"estados\", null);\n  localStorage.setItem(\"formaPagos\", null);\n\n  const [isAlertOpen, setIsAlertOpen] = useState('none');\n\n\n  useEffect(() => {\n    societyStateObjectSetter(societyName, setIdSociety);\n  }, [setIdSociety, societyName]);\n\n  /****************************************************/\n  /*************** deuda tecnica **********************/\n  /****************************************************/\n\n  const { data: bancos } = useQuery(['bancos', idSociety], () =>\n    getMethod(`banco/listar/${idSociety.id}`)\n  );\n  localStorage.setItem(\"bs\", JSON.stringify(bancos));\n\n  const { data: cuentasbanco } = useQuery(['cuentasbanco', idSociety], () =>\n    getMethod(`cuentabanco/listar/${idSociety.id}/0`)\n  );  \n  localStorage.setItem(\"co\", JSON.stringify(cuentasbanco));\n\n  const estados = [  \n    { id: 0, descripcion: '-' },\n    { id: 1, descripcion: 'Para autorizar Obra' },\n    { id: 2, descripcion: 'Para pagar' },\n    { id: 3, descripcion: 'Pagada' },\n    { id: 4, descripcion: 'Para autorizar AC' },\n    { id: 5, descripcion: 'Pagado Parcial' },\n    { id: 6, descripcion: 'Anulado' },\n    { id: 7, descripcion: 'Cargada en Banco' },\n  ];\n  localStorage.setItem(\"estados\", JSON.stringify(estados));\n  const formaPagos = \"-,Transferencia ARS,Transferencia USD,Cheque,Efectivo ARS,Efectivo USD,Otra\";\n  localStorage.setItem(\"formaPagos\", formaPagos); \n\n  /****************************************************/\n  /****************************************************/\n  /****************************************************/\n\n  return (\n    <>\n      <Helmet onChangeClientState={() => {}}>\n        <title>Login | {idSociety?.nombreComercial ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <div style={{ width: '100%' }} >\n            <img\n              /* backgroundColor:\"#6326d5\" */\n              style={{ display: 'block', margin: 'auto', width: '50%', backgroundColor:\"#777777\" }}\n              src={`${apiServerUrl}public/${idSociety?.logo}`}\n              alt=\"logo\"\n            />\n          </div>\n          <Formik\n            enableReinitialize=\"true\"\n            initialValues={{\n              email: `${idSociety?.dominio ?? ''}`,\n              password: '',\n            }}\n            onSubmit={async (values, actions) => {\n              if (await userCheck(idSociety.id, values.email, values.password, setLoggedUser)) {\n\n                /****************************************************/\n                /*************** deuda tecnica **********************/\n                /****************************************************/\n\n                          \n\n                /****************************************************/\n                /****************************************************/\n                /****************************************************/\n\n                navigate(`/${societyName}`, { replace: true });\n              } else {\n                setIsAlertOpen('flex');\n                actions.resetForm();\n              }\n            }}\n          >\n            {function (props) {\n              return (\n                <form onSubmit={props.handleSubmit}>\n                  <TextField\n                    fullWidth\n                    label=\"Correo\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={props.handleBlur}\n                    onChange={props.handleChange}\n                    value={props.values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Contraseña\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    autoComplete=\"on\"\n                    onBlur={props.handleBlur}\n                    onChange={props.handleChange}\n                    type=\"password\"\n                    value={props.values.password}\n                    variant=\"outlined\"\n                  />\n                  <Box sx={{ py: 2 }}>\n                    <Alert\n                      style={{ display: isAlertOpen }}\n                      severity=\"error\"\n                      onClose={() => {\n                        setIsAlertOpen('none');\n                      }}\n                    >\n                      Correo y/o contraseña inválidos\n                    </Alert>\n                    <Button\n                      color=\"primary\"\n                      disabled={props.isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Ingresar\n                    </Button>\n                  </Box>\n                </form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n}\n\nasync function societyStateObjectSetter(societyName, setIdSociety) {\n  const societyData = await nameToId(societyName);\n  setIdSociety({ ...societyData });\n}\n\nasync function nameToId(nombreSociedad) {\n  const data = await getMethod(`sociedad/mostrar/${nombreSociedad}`);\n  localStorage.removeItem('idSociety');\n  if (data) {\n    localStorage.setItem('idSociety', JSON.stringify({ ...data }));\n  }\n  return await data;\n}\n\nasync function userCheck(idSociety, email, password, setLoggedUser) {\n  const loggedUserInfo = await postMethod(`usuario/login/${await idSociety}`, {\n    mail: email,\n    pass: password,\n  });\n\n\n  setLoggedUser(loggedUserInfo);\n  return loggedUserInfo !== null ? true : false;\n}\n","import { Container, Box, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n      }}\n    >\n      <Container >\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\n          404: La página no existe\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              width: 560,\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","\nimport { getMethod } from './api';\n// import moment from 'moment';\nconst Qdigitos = process.env.REACT_APP_Q_DIGITOS_FACTURA;\n\nexport function isValidDate(d) {\n  let f = new Date(d);\n  return !isNaN(f.getTime());\n}\n\n// Devuelve CUIT con formato 20-44.123.225-8\nexport function mostrarCUIT(value) {\n  try {\n    value = value.split('');\n    value.splice(2, 0, '-');\n    value.splice(5, 0, '.');\n    value.splice(9, 0, '.');\n    value.splice(13, 0, '-');\n    return value.join('');\n  } catch (e) {\n    console.log('hubo un error: ', e);\n    return null;\n  }\n}\n\n// entra base de datos\n// Devuelve un Date con formato 1/5/2021\nexport function mostrarFecha(fecha) {\n\n  \n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return new Date(fecha).toLocaleDateString('es-AR', { timeZone: 'UTC' });\n  }\n}\n\n// Devuelve un Date con formato 5 dic. 2021\nexport function mostrarFechaMesTXT(fecha) {\n  let dd = new Date(fecha).getDate();\n  let mm = new Date(fecha).toLocaleDateString('es-AR', { timeZone: 'UTC',  month: 'short' });\n  let yyyy = new Date(fecha).getFullYear();\n  return dd + ' ' + mm + ' '  + yyyy;\n \n}\n\n// entra date\n// Devuelve un string con formato YYYY-MM-DD\nexport function yearMonthDayString(fecha) {\n\n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return `${fecha.getFullYear(fecha)}-${(1 + fecha.getMonth(fecha)).toString().padStart(2, '0')}-${fecha\n      .getDate(fecha)\n      .toString()\n      .padStart(2, '0')}`;\n  } \n}\n\n// entra date\n// Devuelve un string con formato YYYY-MM-DD\nexport function yearMonthDayNum(fecha) {\n\n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return `${fecha.getFullYear(fecha)}${(1 + fecha.getMonth(fecha)).toString().padStart(2, '0')}${fecha\n      .getDate(fecha)\n      .toString()\n      .padStart(2, '0')}`;\n  } \n}\n\n// entra date\n// Devuelve una fecha con dia 1\nexport function dateToStringWithDayEqualToOne(date) {\n  return `${date.getFullYear(date)}-${(1 + date.getMonth(date)).toString().padStart(2, '0')}-01`;\n}\n\nexport async function isNumberUsed(endpoint, idSociety, empresaId, numero) {\n  let url = `${endpoint}/mostrar/${idSociety}/${empresaId}/${numero}`;\n  let data = await getMethod(url);\n  return !!data;\n}\n\nexport async function isNumberUsedDig(endpoint, idSociety, empresaId, numero) {\n  \n\n  // let dig = process.env.Q_DIGITOS_COM_FACTURA;\n  let num = \"\" + numero; \n  if(num.length > parseInt(Qdigitos)){\n    num = num.slice(num.length - parseInt(Qdigitos));\n  } \n  \n  let url = `${endpoint}/checknumero/${idSociety}/${empresaId}/${num}`;\n  let data = await getMethod(url);\n  \n  return (!!data);\n\n}\n\n\nexport async function isDateUsed(endpoint, idSociety, date) {\n  let url = `${endpoint}/mostrar/${idSociety}/${date}`;\n  let data = await getMethod(url);\n  return !!data;\n}\n\nexport function onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\n/*\nultimos\n\tconst id = \"ctl03_Tabs1\";\n\tconsole.log(id.slice(id.length - 5)); //Outputs: Tabs1\nprimeros\n\tconst string = \"0123456789\";\n\tconsole.log(string.slice(0, 2)); // \"01\"\n\tconsole.log(string.slice(0, 8)); // \"01234567\"\n\tconsole.log(string.slice(3, 7)); // \"3456\"\nsin decimales\n\tMath.trunc(42.84);    // 42\n\tMath.trunc(0.123);    //  0\nNumber to string\n\tn.toString()\n\t\"\"+n\n  */\n","import { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\n\nexport function usePrompt() {\n  const [isPromptOpen, setIsPromptOpen] = useState(false);\n\n  return { Prompt, setIsPromptOpen };\n\n  function Prompt({\n    ok = false,\n    action = () => {},\n    message = '¿Estás seguro de eliminar este registro?',\n  }) {\n    // console.log('action', action);\n    return (\n      <div>\n        <Dialog\n          open={isPromptOpen}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{message}</DialogTitle>\n          <DialogActions>\n            {ok ? (\n              <Button onClick={handleClose}>Ok</Button>\n            ) : (\n              <>\n                <Button onClick={handleClose}>No</Button>\n                <Button onClick={() => handleActionAndClose(action)} autoFocus>\n                  Sí\n                </Button>\n              </>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n\n  function handleClose() {\n    setIsPromptOpen(false);\n  }\n\n  function handleActionAndClose(action) {\n    action();\n    handleClose();\n  }\n}","import { useContext } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { postMethod } from 'src/utils/api';\nimport { yearMonthDayString, isDateUsed } from 'src/utils/utils';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nimport { SocietyContext } from 'src/App';\n\nexport function FormDolar({loggedUser}) {\n\n  const idSociety = useContext(SocietyContext);\n  const { setIsPromptOpen, Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  /*\n  const user = useUser();\n  console.log(user); */\n\n  const { mutate: addDolar } = useMutation(\n    newDolar => postMethod(`dolar/agregar/${idSociety.id}`, newDolar),\n    {\n      onMutate: async newDolar => {\n        newDolar.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['dolar', idSociety]);\n        const prevData = await queryClient.getQueryData(['dolar', idSociety]);\n        const newData = [...prevData, { ...newDolar, id: new Date().getTime() }];\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          fecha: new Date(),\n          mep: '',\n          BCRA: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          values.fecha = yearMonthDayString(values.fecha);\n          if (await isDateUsed('dolar', idSociety.id, values.fecha)) {\n            setIsPromptOpen(true);\n          } else addDolar(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            <Field component={Picker} label=\"Fecha\" type=\"date\" name=\"fecha\" />\n            <Field\n              as={TextField}\n              label=\"BCRA\"\n              size=\"small\"\n              type=\"float\"\n              maxLength={4}\n              name=\"BCRA\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'BCRA')}\n            />\n            <Field\n              as={TextField}\n              label=\"MEP\"\n              size=\"small\"\n              type=\"float\"\n              name=\"mep\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'mep')}\n            />\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\nfunction Picker({ field, form }) {\n  const { name, value } = field;\n  const { setFieldValue } = form;\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DesktopDatePicker\n        label=\"Fecha\"\n        inputFormat=\"dd/MM/yyyy\"\n        value={value}\n        onChange={value => setFieldValue(name, value)}\n        renderInput={params => <TextField required size=\"small\" {...params} />}\n      />\n    </LocalizationProvider>\n  );\n}","\nimport * as React from 'react';\nimport { useState, useContext } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\nimport { SocietyContext } from 'src/App';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'fecha',\n    headerName: 'Fecha',\n    width: 150,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => mostrarFecha(value),\n  },\n  {\n    field: 'BCRA',\n    preProcessEditCellProps: onlyNumbers,\n    headerName: 'BCRA',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'mep',\n    preProcessEditCellProps: onlyNumbers,\n    headerName: 'MEP',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaDolar() {\n  const idSociety = useContext(SocietyContext);\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: dolarInformation,\n    isLoading,\n    error,\n  } = useQuery(['dolar', idSociety], () => getMethod(`dolar/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idDolar => await deleteMethod(`dolar/eliminar/${idSociety.id}`, { id: idDolar }),\n    {\n      onMutate: async idDolar => {\n        await queryClient.cancelQueries(['dolar', idSociety]);\n        const prevData = queryClient.getQueryData(['dolar', idSociety]);\n        const newData = prevData.filter(dolar => dolar.id !== idDolar);\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idDolar, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`dolar/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['dolar', idSociety]);\n        const prevData = queryClient.getQueryData(['dolar', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(dolar => dolar.id !== id),\n          { ...prevData.find(dolar => dolar.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={dolarInformation.map(dolar => ({\n            id: dolar.id,\n            fecha: dolar.fecha,\n            BCRA: dolar.BCRA,\n            blue: dolar.blue,\n            descripcion: dolar.descripcion,\n            mep: dolar.mep,\n            deleteId: dolar.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction onlyNumbers(data) {\n\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  const isValid = regex.test(data.props.value.toString());\n  const error = !isValid;\n  return { ...data.props, error };\n}\n","\nimport { useContext } from 'react';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormDolar } from 'src/components/dolar/FormDolar';\nimport { GrillaDolar } from 'src/components/dolar/GrillaDolar';\n\nimport { SocietyContext } from 'src/App';\n\nexport function Dolar({loggedUser}) {\n\n  const idSociety = useContext(SocietyContext);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dólar | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <FormDolar  loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaDolar  loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { dateToStringWithDayEqualToOne, isDateUsed } from 'src/utils/utils';\n\nexport function FormCac({ idSociety, loggedUser }) {\n  const { Prompt, setIsPromptOpen } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addCac } = useMutation(\n    newCac => postMethod(`cac/agregar/${idSociety.id}`, newCac),\n    {\n      onMutate: async newCac => {\n        newCac.creador = loggedUser.id;\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = await queryClient.getQueryData(['cac', idSociety]);\n        const newData = [...prevData, { ...newCac, id: new Date().getTime() }];\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          fecha: new Date(),\n          estimado: '',\n          definitivo: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          values.fecha = dateToStringWithDayEqualToOne(values.fecha);\n          if (await isDateUsed('cac', idSociety.id, values.fecha)) {\n            setIsPromptOpen(true);\n          } else addCac(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            <Field component={Picker} label=\"Fecha\" type=\"date\" name=\"fecha\" />\n            <Field\n              as={TextField}\n              label=\"Estimado\"\n              required\n              type=\"float\"\n              size=\"small\"\n              maxLength={4}\n              name=\"estimado\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'estimado')}\n            />\n            <Field\n              as={TextField}\n              label=\"Definitivo\"\n              required\n              type=\"float\"\n              size=\"small\"\n              name=\"definitivo\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'definitivo')}\n            />\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya hay un mes con información, por favor editar el mes desde la grilla.\"\n        ok\n      />\n    </>\n  );\n\n  function onlyNumbers(event, setFieldValue, typeOfData) {\n    event.preventDefault();\n    const { value } = event.target;\n    const regex = /^\\d{0,4}(\\.\\d{0,2})?$/;\n    if (regex.test(value.toString())) {\n      setFieldValue(typeOfData, value.toString());\n    }\n  }\n\n  function Picker({ field, form }) {\n    const { name, value } = field;\n    const { setFieldValue } = form;\n\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label=\"Fecha\"\n          inputFormat=\"dd/MM/yyyy\"\n          value={value}\n          onChange={value => setFieldValue(name, value)}\n          renderInput={params => <TextField required size=\"small\" {...params} />}\n        />\n      </LocalizationProvider>\n    );\n  }\n}\n","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'fecha',\n    headerName: 'Fecha',\n    width: 150,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n  },\n  {\n    field: 'estimado',\n    headerName: 'Estimado',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    preProcessEditCellProps: onlyNumbers,\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'definitivo',\n    headerName: 'Definitivo',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    preProcessEditCellProps: onlyNumbers,\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n       \n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaCac({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt();\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: cacInformation,\n    isLoading,\n    error,\n  } = useQuery(['cac', idSociety], () => getMethod(`CAC/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idCac => await deleteMethod(`cac/eliminar/${idSociety.id}`, { id: idCac }),\n    {\n      onMutate: async idCac => {\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = queryClient.getQueryData(['cac', idSociety]);\n        const newData = prevData.filter(cac => cac.id !== idCac);\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idCac, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`cac/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = queryClient.getQueryData(['cac', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(cac => cac.id !== id),\n          { ...prevData.find(cac => cac.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={cacInformation.map(cac => ({\n            id: cac.id,\n            fecha: cac.fecha,\n            estimado: cac.estimado,\n            definitivo: cac.definitivo,\n            deleteId: cac.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n}\n\nfunction onlyNumbers(data) {\n  \n  const regex = /^\\d{0,4}(\\.\\d{0,2})?$/;\n  const isValid = regex.test(data.props.value.toString());\n  const error = !isValid;\n  return { ...data.props, error };\n}\n","\n  \nimport { Box, Container } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormCac } from 'src/components/cac/FormCac';\nimport { GrillaCac } from 'src/components/cac/GrillaCac';\n\nexport function Cac({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>CAC | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <FormCac idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaCac idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { Hidden } from '@material-ui/core';\n\nexport function FormRubro({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addRubro } = useMutation(\n    newRubro => postMethod(`rubro/agregar/${idSociety.id}`, newRubro),\n    {\n      onMutate: async newRubro => {\n        newRubro.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['rubro', idSociety]);\n        const prevData = await queryClient.getQueryData(['rubro', idSociety]);\n        const newData = [...prevData, { ...newRubro, id: new Date().getTime()}];\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          rubro: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addRubro(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Rubro\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"rubro\"\n            />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El rubro no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'rubro',\n    headerName: 'Rubro',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaRubro({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const navigate = useNavigate();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: rubroInformation,\n    isLoading,\n    error,\n  } = useQuery(['rubro', idSociety], () => getMethod(`rubro/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idRubro => await deleteMethod(`rubro/eliminar/${idSociety.id}`, { id: idRubro }),\n    {\n      onMutate: async idRubro => {\n        await queryClient.cancelQueries(['rubro', idSociety]);\n        const prevData = queryClient.getQueryData(['rubro', idSociety]);\n        const newData = prevData.filter(rubro => rubro.id !== idRubro);\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idRubro, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`rubro/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['rubro', idSociety]);\n        const prevData = queryClient.getQueryData(['rubro', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(rubro => rubro.id !== id),\n          { ...prevData.find(rubro => rubro.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={rubroInformation.map(rubro => ({\n            id: rubro.id,\n            rubro: rubro.rubro,\n            deleteId: rubro.id,\n          }))}\n          onCellEditCommit={modifyData}\n          onRowDoubleClick={a => {\n          // console.log(a);\n           return IrASubrubro(a);\n         }}\n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n    function IrASubrubro(params) {\n      navigate(`./${params.row.id}/Subrubros-${params.row.rubro}`);\n    }\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormRubro } from 'src/components/rubro/FormRubro';\nimport { GrillaRubro } from 'src/components/rubro/GrillaRubro';\n\nexport function Rubro({ idSociety, loggedUser}) {\n  return (\n    <>\n      <Helmet>\n        <title>Rubro | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormRubro idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaRubro idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormSubRubro({ idSociety, idRubro, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addSubRubro } = useMutation(\n    newSubRubro => postMethod(`subrubro/agregar/${idSociety.id}/${idRubro}`, newSubRubro),\n    {\n      onMutate: async newSubRubro => {\n        newSubRubro.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['subrubro', idSociety]);\n        const prevData = await queryClient.getQueryData(['subrubro', idSociety]);\n        const newData = [...prevData, { ...newSubRubro, id: new Date().getTime() }];\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          subRubro: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addSubRubro(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"SubRubro\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"subRubro\"\n            />\n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El subrubro no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'subRubro',\n    headerName: 'SubRubro',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaSubRubro({ idSociety, idRubro }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: subrubroInformation,\n    isLoading,\n    error,\n  } = useQuery(['subrubro', idSociety], () => getMethod(`subrubro/listar/${idSociety.id}/${idRubro}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idSubRubro => await deleteMethod(`subrubro/eliminar/${idSociety.id}`, { id: idSubRubro }),\n    {\n      onMutate: async idSubRubro => {\n        await queryClient.cancelQueries(['subrubro', idSociety]);\n        const prevData = queryClient.getQueryData(['subrubro', idSociety]);\n        const newData = prevData.filter(subrubro => subrubro.id !== idSubRubro);\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idSubRubro, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`subrubro/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['subrubro', idSociety]);\n        const prevData = queryClient.getQueryData(['subrubro', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(subrubro => subrubro.id !== id),\n          { ...prevData.find(subrubro => subrubro.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={subrubroInformation.map(subrubro => ({\n            id: subrubro.id,\n            subRubro: subrubro.subRubro,\n            deleteId: subrubro.id,\n          }))}\n          onCellEditCommit={modifyData}\n        \n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n         \n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n   \n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormSubRubro } from 'src/components/rubro/FormSubRubro';\nimport { GrillaSubRubro } from 'src/components/rubro/GrillaSubRubro';\n\nexport function SubRubro({ idSociety, loggedUser}) {\n  const { idRubro } = useParams();\n  const rubro = parseInt(idRubro);\n  return (\n    <>\n      <Helmet>\n        <title>SubRubro | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormSubRubro idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaSubRubro idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormBanco({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addBanco } = useMutation(\n    newBanco => postMethod(`banco/agregar/${idSociety.id}`, newBanco),\n    {\n      onMutate: async newBanco => {\n        newBanco.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['banco', idSociety]);\n        const prevData = await queryClient.getQueryData(['banco', idSociety]);\n        const newData = [...prevData, { ...newBanco, id: new Date().getTime()}];\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          banco: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addBanco(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Banco\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"banco\"\n            />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n            \n\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El Banco no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'banco',\n    headerName: 'Banco',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1\n  },\n  {\n    field: 'descripcionLarga',\n    headerName: 'Descripcion',\n    width: 250,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  \n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaBanco({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const navigate = useNavigate();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: bancoInformation,\n    isLoading,\n    error,\n  } = useQuery(['banco', idSociety], () => getMethod(`banco/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idBanco => await deleteMethod(`banco/eliminar/${idSociety.id}`, { id: idBanco }),\n    {\n      onMutate: async idBanco => {\n        await queryClient.cancelQueries(['banco', idSociety]);\n        const prevData = queryClient.getQueryData(['banco', idSociety]);\n        const newData = prevData.filter(banco => banco.id !== idBanco);\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idBanco, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`banco/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['banco', idSociety]);\n        const prevData = queryClient.getQueryData(['banco', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(banco => banco.id !== id),\n          { ...prevData.find(banco => banco.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async banco =>    \n      navigate(`./${banco.id}/Cuentas de Banco-${banco.banco}`)\n      //navigate(`./${params.row.id}/Cuentas de Banco-${params.row.banco}`);\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={bancoInformation.map(banco => ({\n            id: banco.id,\n            banco: banco.banco,\n            descripcionLarga: banco.descripcionLarga,\n            deleteId: banco.id,\n            onIrDetalle: () => irDetalle(banco),  \n          }))}\n          onCellEditCommit={modifyData}\n          \n          /* onRowDoubleClick={a => {return IrACuentaBanco(a);}}*/\n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n           <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            </Typography>\n            <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                 Para visualizar los cambios en otras pantallas del sistema es necesario salir y volver a loguearse, gracias.\n            </Typography>\n      </div>\n    );\n    /*\n    function IrACuentaBanco(params) {\n      navigate(`./${params.row.id}/Cuentas de Banco-${params.row.banco}`);\n    }*/\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const banco = params.row.banco;\n  return <Button onClick={sendRow} >{banco}  </Button>;\n} \n\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormBanco } from 'src/components/banco/FormBanco';\nimport { GrillaBanco } from 'src/components/banco/GrillaBanco';\n\nexport function Banco({ idSociety, loggedUser}) {\n  return (\n    <>\n      <Helmet>\n        <title>Banco | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormBanco idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaBanco idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\nexport function FormCuentaBanco({ idSociety, loggedUser }) {\n\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  const { idBanco } = useParams();\n\n  const { mutate: addCuentaBanco } = useMutation(\n    newCuentaBanco => postMethod(`cuentabanco/agregar/${idSociety.id}/${idBanco}`, newCuentaBanco),\n    {\n      onMutate: async newCuentaBanco => {\n        newCuentaBanco.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['cuentabanco', idSociety]);\n        const prevData = await queryClient.getQueryData(['cuentabanco', idSociety]);\n        const newData = [...prevData, { ...newCuentaBanco, id: new Date().getTime() }];\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          cuentaBanco: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addCuentaBanco(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Cuenta\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"cuentaBanco\"\n            />\n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El cuentabanco no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { Typography } from '@mui/material';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'cuentaBanco',\n    headerName: 'Cuenta',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'descripcionLarga',\n    headerName: 'Descripcion',\n    width: 250,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaCuentaBanco({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  const { idBanco } = useParams();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: cuentaBancoInformation,\n    isLoading,\n    error,\n  } = useQuery(['cuentabanco', idSociety], () => getMethod(`cuentabanco/listar/${idSociety.id}/${idBanco}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idCuentaBanco => await deleteMethod(`cuentabanco/eliminar/${idSociety.id}`, { id: idCuentaBanco }),\n    {\n      onMutate: async idCuentaBanco => {\n        await queryClient.cancelQueries(['cuentabanco', idSociety]);\n        const prevData = queryClient.getQueryData(['cuentabanco', idSociety]);\n        const newData = prevData.filter(cuentabanco => cuentabanco.id !== idCuentaBanco);\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idCuentaBanco, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`cuentabanco/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['cuentabanco', idSociety]);\n        const prevData = queryClient.getQueryData(['cuentabanco', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(cuentabanco => cuentabanco.id !== id),\n          { ...prevData.find(cuentabanco => cuentabanco.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={cuentaBancoInformation.map(cuentabanco => ({\n            id: cuentabanco.id,\n            cuentaBanco: cuentabanco.cuentaBanco,\n            descripcionLarga: cuentabanco.descripcionLarga,\n            deleteId: cuentabanco.id,\n          }))}\n          onCellEditCommit={modifyData}\n        \n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n         \n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </Typography>\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n            Para visualizar los cambios en otras pantallas del sistema es necesario salir y volver a loguearse, gracias.\n        </Typography>\n      </div>\n    );\n   \n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormCuentaBanco } from 'src/components/banco/FormCuentaBanco';\nimport { GrillaCuentaBanco } from 'src/components/banco/GrillaCuentaBanco';\n\nexport function CuentaBanco({ idSociety, loggedUser}) {\n  const { idRubro } = useParams();\n  const rubro = parseInt(idRubro);\n  return (\n    <>\n      <Helmet>\n        <title>CuentaBanco | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormCuentaBanco idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaCuentaBanco idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormUsuario({ idSociety, loggedUser}) {\n  //const { setIsPromptOpen, Prompt } = usePrompt();\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addUsuario } = useMutation(\n    newUsuario => postMethod(`usuario/agregar/${idSociety.id}`, newUsuario),\n    {\n      onMutate: async newUsuario => {\n        newUsuario.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['usuario', idSociety]);\n        const prevData = await queryClient.getQueryData(['usuario', idSociety]);\n        const newData = [...prevData, { ...newUsuario, id: new Date().getTime() }];\n        queryClient.setQueryData(['usuario', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['usuario', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          user: '',\n          mail: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n\n          addUsuario(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        \n        {({ isSubmitting }) => (\n          <Form>\n            <Field as={TextField} required size=\"small\" label='Usuario' type='string' maxLength={30} name='user' />\n            <Field as={TextField} required size=\"small\" label='Mail' type='mail' name='mail' />  \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'user',\n    headerName: 'Usuario',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 220,\n    headerAlign: 'center',\n  },\n  {\n    field: 'pass',\n    headerName: 'Clave',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    renderCell: Passformat,\n  },\n  {\n    field: 'rolId', // campo en grilla\n    headerName: 'Rol',\n    width: 150,\n    editable: true,\n    renderCell: ({ value }) => value.rol_descripcion, // a visualizar\n    renderEditCell: props => <ComboBox roles={roles} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nconst roles = [  \n  { id: 1, rol_descripcion: 'administrativo' },\n  { id: 2, rol_descripcion: 'obra' },\n  { id: 3, rol_descripcion: 'manager' },\n];\n\nexport function GrillaUsuario({ idSociety }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: usuarioInformation,\n    isLoading,\n    error,\n  } = useQuery(['usuario', idSociety], () => getMethod(`usuario/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idUsuario => await deleteMethod(`usuario/eliminar/${idSociety.id}`, { id: idUsuario }),\n    {\n      onMutate: async idUsuario => {\n        await queryClient.cancelQueries(['usuario', idSociety]);\n        const prevData = queryClient.getQueryData(['usuario', idSociety]);\n        const newData = prevData.filter(usuario => usuario.id !== idUsuario);\n        queryClient.setQueryData(['usuario', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idUsuario, context) => queryClient.setQueryData(['usuario', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n      async ({ field, id, value }) => \n          await postMethod(`usuario/modificar/${idSociety.id}`, {\n            id,\n            [field]: value,\n          }),\n          \n        {\n          onMutate: async ({ field, id, value }) => {\n            await queryClient.cancelQueries(['usuario', idSociety]);\n            const prevData = queryClient.getQueryData(['usuario', idSociety]);\n            // console.log('prevData', prevData);\n            const newData = [\n              ...prevData.filter(usuario => usuario.id !== id),\n              { ...prevData.find(usuario => usuario.id === id), [field]: value },\n            ];\n            // console.log('newData', newData);\n            queryClient.setQueryData(['usuario', idSociety], newData);\n            return prevData;\n          },\n          onError: (err, id, context) => queryClient.setQueryData(['usuario', idSociety], context),\n          onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n        }     \n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{height: '100%', width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={usuarioInformation.map(usuario => ({\n            id: usuario.id,\n            user: usuario.user,\n            mail: usuario.mail,\n            pass: usuario.pass,\n            rolId: { // es lo que manda por post a la api\n              id: usuario['rol.id'],\n              rol_descripcion: roles?.find(rol => rol.id === usuario['rol.id'])?.rol_descripcion,\n            }, \n            \n            deleteId: usuario.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          autoHeight={true}\n          disableSelectionOnClick\n          density={'comfortable'}\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction ComboBox({ roles, props }) {\n  const { id, api, field } = props;\n\n  roles = [\n    ...roles,\n    {\n      rol_descripcion: '',\n    },\n  ];\n  const [selectedRol, setSelectedRol] = useState({\n    rol_descripcion: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRol}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue);\n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}      \n      id=\"combo-box-demo\"\n      options={roles}\n      isOptionEqualToValue={(op, val) => op.rol_descripcion === val.rol_descripcion}\n      getOptionLabel={option => option.rol_descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rol\" />}\n    />\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction Passformat(params) {\n  //const sendRow = params.row.onIrDetalle;  \n  //const empresa = params.row.empresa;\n  return '***********';\n} \n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormUsuario } from 'src/components/usuarios/FormUsuario';\nimport { GrillaUsuario } from 'src/components/usuarios/GrillaUsuario';\n\nexport function Usuarios({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>Usuarios | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormUsuario idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaUsuario idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { Hidden } from '@material-ui/core';\n                \nexport function FormProveedor({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addProveedor } = useMutation(\n    newProveedor => postMethod(`proveedor/agregar/${idSociety.id}`, newProveedor),\n    {\n      onMutate: async newProveedor => {\n        newProveedor.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['proveedor', idSociety]);\n        const prevData = await queryClient.getQueryData(['proveedor', idSociety]);\n        const newData = [...prevData, { ...newProveedor, id: new Date().getTime()}];\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          razonSocial: '',\n          CUIT: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          // check cuit\n          addProveedor(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n            as={TextField}\n            label='CUIT'\n            type='string'\n            required\n            size=\"small\"\n            maxLength={11}\n            name='CUIT'\n            onChange={event => onlyNumbers(event, setFieldValue, 'CUIT')}\n          />\n          \n          <Field as={TextField} required size=\"small\" label='Razón Social' type='string' name='razonSocial' />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El CUIT no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}\n/* USAR !!!\nasync function checkCuit(idSociety, cuit) {\n  let url = `proveedor/mostrar/${idSociety}/${cuit}`;\n  ///return Boolean(await getMethod(url));\n  return false;\n}*/\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarCUIT } from 'src/utils/utils';\n\nconst columns = (rubros, subRubros, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'razonSocial',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 130,\n    // editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => mostrarCUIT(value),\n  },\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 140,\n    editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CBU',\n    headerName: 'CBU',\n    width: 200,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'banco',\n    headerName: 'Banco',\n    width: 120,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'nroCuenta',\n    headerName: '# Cuenta',\n    width: 140,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'rubroID',\n    headerName: 'Rubro',\n    width: 140,\n    editable: true,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBox rubros={rubros} props={props} />,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'subrubroID',\n    headerName: 'Sub Rubro',\n    width: 140,\n    editable: true,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBoxSub subRubros={subRubros} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'enviar_OP_auto',\n    headerName: 'Enviar',\n    type: 'boolean',\n    width: 50,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaProveedor({ idSociety }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: proveedorInformation,\n    isLoading,\n    error,\n  } = useQuery(['proveedor', idSociety], () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { data: rubros } = useQuery(['rubros', idSociety], () =>\n    getMethod(`rubro/listar/${idSociety.id}`)\n  );\n\n\n  const { data: subRubros } = useQuery(['subrubros', idSociety], () =>\n    getMethod(`subrubro/listar/${idSociety.id}/0`)\n  );\n\n  const { mutate: eliminate } = useMutation(\n    async idProveedor => await deleteMethod(`proveedor/eliminar/${idSociety.id}`, { id: idProveedor }),\n    {\n      onMutate: async idProveedor => {\n        await queryClient.cancelQueries(['proveedor', idSociety]);\n        const prevData = queryClient.getQueryData(['proveedor', idSociety]);\n        const newData = prevData.filter(proveedor => proveedor.id !== idProveedor);\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idProveedor, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`proveedor/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['proveedor', idSociety]);\n        const prevData = queryClient.getQueryData(['proveedor', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(proveedor => proveedor.id !== id),\n          { ...prevData.find(proveedor => proveedor.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={proveedorInformation.map(proveedor => ({\n            id: proveedor.id,\n            rubroID: {\n              id: proveedor.rubroId,\n              nombre: rubros?.find(rubro => rubro.id === proveedor.rubroId)?.rubro,\n            },\n            subrubroID: {\n              id: proveedor.subrubroId,\n              nombre: subRubros?.find(subRubro => subRubro.id === proveedor.subrubroId)?.subRubro,\n            },          \n            razonSocial: proveedor.razonSocial,\n            CUIT: proveedor.CUIT,\n            mail: proveedor.mail,\n            telefono: proveedor.telefono,\n            CBU: proveedor.CBU,\n            banco: proveedor.banco,\n            nroCuenta: proveedor.nroCuenta,\n            enviar_OP_auto: proveedor.enviar_OP_auto,\n            /*enviar_OP_auto: parseInt(proveedor.enviar_OP_auto===0)? false:true,*/\n            deleteId: proveedor.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(rubros, subRubros, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction ComboBox({ rubros, props }) {\n  const { id, api, field } = props;\n\n  rubros = [\n    ...rubros,\n    {\n      rubro: '',\n    },\n  ];\n  const [selectedRubro, setSelectedRubro] = useState({\n    rubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedRubro(newValue);\n     \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      // disablePortal\n      id=\"combo-box-demo\"\n      options={rubros}\n      isOptionEqualToValue={(op, val) => op.rubro === val.rubro}\n      getOptionLabel={option => option.rubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxSub({ subRubros, props }, params) {\n  const { id, api, field } = props;\n  // console.log('props que recibe el combo', props?.row?.rubroID.id);\n  subRubros = [\n    \n    ...subRubros.filter(subR => subR.rubroId === parseInt(props?.row?.rubroID.id)),\n    {\n      subRubro: '',\n    },\n  ];\n\n  const [selectedsubRubro, setSelectedsubRubro] = useState({\n    subRubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedsubRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedsubRubro(newValue);\n      \n        \n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }}\n      // disablePortal\n      id=\"combo-box-demo\"\n      options={subRubros}\n      isOptionEqualToValue={(op, val) => op.subRubro === val.subRubro}\n      getOptionLabel={option => option.subRubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"subRubro\" />}\n    />\n  );\n}\n\n","import { Container, Box, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormProveedor } from 'src/components/proveedores/FormProveedor';\nimport { GrillaProveedor } from 'src/components/proveedores/GrillaProveedor';\n\nexport function Proveedores({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>Proveedores | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n            <Box sx={{ pt: 3 }}>\n              <FormProveedor idSociety={idSociety} loggedUser={loggedUser} />\n            </Box>\n          </Hidden> \n          <Box sx={{ pt: 3 }}>\n            <GrillaProveedor idSociety={idSociety} loggedUser={loggedUser}/>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Button } from '@mui/material';\n\n\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n/// import FormControlLabel from '@mui/material/FormControlLabel';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularPersona({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(newData => postMethod(`persona/agregar/${idSociety}`, newData), {\n    onSuccess: () => {\n      queryClient.refetchQueries(['persona', idSociety]);\n    },\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        nombre: '',\n        mail: null,\n        telefono: null,\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        let bool = await checkName(idSociety, values.nombre);\n        !bool\n          ? mutate(values) // console.log('ya lo tenés'); //cambiar por un pop up\n          : resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field as={TextField} label=\"Nombre\" type=\"string\" maxLength={40} name=\"nombre\" />\n          <Field as={TextField} label=\"Email\" type=\"string\" maxLength={100} name=\"mail\" />\n          <Field as={TextField} label=\"Teléfono\" type=\"string\" maxLength={11} name=\"telefono\" />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nasync function checkName(idSociety, nombre) {\n  let n = \"\" + nombre ;\n  // controla blanco y espacios\n  if (n.trim() === '') {\n    return true;\n  }\n  // controla si ya existe el nombre\n  let url = `persona/mostrar/${idSociety}/${nombre}`;\n  return Boolean(await getMethod(url));\n}\n","import React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Button, Box } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  // { field: 'id', headerName: 'ID', width: 100 , headerAlign: 'center',},\n  {\n    field: 'nombre',\n    headerName: 'Nombre',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    /*\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },*/\n  },\n\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    /*\n    valueFormatter: ({ value }) => {\n      value = value.split('');\n      value.splice(2, 0, '-');\n      value.splice(5, 0, '.');\n      value.splice(9, 0, '.');\n      value.splice(13, 0, '-');\n      return value.join('');\n    },*/\n  },\n\n  {\n    field: 'delete',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaPersona({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    async (id) => {\n      await deleteMethod(`persona/eliminar/${idSociety}`, id);\n    },\n    {\n      onSuccess: async () => await queryClient.refetchQueries(['persona', idSociety]),\n    }\n  );\n\n  const { data, isLoading, error } = useQuery(['persona', idSociety], () =>\n    getMethod(`persona/listar/${idSociety}`)\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    let newData = {\n      id: e.id,\n      [e.field]: e.props.value,\n    };\n    postMethod(`persona/modificar/${idSociety}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={data.map((el) => ({\n          id: el.id,\n          nombre: el.nombre,\n          mail: el.mail,\n          telefono: el.telefono,\n          CUIT: el.CUIT,\n          onDelete: () => {\n            mutate(el.id);\n          },\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        scrollbarSize\n        onEditCellChange={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@mui/material';\nimport { ManipularPersona } from 'src/components/persona/ManipularPersona';\nimport { GrillaPersona } from 'src/components/persona/GrillaPersona';\n\nexport function Persona({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Fiduciante | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <ManipularPersona idSociety={idSociety} />\n          </Box>\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaPersona idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Button } from '@mui/material';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularEmpresa({ idSociety }) {\n  const queryClient = useQueryClient();\n  const { mutate } = useMutation(newData => postMethod(`empresa/agregar/${idSociety}`, newData), {\n    onSuccess: () => queryClient.refetchQueries(['empresas', idSociety]),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        razonSocial: '',\n        mail: '',\n        telefono: '',\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        !(await checkCuit(idSociety, values.CUIT))\n          ? mutate(values) // console.log('ya lo tenés'); //cambiar por un pop up\n          : resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field as={TextField} label=\"Razón Social\" type=\"string\" name=\"razonSocial\" />\n          <Field as={TextField} label=\"Email\" type=\"string\" name=\"mail\" />\n\n          <Field\n            as={TextField}\n            label=\"Teléfono\"\n            type=\"string\"\n            maxLength={11}\n            name=\"telefono\"\n            onChange={event => onlyNumbers(event, setFieldValue, 'telefono')}\n          />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nasync function checkCuit(idSociety, cuit) {\n  let url = `empresa/mostrar/${idSociety}/${cuit}`;\n  return Boolean(await getMethod(url));\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n","import React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Button, Box } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  // { field: 'id', headerName: 'ID', width: 100 , headerAlign: 'center',},\n  {\n    field: 'razonSocial',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 150,\n    // editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      value = value.split('');\n      value.splice(2, 0, '-');\n      value.splice(5, 0, '.');\n      value.splice(9, 0, '.');\n      value.splice(13, 0, '-');\n      return value.join('');\n    },\n  },\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaEmpresa({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    async (id) => {\n      await deleteMethod(`empresa/eliminar/${idSociety}`, id);\n    },\n    {\n      onSuccess: async () => await queryClient.refetchQueries(['empresas', idSociety]),\n    }\n  );\n\n  const { data, isLoading, error } = useQuery(['empresas', idSociety], () =>\n    getMethod(`empresa/listar/${idSociety}`)\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    let newData = {\n      id: e.id,\n      [e.field]: e.props.value,\n    };\n    postMethod(`empresa/modificar/${idSociety}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={data.map((el) => ({\n          id: el.id,\n          razonSocial: el.razonSocial,\n          CUIT: el.CUIT,\n          mail: el.mail,\n          telefono: el.telefono,\n          onDelete: () => {\n            mutate(el.id);\n          },\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        scrollbarSize\n        onEditCellChange={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@mui/material';\n\nimport { ManipularEmpresa } from 'src/components/empresa/ManipularEmpresa';\nimport { GrillaEmpresa } from 'src/components/empresa/GrillaEmpresa';\n\nexport function Empresa({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Empresas | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <ManipularEmpresa idSociety={idSociety} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaEmpresa idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularFideicomiso({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    newData => postMethod(`fideicomiso/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: () => {\n        queryClient.refetchQueries(['fideicomiso', idSociety]);\n      },\n    }\n  );\n\n  return (\n    <Formik\n      initialValues={{\n        nombre: '',\n        fechaInicio: null,\n        fechaFin: null,\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        let bool = await checkIfNameExists(idSociety.id, values.nombre);\n        !bool && mutate(values);\n\n        resetForm();\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field\n            as={TextField}\n            required\n            label='Nombre Fideicomiso'\n            size=\"small\"\n            type='string'\n            maxLength={40}\n            name='nombre'\n          />\n          <Field name='fechaInicio' >\n            {({ field: { value, name }, form: { setFieldValue } }) => (\n              <Picker label='Inicio' value={value} setFieldValue={setFieldValue} name={name} />\n            )}\n          </Field>\n          <Field name='fechaFin'>\n            {({ field: { value, name }, form: { setFieldValue } }) => (\n              <Picker\n                label='Finalizacion'\n                value={value}\n                setFieldValue={setFieldValue}\n                name={name}\n              />\n            )}\n          </Field>\n\n          <Button type='submit' disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n\n  function Picker({ value, name, setFieldValue, label }) {\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label={label}\n          value={value}\n          inputFormat='dd/MM/yyyy'\n          renderInput={params => <TextField  size=\"small\" {...params} />}\n          onChange={value => setFieldValue(name, value)}\n        />\n      </LocalizationProvider>\n    );\n  }\n\n  async function checkIfNameExists(idSociety, nombre) {\n    return Boolean(await getMethod(`fideicomiso/mostrar/${idSociety}/${nombre}`));\n  }\n}\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\n// import { Delete as DeleteIcon } from '@mui/icons-material';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { mostrarFecha } from 'src/utils/utils';\n// import { Uploader } from 'src/components/auxiliares/Uploader';\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n//const columns = (color, setColor, id,  setNewLogoFlag, setIsPromptOpen, setRowIdToDelete) => [\nconst columns = (color, setColor, id,  setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'nombre',\n    headerName: 'Nombre',\n    width: 200,\n    headerAlign: 'center',\n    align: 'left',\n  },\n  {\n    field: 'fechaInicio',\n    headerName: 'Inicio',\n    editable: true,\n    width: 170,\n    type: 'date',\n    headerAlign: 'center',      \n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n    \n  },\n  {\n    field: 'fechaFin',\n    headerName: 'Finalización',\n    editable: true,\n    width: 170,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n  },\n  /*\n  {\n    field: 'cloud',\n    headerName: 'Cloud',\n    editable: true,\n    width: 200,\n    headerAlign: 'center',\n    align: 'left',\n  },*/\n\n  {\n    field: 'logo',\n    headerName: 'Logo',\n    width: 150,\n    renderCell: passedData =>\n      passedData.row.logo ? (\n        <img\n          style={{ display: 'block', margin: 'auto', width: '30%' }}\n          src={`${apiServerUrl}sociedades/${id}/${passedData.row.logo}`}\n          alt=\"logo\"\n        />\n      ): (\"\"), \n  },\n\n  {\n    field: 'colorElegido',\n    headerName: 'Color',\n    width: 150,\n    editable: false,\n    renderCell: ({ row: { colorElegido } }) => (\n      <div style={{ width: '100%', height: '100%', background: colorElegido }}></div>\n    ),\n    renderEditCell: ({ row: { colorElegido } }) => (\n      <ColorPicker\n        originalColor={colors.filter(color => color.css === colorElegido)[0]}\n        color={color}\n        setColor={setColor}\n        colorOptions={colors}\n      />\n    ),\n  },\n\n];\n\nconst colors = [\n  { label: 'red', css: 'red' },\n  { label: 'DarkGreen', css: 'DarkGreen' },\n  { label: 'MidnightBlue', css: 'MidnightBlue' },\n  { label: 'black', css: 'black' },\n  { label: 'Salmon', css: 'LightSalmon' },\n  { label: 'Khaki', css: 'Khaki' },\n  { label: 'Bisque', css: 'Bisque' },\n  { label: 'Plum', css: 'Plum' },\n  { label: 'Orchid', css: 'Orchid' },\n  { label: 'Chocolate', css: 'Chocolate' },\n  { label: 'LightSteelBlue', css: 'LightSteelBlue' },  \n  { label: 'orange', css: 'orange' },\n  { label: 'green', css: 'green' }\n \n];\n\nexport function GrillaFideicomiso({ idSociety }) {\n\n  const [color, setColor] = useState(null);\n  //const [fechaInicio, setFechaInicio] = useState(null);\n  // const [newLogoFlag, setNewLogoFlag] = useState(false);\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: fideicomisoInformation,\n    isLoading,\n    error,\n  } = useQuery(['fideicomiso', idSociety], () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idFideicomiso => await deleteMethod(`fideicomiso/eliminar/${idSociety.id}`, { id: idFideicomiso }),\n    {\n      onMutate: async idFideicomiso => {\n        await queryClient.cancelQueries(['fideicomiso', idSociety]);\n        const prevData = queryClient.getQueryData(['fideicomiso', idSociety]);\n        const newData = prevData.filter(fideicomiso => fideicomiso.id !== idFideicomiso);\n        queryClient.setQueryData(['fideicomiso', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idFideicomiso, context) => queryClient.setQueryData(['fideicomiso', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['fideicomiso', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`fideicomiso/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['fideicomiso', idSociety]);\n        const prevData = queryClient.getQueryData(['fideicomiso', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(fideicomiso => fideicomiso.id !== id),\n          { ...prevData.find(fideicomiso => fideicomiso.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['fideicomiso', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['fideicomiso', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['fideicomiso', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={fideicomisoInformation.map(fideicomiso => ({\n            id: fideicomiso.id,\n            nombre: fideicomiso.nombre,\n            fechaInicio: fideicomiso.fechaInicio,\n            fechaFin: fideicomiso.fechaFin,\n            colorElegido: fideicomiso.color,\n            logo: fideicomiso.logo,\n            cloud: fideicomiso.cloud,\n            deleteId: fideicomiso.id,\n          }))}\n          onCellEditCommit={modifyData}\n          //columns={columns(color, setColor, idSociety?.id, setNewLogoFlag, setIsPromptOpen, setRowIdToDelete)}\n          columns={columns(color, setColor, idSociety?.id, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\n\nfunction ColorPicker({ color, setColor, colorOptions, originalColor }) {\n  useEffect(\n    () =>\n      setColor(previousStateColor =>\n        originalColor?.css !== previousStateColor?.css ? originalColor : previousStateColor\n      ),\n    [originalColor, setColor]\n  );\n  return (\n    <Autocomplete\n      value={color}\n      onChange={(event, newValue) => {\n        setColor(newValue);\n      }}\n      options={colorOptions}\n      sx={{ width: 300 }}\n      isOptionEqualToValue={(option, value) => option.label === value.label}\n      renderInput={params => <TextField style={{ background: color?.css }} {...params} />}\n      renderOption={(props, option, c) => {\n        // console.log(props, option, c);\n        return (\n          <div {...props} style={{ background: option?.css }}>\n            {option.label}\n          </div>\n        );\n      }}\n    />\n  );\n}\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { ManipularFideicomiso } from 'src/components/fideicomiso/ManipularFideicomiso';\nimport { GrillaFideicomiso } from 'src/components/fideicomiso/GrillaFideicomiso';\n\nexport function Fideicomiso({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Fideicomisos | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <ManipularFideicomiso idSociety={idSociety} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaFideicomiso idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  TextField,\n  Autocomplete,\n  createFilterOptions,\n  Dialog,\n  DialogContent,\n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useMutation, useQuery } from 'react-query';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nconst filter = createFilterOptions();\n\nexport function DatosPrincipalesFideicomiso({ selectedFideicomisoData, idSociety }) {\n  \n  const [managerId, setManagerId] = useState();\n  useEffect(() => setManagerId(selectedFideicomisoData?.personaId), [selectedFideicomisoData]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { data: contactInfo } = useQuery(['persona', managerId], () =>\n    getMethod(`persona/mostrar/${idSociety.id}/${managerId}`)\n  );\n\n  const { data: directionInfo } = useQuery(\n    ['localización', selectedFideicomisoData?.localizacionId],\n    () =>\n      getMethod(`localizacion/mostrar/${idSociety.id}/${selectedFideicomisoData?.localizacionId}`)\n  );\n\n  const { data: peopleInfo } = useQuery(['personas'], () =>\n    getMethod(`persona/listar/${idSociety.id}`)\n  );\n\n  const { mutate: setManagerInFideicomiso } = useMutation(newData =>\n    postMethod(`fideicomiso/modificar/${idSociety.id}`, newData)\n  );\n\n  const { mutate: addNewPerson } = useMutation(\n    newData => postMethod(`persona/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: data => {\n        setManagerId(data.id);\n        setManagerInFideicomiso({\n          id: selectedFideicomisoData.id,\n          personaId: data.id,\n        });\n      },\n    }\n  );\n  // console.log('contactInfo:', contactInfo);\n\n  const rows = [\n    {\n      id: 1,\n      contacto: contactInfo?.nombre,\n      fechaInicio: selectedFideicomisoData?.fechaInicio,\n      fechaFin: selectedFideicomisoData?.fechaFin,\n      direccion: directionInfo?.direccion,\n    },\n  ];\n\n  const columns = [\n    {\n      field: 'contacto',\n      headerName: 'Contacto',\n      width: 350,\n      headerAlign: 'center',\n      align: 'center',\n    },\n    {\n      field: 'fechaInicio',\n      headerName: 'Inicio',\n      width: 160,\n      headerAlign: 'center',\n      align: 'center',\n      type: 'date',\n      nameFormatter: ({ name }) =>\n        new Date(name).toLocaleDateString('es-AR', {\n          year: 'numeric',\n          month: 'short',\n          timeZone: 'UTC',\n        }),\n      editable: true,\n    },\n    {\n      field: 'fechaFin',\n      headerName: 'Fin',\n      width: 100,\n      headerAlign: 'center',\n      align: 'center',\n      type: 'date',\n      nameFormatter: ({ name }) =>\n        new Date(name).toLocaleDateString('es-AR', {\n          year: 'numeric',\n          month: 'short',\n          timeZone: 'UTC',\n        }),\n      editable: true,\n    },\n    {\n      field: 'direccion',\n      headerName: 'Dirección',\n      width: 200,\n      editable: false,\n      headerAlign: 'center',\n      align: 'center',\n    },\n  ];\n  return (\n    <>\n      <AlertDialog isDialogOpen={isDialogOpen} setIsDialogOpen={setIsDialogOpen} />\n      <Box width={'auto'}>\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h3\">\n          {selectedFideicomisoData?.nombre}\n        </Typography>\n        {selectedFideicomisoData && (\n          <DataGrid\n            columns={columns}\n            rows={rows}\n            rowHeight={75}\n            headerHeight={35}\n            hideFooter\n            autoHeight={'false'}\n            pageSize={1}\n            onCellDoubleClick={e => {\n              if (e.field === 'contacto') {\n                setIsDialogOpen(true);\n                // console.log('isDialogOpen:', isDialogOpen);\n              }\n            }}\n          />\n        )}\n      </Box>\n    </>\n  );\n\n  function AlertDialog({ isDialogOpen, setIsDialogOpen }) {\n    return (\n      <>\n        <Dialog\n          open={isDialogOpen}\n          onClose={() => setIsDialogOpen(false)}\n          fullWidth\n          style={{ transform: 'translate(0, -200px)' }}\n        >\n          <DialogContent>\n            <Select peopleInfo={peopleInfo} closeDialog={() => setIsDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </>\n    );\n  }\n\n  function Select({ peopleInfo, closeDialog }) {\n    return (\n      <Autocomplete\n        value={contactInfo?.nombre}\n        onChange={(event, newName) => {\n          if (typeof newName === 'string') {\n            //agrego desde el teclado sin ir a agregar\n            addNewPerson({ nombre: newName });\n            closeDialog();\n          } else if (newName && newName.inputValue) {\n            //agrego nuevo yendo a \"agregar\" en el dd\n            addNewPerson({ nombre: newName.inputValue });\n            closeDialog();\n          } else {\n            //elijo opción del dd\n            if (newName?.id !== managerId) {\n              setManagerId(newName.id);\n              setManagerInFideicomiso({\n                id: selectedFideicomisoData.id,\n                personaId: newName.id,\n              });\n              closeDialog();\n            }\n          }\n        }}\n        filterOptions={(options, params) => {\n          // console.log('options:', options);\n          const filtered = filter(options, params);\n          const { inputValue } = params;\n          const isExisting = options.some(option => inputValue === option.nombre);\n          if (inputValue !== '' && !isExisting) {\n            filtered.push({\n              inputValue,\n              nombre: `agregar ${inputValue}`,\n            });\n          }\n\n          return filtered;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        options={peopleInfo}\n        getOptionLabel={option => {\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.nombre;\n        }}\n        renderOption={(props, option) => <li {...props}>{option.nombre}</li>}\n        freeSolo\n        renderInput={params => <TextField {...params} />}\n      />\n    );\n  }\n}\n","import { useState } from 'react';\nimport { TextField, Button, Autocomplete } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularDetalleFideicomiso({ idSociety, selectedFideicomisoData }) {\n  // console.log('selectedFideicomisoData', selectedFideicomisoData);\n  const { data: typesOfProducts } = useQuery(\n    ['typesOfProducts'],\n    () => getMethod(`configuracion/listar/${idSociety.id}/tipo_producto`),\n    {\n      initialData: [\n        {\n          id: 7,\n          descripcion: 'UF',\n          codigo: 1,\n          descripcionLarga: 'Unidad funcional',\n        },\n        {\n          id: 8,\n          descripcion: 'Cod. Nom.',\n          codigo: 2,\n          descripcionLarga: 'Código de nomenclatura',\n        },\n        {\n          id: 9,\n          descripcion: 'Cochera',\n          codigo: 3,\n          descripcionLarga: 'Cochera Auto',\n        },\n        {\n          id: 10,\n          descripcion: 'Cochera Moto',\n          codigo: 4,\n          descripcionLarga: 'Cochera Moto',\n        },\n        {\n          id: 11,\n          descripcion: 'Baulera',\n          codigo: 5,\n          descripcionLarga: 'Baulera',\n        },\n        {\n          id: 12,\n          descripcion: 'Local',\n          codigo: 6,\n          descripcionLarga: 'Local comercial',\n        },\n        {\n          id: 13,\n          descripcion: 'Lote',\n          codigo: 7,\n          descripcionLarga: 'Lote, terreno',\n        },\n        {\n          id: 14,\n          descripcion: 'Casa',\n          codigo: 8,\n          descripcionLarga: 'Casa',\n        },\n        {\n          id: 15,\n          descripcion: 'Bungalo',\n          codigo: 9,\n          descripcionLarga: 'Bungalo',\n        },\n      ],\n    }\n  );\n  // console.log('typesOfProducts:', typesOfProducts);\n\n  const queryClient = useQueryClient();\n  const { mutate: addProduct } = useMutation(\n    newData => postMethod(`producto/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['productos', idSociety, selectedFideicomisoData]),\n    }\n  );\n\n  const [typeInForm, setTypeInForm] = useState(null);\n\n  return (\n    <Formik\n      initialValues={{\n        code: '',\n        type: '',\n        description: '',\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        // console.log('values:', values);\n        addProduct({\n          fideicomisoId: selectedFideicomisoData.id,\n          codigo: values.code,\n          descripcion: values.description,\n          tipo: values.type.codigo,\n        });\n        resetForm();\n        setTypeInForm(null);\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field\n            as={TextField}\n            label=\"Código\"\n            type=\"string\"\n            maxLength={40}\n            size={'small'}\n            name=\"code\"\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label=\"Tipo\"\n            //disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setTypeInForm(newValue);\n              setFieldValue('type', newValue);\n            }}\n            value={typeInForm}\n            getOptionLabel={option => option.descripcion}\n            isOptionEqualToValue={(option, value) => option.descripcion === value.descripcion}\n            options={typesOfProducts}\n            renderInput={params => <TextField {...params} label=\"Tipo\" />}\n          />\n\n          <Field\n            as={TextField}\n            size={'small'}\n            label=\"Descripcion\"\n            type=\"string\"\n            maxLength={100}\n            name=\"description\"\n          />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n          \n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Box, Button } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  {\n    field: 'codigo',\n    headerName: 'Código',\n    width: 140,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'metros',\n    headerName: 'Metros',\n    type: 'number',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n  },\n\n  {\n    field: 'precioULT',\n    type: 'number',\n    headerName: 'Precio',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: '',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaDetalleFideicomiso({ idSociety, selectedFideicomisoData }) {\n  // console.log('idSociety:', idSociety);\n  // console.log('selectedFideicomisoData:', selectedFideicomisoData);\n  const {\n    data: products,\n    isLoading,\n    error,\n  } = useQuery(['productos', idSociety, selectedFideicomisoData], () =>\n    getMethod(`producto/listar/${idSociety?.id}/${selectedFideicomisoData?.id}`)\n  );\n\n  const queryClient = useQueryClient();\n\n  const { mutate: deleteProduct } = useMutation(\n    async id =>\n      await deleteMethod(`producto/eliminar/${idSociety?.id}`, {\n        fideicomisoId: selectedFideicomisoData?.id,\n        id: id,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['productos', idSociety, selectedFideicomisoData]),\n    }\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    // console.log('e:', e);\n    let newData = {\n      id: e.id,\n      idFideicomiso: selectedFideicomisoData?.id,\n      [e.field]: e.value,\n    };\n    // console.log('newData:', newData);\n    postMethod(`producto/modificar/${idSociety?.id}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={products.map(el => ({\n          id: el.id,\n          codigo: el.codigo,\n          metros: el.metros,\n          precioULT: el.precioULT,\n          onDelete: () => deleteProduct(el.id),\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        sortModel={[\n          {\n            field: 'codigo',\n            sort: 'asc',\n          },\n        ]}\n        scrollbarSize\n        onCellEditCommit={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { getMethod } from 'src/utils/api';\nimport { Container, Box, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { DatosPrincipalesFideicomiso } from 'src/components/fideicomiso/DatosPrincipalesFideicomiso';\nimport { ManipularDetalleFideicomiso } from 'src/components/detalleFideicomiso/ManipularDetalleFideicomiso';\nimport { GrillaDetalleFideicomiso } from 'src/components/detalleFideicomiso/GrillaDetalleFideicomiso';\n\nexport function DetalleFideicomiso({ idSociety }) {\n  const { nombreFideicomiso } = useParams();\n\n  const { data } = useQuery(['fideicomiso', idSociety.id], () =>\n    getMethod(`fideicomiso/listar/${idSociety.id}`)\n  );\n\n  const selectedFideicomisoData = data?.find(el => el.nombre === nombreFideicomiso);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {nombreFideicomiso} | {idSociety?.nombre}\n        </title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <DatosPrincipalesFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n              Grilla de Productos\n            </Typography>\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <ManipularDetalleFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaDetalleFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { IconButton, Collapse, Box, TextField, Hidden, FormControlLabel, Checkbox, Button, Autocomplete, Alert } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularOP({ idSociety, loggedUser  }) {\n\n // var blue = 0;\n  var verCheckBlue = false;\n  if(loggedUser?.['rol.factura'] ==='total'){verCheckBlue = true;}\n  const [chkblue, setChkblue] = useState(true);\n\n  const { data: fideicomisos } = useQuery(\n    ['fideicomisos'],\n    () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n\n  const { data: proveedores } = useQuery(\n    ['proveedores'],\n    () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n\n  const { data: ddfacturas } = useQuery(\n    ['ddfacturas'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0/0`));\n\n  const { data: ddfacturasBlue } = useQuery(\n    ['ddfacturasBlue'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0/1`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: addOP } = useMutation(\n    newData => postMethod(`OP/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety])\n    }\n  );\n\n\n  const [fideInForm, setFideInForm] = useState(null);\n  const [rsInForm, setRsInForm] = useState(null);\n  const [factInForm, setFactInForm] = useState(null);  \n  const [open, setOpen] = useState(false);\n  \n  return (\n    <Formik\n      initialValues={{\n        \n        numero: '',\n        montoTotal: '',\n        fechaIngreso: new Date(),\n\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        // console.log(11111, chkblue);\n        addOP({\n\n          fideicomisoId: values.fideicomiso.id,\n          empresaId: values.empresa.id,\n          rubroId: values.empresa.rubroId,\n          subRubroId: values.empresa.subrubroId,\n          facturaId: values.factura.id,\n          blue: !chkblue? 1:0,\n          creador: loggedUser.id ,\n                    \n        });\n        \n        //resetForm();\n        setOpen(true);\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Fideicomiso'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFideInForm(newValue);\n              setFieldValue('fideicomiso', newValue);\n            }}\n            value={fideInForm}\n            getOptionLabel={option => option.nombre}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(fideicomisos? fideicomisos:[])}\n            renderInput={params => <TextField {...params} label='Fideicomiso' />}\n          />\n          \n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Razon Social'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setRsInForm(newValue);\n              setFieldValue('empresa', newValue);\n            }}\n            value={rsInForm}\n            getOptionLabel={option => option.razonSocial}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField {...params} label='Razon Social' />}\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Factura N॰'\n            disablePortal\n            style={{ width: '230px', display: !chkblue?'none':'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFactInForm(newValue);\n              setFieldValue('factura', newValue);\n            }}\n            value={factInForm}\n            getOptionLabel={option => option.numero}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={ddfacturas? ddfacturas?.filter(factura => factura?.empresaId === rsInForm?.id):[]}\n            renderInput={params => <TextField {...params} label='Factura N॰' />}\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Factura Blue N॰'\n            disablePortal\n            style={{ width: '230px', display: chkblue?'none':'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFactInForm(newValue);\n              setFieldValue('factura', newValue);\n            }}\n            value={factInForm}\n            getOptionLabel={option => option.numero}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={ddfacturasBlue? ddfacturasBlue?.filter(factura => factura?.empresaId === rsInForm?.id):[]}\n            renderInput={params => <TextField {...params} label='Factura Blue N॰' />}\n          />\n\n          &nbsp;&nbsp;          \n          <Hidden  smUp={( !verCheckBlue)} >        \n          <FormControlLabel \n            control={ <Checkbox  id={'blue'}  name={'blue'}             \n            onChange={(event) => onlyCheck(event, setFieldValue, 'blue', chkblue, setChkblue)}\n            /> }   label=\"Blue\"  />\n          </Hidden>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n          <Button id='bagregar' variant=\"text\" type='submit' disabled={isSubmitting}>\n            Agregar\n          </Button>\n\n        \n\n          <Box sx={{ width: '100%' }}>\n            <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>         \n          </Box>\n\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nfunction onlyCheck(event, setFieldValue, typeOfData, chkblue, setChkblue) {\n  event.preventDefault();\n  //const { value } = event.target;\n  setChkblue(!chkblue);\n  if(chkblue){ \n    setFieldValue(typeOfData, 'on');\n    // console.log(55555, typeOfData, value, chkblue);\n  }else{\n    setFieldValue(typeOfData, 'off');\n    // console.log(66666, typeOfData, value, chkblue);\n  }\n  \n}\n\n\n\n","import React from 'react';\nimport {View, Text, Link, StyleSheet } from '@react-pdf/renderer';\n\n \nconst styles = StyleSheet.create({\n\n    container: {\n        flexDirection: 'row',\n        //borderBottomColor: '#bff0fd',\n        //backgroundColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 21,\n        fontSize: 10,\n        textAlign: 'center',\n        fontStyle: 'bold',\n        flexGrow: 1,\n    },\n\n\n  row: {\n    flexDirection: 'row',\n    //borderBottomColor: '#bff0fd',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  description: {\n      width: '55%',\n      textAlign: 'left',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      paddingLeft: 8,\n  },\n  qty: {\n      width: '15%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n  rate: {\n      width: '15%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n  amount: {\n    width: '15%'\n},\n  amountRow: {\n      width: '15%',\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n});\n\n\n  const tablaFacturas = ({dataOP, dataFacturas}) => (\n   \n   <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }}>\n       \n       <View /* Encabezado*/   \n       style={[styles.container, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color2:'#ffffff'}]}>\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Proveedor</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Detalle</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Nº Factura</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Nº OC</Text>\n            <Text style={[styles.amount, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Importe</Text>\n      </View>\n  \n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>   <Link src={dataFacturas?.item[0]?.link} >{dataFacturas?.item[0]? \"  \" + dataFacturas?.item[0]?.numero:''}</Link> </Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataFacturas?.item[1]?.link} >{dataFacturas?.item[1]? \"  \" + dataFacturas?.item[1]?.numero:''}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataFacturas?.item[2]?.link} >{dataFacturas?.item[2]? \"  \" + dataFacturas?.item[2]?.numero:''}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataFacturas?.item[3]?.link} >{dataFacturas?.item[3]? \"  \" + dataFacturas?.item[3]?.numero:''}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.montoTotal}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataFacturas?.item[4]?.link} >{dataFacturas?.item[4]? \"  \" + dataFacturas?.item[4]?.numero:''}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.montoTotal}</Text>\n      </View>\n\n\n    </View>\n  );\n  \n  export default tablaFacturas","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst styles = StyleSheet.create({\n\n  espacio: { \n    height: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  col1: {\n    width: '11%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col2: {\n    width: '55%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col3: {\n    width: '33%',\n    textAlign: 'center',\n    paddingLeft: 8,\n  },\n\n});\n\n\n\n  const tablaTEC = ({dataOP}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }} >\n       \n       <View style={styles.espacio} >\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>Detalles:</Text>\n            <Text style={styles.col2}></Text>\n            <Text style={styles.col3}></Text>\n      </View>\n       \n  \n       <View style={styles.row} >\n            <Text style={styles.col1}></Text>\n            <Text style={styles.col2}>{dataOP?.descripcion}</Text>\n            <Text style={styles.col3}>Aprobado por {dataOP?.auth_obra[0]?.usuarios[0]?.user}</Text>\n      </View>    \n\n    </View>\n  );\n  \n  export default tablaTEC","import React from 'react';\nimport {View, Text, StyleSheet, Link } from '@react-pdf/renderer';\n\n\nconst styles = StyleSheet.create({\n\n  espacio: { \n    height: 8,\n  },\n\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  rowbis: {\n    flexDirection: 'row',\n    alignItems: 'left',\n    height: 24,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  col1: {\n    width: '33%',\n    textAlign: 'right',\n    paddingLeft: 8,\n  },\n  col1bis: {\n    width: '33%',\n    textAlign: 'right',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n  col2bis: {\n    width: '33%',\n    textAlign: 'center',\n    backgroundColor: '#B4B4B4',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n  col3: {\n    width: '33%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col3bis: {\n    width: '33%',\n    textAlign: 'center',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n\n});\n\n  const tablaADM = ({dataOP}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', }} >\n          \n       <View style={styles.espacio} >\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n      </View>\n       \n  \n       <View style={styles.row} >\n            <Text style={styles.col1}>FACTURAS:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.monto}</Text>\n            <Text style={styles.col3}></Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET SUSS:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_SUSS}</Text>\n            <Text style={styles.col3}> <Link src={dataOP?.COMP_SUSS} >{dataOP?.COMP_SUSS? \" cert..\":''}</Link></Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET GAN:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_GAN}</Text>\n            <Text style={styles.col3}> <Link src={dataOP?.COMP_GAN} >{dataOP?.COMP_GAN? \" cert..\":''}</Link>   </Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET IVA:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_IVA}</Text>\n            <Text style={styles.col3}> <Link src={dataOP?.COMP_IVA} >{dataOP?.COMP_IVA? \" cert..\":''}</Link> </Text>\n      </View>\n\n      <View style={styles.rowbis} >\n            <Text style={styles.col1bis}>Monto a Abonar:</Text>\n            <Text style={styles.col2bis}>${dataOP?.monto_a_pagar}</Text>\n            <Text style={styles.col3bis}>Aprobado por {dataOP?.auth_adm[0]? dataOP.auth_adm[0].usuarios[0]?.user:\"\"}</Text>\n      </View>\n\n     \n\n    </View>\n  );\n  \n  export default tablaADM","import React from 'react';\nimport {View, Text, Link, StyleSheet } from '@react-pdf/renderer';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst styles = StyleSheet.create({\n\n  container: {\n      flexDirection: 'row',\n      //borderBottomColor: '#bff0fd',\n      //backgroundColor: '#bff0fd',\n      borderBottomWidth: 1,\n      alignItems: 'center',\n      height: 21,\n      fontSize: 10,\n      textAlign: 'center',\n      fontStyle: 'bold',\n      flexGrow: 1,\n  },\n\n\n  row: {\n    flexDirection: 'row',\n    // borderBottomColor: '#bff0fd',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 8,\n    fontStyle: 'bold',\n  },\n  col1: {\n      width: '16%',\n      textAlign: 'left',\n      //borderRightColor: bcolor,\n      borderRightWidth: 1,\n      paddingLeft: 5,\n  },\n  col2: {\n      width: '20%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'left',\n      paddingLeft: 5,\n  },\n  col3: {\n      width: '20%',\n      //borderRightColor: '#bff0fd', son 2\n      borderRightWidth: 1,\n      textAlign: 'left',\n      paddingLeft: 5,\n  },\n  col4: {\n    width: '12%',\n    //borderRightColor: '#bff0fd',\n    borderRightWidth: 1,\n    textAlign: 'center',\n    paddingLeft: 5,\n},\n  col5: {\n    width: '12%',\n    textAlign: 'right',\n    paddingRight: 5,\n  },\n  rowf: {\n    flexDirection: 'row',\n    borderBottomColor: '#ffffff',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  descriptionf: {\n    width: '88%',\n    textAlign: 'right',\n    //borderRightColor: '#bff0fd',\n    borderRightWidth: 1,\n    paddingRight: 8,\n  },\n  totalf: {\n    width: '12%',\n    textAlign: 'right',\n    paddingRight: 8,\n  },\n});\n\n\n  const tablaPagos = ({dataOP, arr_id, arr_banco, arr_cid, arr_cuenta}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }}>\n       \n      <View /* Encabezado*/   \n       style={[styles.container, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color2:'#ffffff'}]}>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Modo</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Banco</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Cuenta Nro</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Comprobante</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Fecha</Text>\n        <Text style={styles.col5}>Monto</Text>\n        \n      </View> \n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo1}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco1)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro1)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri1} >{dataOP?.OPpago?.descri1? \" comprobante..\":''}</Link></Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha1)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto1}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo2}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco2)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro2)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri2} >{dataOP?.OPpago?.descri2? \" comprobante..\":''}</Link></Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha2)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto2}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo3}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco3)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro3)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri3} >{dataOP?.OPpago?.descri3? \" comprobante..\":''}</Link></Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha3)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto3}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo4}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco4)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro4)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri4} >{dataOP?.OPpago?.descri4? \" comprobante..\":''}</Link></Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha4)}</Text>            \n        <Text style={styles.col5}>{parseInt(dataOP?.OPpago?.monto1)===0? \"\": dataOP?.OPpago?.monto4}</Text>\n      </View>\n\n   \n\n      <View style={styles.rowf}>\n            <Text style={[styles.descriptionf,{ borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>TOTAL</Text>\n            <Text style={styles.totalf}>{(parseFloat(dataOP?.OPpago?.monto1? dataOP?.OPpago?.monto1:0) + parseFloat(dataOP?.OPpago?.monto2? dataOP?.OPpago?.monto2:0)+ parseFloat(dataOP?.OPpago?.monto3? dataOP?.OPpago?.monto3:0) + parseFloat(dataOP?.OPpago?.monto4? dataOP?.OPpago?.monto4:0))}</Text>\n      </View>\n      \n      \n\n    </View>\n  );\n  \n  export default tablaPagos","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst borderColor = '#90e5fc';\nconst styles = StyleSheet.create({\n    tableContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 8,\n\n    \n    },\n    container: {\n      flexDirection: 'row',\n\n      borderBottomWidth: 1,\n      alignItems: 'center',\n      height: 21,\n      textAlign: 'center',\n      fontStyle: 'bold',\n      flexGrow: 1,\n  },\n  description: {\n      width: '60%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  qty: {\n      width: '10%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  rate: {\n      width: '15%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  amount: {\n      width: '15%'\n  },\n\n  espacio: { \n    height: 8,\n  },\n\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 15,\n    fontSize: 7,\n    fontStyle: 'bold',\n  },\n\n  col1: {\n    width: '30%',\n    textAlign: 'right',\n    paddingLeft: 8,\n  },\n  col2: {\n    width: '30%',\n    textAlign: 'left',\n\n    paddingLeft: 8,\n  },\n\n  col3: {\n    width: '40%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n\n\n});\n\n  const tablaPie = ({dataOP}) => (\n    <View style={styles.tableContainer}>\n\n       <View style={styles.row} >\n            <Text style={styles.col1}>CBU:</Text>\n            <Text style={styles.col2}>{dataOP?.empresas[0]?.CBU}</Text>\n            <Text style={styles.col3}>Cuenta Bancaria: {dataOP?.empresas[0]?.nroCuenta}</Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>CUIT:</Text>\n            <Text style={styles.col2}>{dataOP?.empresas[0]?.CUIT}</Text>\n            <Text style={styles.col3}>Email:   {dataOP?.empresas[0]?.mail}</Text>\n      </View>      \n     \n\n    </View>\n  );\n  \n  export default tablaPie","import React from 'react';\nimport { Page, Document, Image } from '@react-pdf/renderer';\nimport TablaFacturas from './tablaFacturas';\nimport TablaTEC from './tablaTEC';\nimport TablaADM from './tablaADM';\nimport TablaPagos from './tablaPagos';\nimport TablaPie from './tablaPie';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst styles = StyleSheet.create({\n    page: {\n        fontFamily: 'Helvetica',\n        fontSize: 11,\n        paddingTop: 10,\n        paddingLeft:60,\n        paddingRight:60,\n        lineHeight: 1.5,\n        flexDirection: 'column',\n    }, \n    logo: {\n        height: 43,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    titleContainer:{\n      flexDirection: 'row',\n      marginTop: 24,\n    },\n    reportTitle:{\n        color: '#101010',\n        letterSpacing: 4,\n        fontSize: 22,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n    reportTitleFide:{\n        \n        letterSpacing: 4,\n        fontSize: 22,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n    subreportTitle:{\n      color: '#101010',\n      letterSpacing: 4,\n      fontSize: 18,\n      textAlign: 'center',\n      textTransform: 'uppercase',\n    },\n    saltolinea:{\n        fontSize: 8,\n    },\n    invoiceNoContainer: {\n      flexDirection: 'row',\n      marginTop: 36,\n      justifyContent: 'flex-end'\n    },\n    invoiceDateContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n    },\n    invoiceDate: {\n            fontSize: 12,\n            fontStyle: 'bold',\n    },\n\n  });\n\n  var arr_id = [];\n  var arr_banco = [];\n  var arr_cid = [];\n  var arr_cuenta = [];\n  \n  if(JSON.parse(localStorage.getItem(\"bs\"))){\n\n    var bancos = JSON.parse(localStorage.getItem(\"bs\"));\n    var banco_en_blanco = {id:0, banco:\"\", descripcionLarga:\"\" };\n    bancos.push(banco_en_blanco);\n\n\n    for (var i = 0; i < bancos.length; i++) {\n        arr_id.push(bancos[i].id);\n        arr_banco.push(bancos[i].banco);\n    }   \n\n    var cuentasbanco = JSON.parse(localStorage.getItem(\"co\"));  \n    var cuenta_en_blanco = {id: 0,  bancoId: 0,  cuentaBanco: \"\",  descripcionLarga: \"\",  bancos: [{banco: \"\"}]};\n    cuentasbanco.push(cuenta_en_blanco);\n\n\n    for (var j= 0; j < cuentasbanco.length; j++) {\n        arr_cid.push(cuentasbanco[j].id);\n        arr_cuenta.push(cuentasbanco[j].cuentaBanco);\n    } \n\n  }\n  \n\n  const orden_de_pago = ({dataOP, dataFacturas, apiServerUrl, idSociedad}) => (\n\n            <Document >\n                <Page size=\"A4\" style={styles.page}> \n\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>  \n\n                    <View style={{flexDirection: 'row',marginLeft: '0',marginRight: '0'}} >\n                        <Text style={[styles.reportTitleFide, {width: (dataOP? 100 - dataOP?.fideicomisos[0]?.ancho_logo + '%':'75%'), color: dataOP?.fideicomisos[0]?.color}]}>{dataOP?.fideicomisos[0]?.titulo}</Text>\n                        <View style={{width: dataOP? (dataOP?.fideicomisos[0]?.ancho_logo + '%'):'25%' }} >\n                        <Image style={[styles.logo, {backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color3:'#FFFFFF' }]} src={{ uri: `${apiServerUrl}/sociedades/${idSociedad}/${dataOP? dataOP?.fideicomisos[0]?.logo:'logo.png'}` , method: \"GET\", headers: { \"Cache-Control\": \"no-cache\" }, body: \"\" }} />                   \n                        </View>\n                    </View>\n\n                    <View style={styles.titleContainer}>\n                        <Text style={styles.reportTitle}>SOLICITUD DE PAGO     Nº\t{dataOP?.numero}</Text>\n                        \n                    </View>\n\n                    <View style={styles.invoiceDateContainer}>\n                        <Text style={styles.label}>Fecha: </Text>\n                        <Text >{mostrarFecha(dataOP?.createdAt)}</Text>\n                    </View >\n\n                    <TablaFacturas dataOP={dataOP} dataFacturas={dataFacturas} />\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>\n\n                    <View >\n                        <Text style={styles.subreportTitle}>APROBACIÓN TÉCNICA</Text>                       \n                    </View>\n                    <TablaTEC dataOP={dataOP} />\n                   \n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>\n                    <View >\n                        <Text style={styles.subreportTitle}>APROBACIÓN ADMINISTRATIVA</Text>                       \n                    </View>\n                    <TablaADM dataOP={dataOP} />\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View> \n\n                    <View >\n                        <Text style={styles.subreportTitle}>PAGO</Text>                       \n                    </View>                   \n                    <TablaPagos dataOP={dataOP} arr_id={arr_id} arr_banco={arr_banco} arr_cid={arr_cid} arr_cuenta={arr_cuenta} />\n\n                    <TablaPie dataOP={dataOP} />\n\n                </Page>\n            </Document>\n        );\n  \n  export default orden_de_pago","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\n//import { DataGrid, GridToolbarContainer, GridToolbarExport } from '@material-ui/data-grid\"';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Box, Button, TextField, Avatar, Autocomplete, Hidden} from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PDFDownloadLink, pdf } from \"@react-pdf/renderer\";\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\n\nvar miOP={};\nvar fa={};\nvar idSociedad=0;\n\nconst columns = (verColumnBlue, puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'blue',\n    headerName: 'Blue',\n    hide: !verColumnBlue,\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: ({ value }) => value===0?'' :<Avatar sx={{ bgcolor: '#3944BC' }} >B</Avatar>,\n  },\n  {\n    field: 'createdAt',\n    headerName: 'Fecha',\n    width: 120,\n    type: 'date',\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => new Date(value).toLocaleDateString('es-AR', { timeZone: 'UTC' }),\n  },\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'numero',\n    headerName: 'Numero',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    renderCell: IrDetalleOP_2,    \n  },\n  {\n    field: 'empresa',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },  \n  {\n    field: 'monto',\n    headerName: 'Monto',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    align: 'left',    \n  },\n  {\n    field: 'estadoOP', // campo en grilla\n    headerName: 'Estado',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxEst estados={estados} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'facturas',\n    headerName: 'Facturas',\n    width: 140,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { misFacturas }}) => misFacturas?.map(({numero}) => numero)?.join(', '), \n  },\n  {\n    field: 'RET_SUSS',\n    headerName: 'SUSS',\n    width: 120,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_GAN',\n    headerName: 'GAN',\n    width: 120,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_IVA',\n    headerName: 'IVA',\n    width: 120,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'retencion',\n    hide: true,\n  },\n  {\n    field: 'estadoRET', // campo en grilla\n    headerName: 'Retenciones',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxRet retenciones={retenciones} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'aprobado_obra',\n    hide: true,\n  },\n  {\n    field: 'aprobado obra',\n    headerName: 'Ap. Obra',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonObraAuthRow,\n  },\n  {\n    field: 'aprobado_adm',\n    hide: true,\n  },\n  {\n    field: 'aprobado adm',\n    headerName: 'Ap. ADM',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonAdmAuthRow,\n  },\n  {\n    field: 'estado',\n    hide: true,\n  },\n  {\n    field: 'fondos_',\n    hide: true,\n  },\n\n  {\n    field: 'fondos', // campo en grilla\n    headerName: 'Fondos',\n    width: 150,\n    type: 'singleSelect',\n    editable: puedeEditar, //props.row.confirmada,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxFon fondos_s={fondos_s} props={props} />,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'rubro',\n    hide: true,\n  },  \n  {\n    field: 'rubroID',\n    headerName: 'Rubro',\n    width: 140,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBox rubros={rubros} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'subrubro',\n    hide: true,\n  },\n  {\n    field: 'subrubroID',\n    headerName: 'Sub Rubro',\n    width: 140,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBoxSub subRubros={subRubros} props={props} />,\n    headerAlign: 'center',\n  },  \n  {\n    field: 'formaPago',\n    headerName: 'Forma Pago',\n    width: 160,\n    editable: false,\n  },\n  {\n    field: 'descripcion',\n    headerName: 'Detalle',\n    width: 140,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'center',    \n  }, \n\n  {\n    field: 'archivada',\n    headerName: 'Generar',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DescargarPDF,\n  },\n\n  {\n    field: 'enviada',\n    headerName: 'Enviar',\n    width: 90,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: EnviarMail,\n  },\n  {\n    field: 'confirmada',\n    headerName: 'Conf',\n    type: 'boolean',\n    width: 120,\n    editable: false,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    hide: !puedeEditar,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId, confirmada } }) => (\n      confirmada? \"\":<DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nconst retenciones = [  \n  { id: 1, descripcion: '-' },\n  { id: 2, descripcion: 'OK' },\n  { id: 3, descripcion: 'Pendiente' },\n];\n\n// por ahora se inicializa en el login\nvar estados = JSON.parse(localStorage.getItem(\"estados\"));\n\n\nconst fondos_s = [  \n  { id: 1, descripcion: '-' },\n  { id: 2, descripcion: 'OK cargado' },\n];\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function GrillaOP({ idSociety, loggedUser}) {\n  \n  idSociedad = idSociety.id;\n  var result = {};\n\n  var puedeEditar = true;\n  const accesoOP = loggedUser?.['rol.op'];\n  if( accesoOP ==='vista'){puedeEditar =false}\n\n  var blue = 0;\n  var verColumnBlue = false;\n  if(loggedUser?.['rol.op'] ==='total'){blue= -1; verColumnBlue = true;}\n  \n\n  const navigate = useNavigate();\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  \n  \n                                                      \n  const {\n    data: opInformation,\n    isLoading,\n    error,\n  } = useQuery(['OP', idSociety], () => getMethod(`OP/listar/${idSociety.id}/todas/nulo/${blue}`));\n\n  const queryClient = useQueryClient();\n\n  const { data: rubros } = useQuery(['rubros', idSociety], () =>\n    getMethod(`rubro/listar/${idSociety.id}`)\n  );\n\n  const { data: subRubros } = useQuery(['subrubros', idSociety], () =>\n    getMethod(`subrubro/listar/${idSociety.id}/0`)\n  );\n\n  // es un array de facturas para la columna facturas asociada a una OP (OPId)\n  const { data: grfacturas } = useQuery(['grfacturas', idSociety.id], async() =>\n  await getMethod(`factura/listar/${idSociety.id}/todas/nada/${blue}`));\n\n\n  const { mutate: irDetalle } = useMutation(\n\n    async el => await  getMethod(`op/mostrar/${idSociety.id}/${el.id}`),\n      {onSettled: (el) => { /*queryClient.refetchQueries(['formOP', idSociety]);*/\n      navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el.confirmada}/${el.blue}`)}\n    }\n    \n  );\n\n  const { mutate: eliminate } = useMutation(\n    async idOP => await deleteMethod(`OP/eliminar/${idSociety.id}`, { id: idOP }),\n    {\n      onMutate: async idOP => {\n        await queryClient.cancelQueries(['OP', idSociety]);\n        const prevData = queryClient.getQueryData(['OP', idSociety]);\n        const newData = prevData.filter(op => op.id !== idOP);\n        queryClient.setQueryData(['OP', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idOP, context) => queryClient.setQueryData(['OP', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n    }\n  );\n\n   /***** generar y subir pdf ***********************************************************************/\n\n  const { mutate: cargar_y_subir_OP } = useMutation(\n    async el =>         \n        result = await getMethod(`op/mostrarConFacturas/${idSociety.id}/${el.id}`),\n    {\n      onSuccess: async () =>{\n         miOP = result.op;\n         fa = {item: result.item};\n         getPdfBlob(miOP?.id, miOP?.fideicomisos[0]?.nombre, miOP?.numero);\n        }        \n    }     \n  );\n\n  async function getPdfBlob(idOP, fideicomiso, numero){\n\n    let blobPdf = await pdf(NewDocument()).toBlob();\n    let formData = new FormData();\n    formData.append('logo', blobPdf);\n    formData.append('id', idOP);\n    formData.append('fideicomiso', fideicomiso);\n    formData.append('numero', numero);\n    formData.append('archivada', 1);    \n    postMethod(`op/modificar/${idSociety.id}`, formData);\n    \n  }\n\n  const NewDocument = () => {\n    \n    return (\n      <RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociety.id} />\n    )\n  }\n\n  /***** fin generar y subir pdf ************************************************************************/\n\n \n  const { mutate: nonAuthObra } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n        id : el.authOBRA,\n        tipoAutorizacion: 'obra',\n        opid : el.id,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: nonAuthAdm } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n\n        id : el.authADM,\n        tipoAutorizacion: 'adm',\n        opid : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: enviarCorreo } = useMutation(\n    async el =>\n      await postMethod(`OP/enviarMail/${idSociety?.id}`, {\n\n        mailTo : idSociety?.mailOP,\n        mailaccount : idSociety?.mailaccount,\n        mailfromname : idSociety?.mailfromname,\n        mailConstructora : idSociety?.mailConstructora,\n        fideicomiso : el.fideicomisos[0]?.nombre,        \n        razonSocial : el.empresas[0]?.razonSocial,\n        enviar_OP_auto : el.empresas[0]?.enviar_OP_auto,\n        numero : el.numero,\n        id : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>//{\n      //if(field!='fico'){\n        // console.log([field], id),\n            await postMethod(`OP/modificar/${idSociety.id}`, {id,[field]: value,}),\n            \n        {\n          onMutate: async ({ field, id, value }) => {\n            await queryClient.cancelQueries(['OP', idSociety]);\n            const prevData = queryClient.getQueryData(['OP', idSociety]);\n            const newData = [\n              ...prevData.filter(op => op.id !== id),\n              { ...prevData.find(op => op.id === id), [field]: value },\n            ];\n            queryClient.setQueryData(['OP', idSociety], newData);\n            return prevData;\n          },\n          onError: (err, id, context) => queryClient.setQueryData(['OP', idSociety], context),\n          onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n        }\n     // }\n    //}\n  );\n\n  \n  /*\n  const [selectionModel, setSelectionModel] = React.useState(() =>\n    opInformation.filter((r) => r.age > 40).map((r) => r.id),\n  );*/\n\n  const [selectionModel, setSelectionModel] = useState([]);\n\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n  \n    return (\n\n      <div style={{ width: '100%' }}>\n        \n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <ToastContainer /> \n        <DataGrid \n          rows={opInformation.map(OP => ({\n            id: OP.id,    \n            acceso: accesoOP,\n            numero: OP.numero,\n            empresa: OP.empresas[0]?.razonSocial,\n            empresaId: OP.empresaId,\n            monto: OP.monto, \n            moneda: OP.moneda,             \n            RET_SUSS: OP.RET_SUSS,\n            RET_GAN: OP.RET_GAN,\n            RET_IVA: OP.RET_IVA,\n            rubroId: OP.rubroId,            \n            estadoRET: {\n              id: OP.estadoRET,\n              descripcion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            },\n            estadoOP: {\n              id: OP.estadoOP,\n              descripcion: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            },\n            blue: OP.blue,\n            confirmada: OP.confirmada===0? false: true,\n            fondos: {\n              id: OP.fondos,\n              descripcion: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,\n            },\n            fideicomiso: OP.fideicomisos[0]?.nombre,\n            archivada: OP.archivada,\n            enviada: OP.enviada,\n            descripcion: OP.descripcion,\n            createdAt: OP.createdAt,   \n            rubroID: {\n              id: OP.rubroId,\n              nombre: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            },\n            subrubroID: {\n              id: OP.subrubroId,\n              nombre: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,\n            }, \n            apr_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            apr_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            misFacturas: grfacturas?.filter(factura => factura?.OPId === OP.id),\n            deleteId: OP.id,\n            /* para exportar*/\n            retencion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            aprobado_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            aprobado_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            estado: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            fondos_: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,  \n            formaPago: OP.formaPago,          \n            rubro: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            subrubro: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,     \n            onAuthObra: () => nonAuthObra(OP),\n            onAuthAdm: () => nonAuthAdm(OP),\n            onEnviar: () => enviarCorreo(OP),\n            cargarOP: () => cargar_y_subir_OP(OP),\n            esEditable: () => (OP),\n            onIrDetalle: () => irDetalle(OP),    \n            \n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(verColumnBlue, puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete)}\n          isCellEditable={(params) => (!params.row.confirmada || accesoOP ==='total')}\n          /*disableSelectionOnClick*/\n          checkboxSelection\n          onSelectionModelChange={setSelectionModel}\n               \n          autoHeight\n          density={'comfortable'}\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n         \n          \n        >      \n\n        </DataGrid>\n\n        <Hidden  smUp={(loggedUser['rol.op'] ==='vista')} >\n            <Button onClick={()=>generar_y_enviar(selectionModel, idSociety)} >\n                Generar y Enviar OPs Seleccionadas\n            </Button>\n        </Hidden>\n\n        \n\n      </div>\n    );\n\n\n}\n\nfunction generar_y_enviar(selectionModel, idSociety) {\n\n    getOPs(selectionModel, idSociety);\n\n}\n\nasync function getOPs(arr, idSociety) {\n\n  // console.log(\"BBBB\", arr[0]);\n  for (let i = 0; i < arr.length ; i++) {\n    try {      \n      // console.log(\"BBB: \", selectionModel[i]);\n      let result = await getMethod(`op/mostrarConFacturas/${idSociety.id}/${arr[i]}`);\n      // console.log('AAAi=', i, 'res: ', op.op.numero);\n      let miOP = result.op;\n      let fa = {item: result.item};\n      if(miOP.estadoOP ===3 && miOP.blue === 0){\n            //console.log(op.numero);\n            console.log('AAi=', i, 'res: ', miOP.numero);\n            const NewDocument = () => {    \n              return (\n                <RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociety.id} />\n              )\n            }\n            let generado = await getPdfBlob_2(NewDocument, miOP.id, miOP?.fideicomisos[0]?.nombre, miOP.numero, idSociety);\n            if(generado){\n              enviarCorreo_2(miOP.id, miOP?.fideicomisos[0]?.nombre, miOP.numero, miOP.empresas[0]?.razonSocial, miOP.empresas[0]?.enviar_OP_auto, idSociety)\n            }\n\n      } \n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nasync function getPdfBlob_2(NewDocument, idOP, fideicomiso, numero, idSociety){\n\n  let blobPdf = await pdf(NewDocument()).toBlob();\n  let formData = new FormData();\n  formData.append('logo', blobPdf);\n  formData.append('id', idOP);\n  formData.append('fideicomiso', fideicomiso);\n  formData.append('numero', numero);\n  formData.append('archivada', 1);    \n  let rta = await postMethod(`op/modificar/${idSociety.id}`, formData);\n  return !!rta\n}\n\nasync function enviarCorreo_2(idOP, fideicomiso, numero, razonSocial, enviar_OP_auto, idSociety){\n\n  let rta = await postMethod(`OP/enviarMail/${idSociety?.id}`, {\n\n    mailTo : idSociety?.mailOP,\n    mailaccount : idSociety?.mailaccount,\n    mailfromname : idSociety?.mailfromname,\n    mailConstructora : idSociety?.mailConstructora,\n    fideicomiso : fideicomiso,        \n    razonSocial : razonSocial,\n    enviar_OP_auto : enviar_OP_auto,\n    numero : numero,\n    id : idOP,\n\n  })\n  return !!rta\n}\n\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n\n      <GridToolbarExport csvOptions={{ fields: ['createdAt', 'fideicomiso', 'numero','empresa','monto','moneda','RET_SUSS','RET_GAN','RET_IVA','fondos_','retencion', 'aprobado_obra', 'aprobado_adm', 'estado', 'fondos_', 'rubro', 'subrubro','descripcion'] }} />\n      \n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n\n  const sendRow = params.row.onIrDetalle;\n  const fideicomiso = params.row.fideicomiso;\n  return <Button onClick={sendRow} >{fideicomiso}  </Button>;\n} \n\nfunction IrDetalleOP_2(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const numero = params.row.numero;\n  return <Button onClick={sendRow} >{numero}  </Button>;\n} \n\n\nfunction ComboBox({ rubros, props }) {\n  const { id, api, field } = props;\n\n  rubros = [\n    ...rubros,\n    {\n      rubro: '',\n    },\n  ];\n  const [selectedRubro, setSelectedRubro] = useState({\n    rubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedRubro(newValue);\n     \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      //disablePortal\n      id=\"combo-box-demo\"\n      options={rubros}\n      isOptionEqualToValue={(op, val) => op.rubro === val.rubro}\n      getOptionLabel={option => option.rubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxSub({ subRubros, props }, params) {\n  const { id, api, field } = props;\n  \n  subRubros = [\n    \n    ...subRubros.filter(subR => subR.rubroId === parseInt(props?.row?.rubroID.id)),\n    {\n      subRubro: '',\n    },\n  ];\n\n  const [selectedsubRubro, setSelectedsubRubro] = useState({\n    subRubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedsubRubro}\n      onChange={async (event, newValue) => {        \n        setSelectedsubRubro(newValue);       \n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }}\n      id=\"combo-box-demo\"\n      options={subRubros}\n      isOptionEqualToValue={(op, val) => op.subRubro === val.subRubro}\n      getOptionLabel={option => option.subRubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"subRubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxRet({ retenciones, props }) {\n  const { id, api, field } = props;\n\n  retenciones = [\n    ...retenciones,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedRet, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRet}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue);    \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={retenciones}\n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Retencion\" />}\n    />\n  );\n}\n\nfunction ComboBoxEst({ estados, props }) {\n  const { id, api, field } = props;\n\n  estados = [\n    ...estados,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedEst, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.estadoOP.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n\n  return (\n    <Autocomplete\n      value={selectedEst}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue); \n   \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={estados}      \n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Estado\" />}\n    />\n  );\n    }\n}\n\nfunction ComboBoxFon({fondos_s, props}) {\n  const { id, api, field } = props;\n\n  fondos_s = [\n    ...fondos_s,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedFon, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n\n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.fondos.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n    return (<Autocomplete\n    value={selectedFon}\n    \n    onChange={async (event, newValue) => {\n      setSelectedRol(newValue); \n      if(newValue?.id > 0){\n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }\n    }}\n\n    id=\"combo-box-demo\"\n    options={fondos_s}\n    isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n    getOptionLabel={option => option.descripcion}\n    sx={{ width: 300 }}\n    renderInput={params => <TextField {...params} label=\"Fondos\" />}\n  />)\n  }\n}\n\nfunction NonObraAuthRow(params) {\n  \n  const authRow = params.row.onAuthObra;\n  const apr_obra = params.row.apr_obra;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Obra\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_obra !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_obra}  </Button>;\n    }else{\n      let str = \"\" + apr_obra;\n      return \"\" + str.toUpperCase();\n    }\n  }else{\n    return \"\"\n  }\n} \n\nfunction NonAdmAuthRow(params) {\n\n  const authRow = params.row.onAuthAdm;  \n  const apr_adm = params.row.apr_adm;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Adm\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_adm !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_adm}  </Button>;\n    }else{\n      let str = \"\" + apr_adm;\n      return \"\" + str.toUpperCase();\n    }\n   \n  }else{\n    return \"\"\n  }\n\n} \n\nfunction DescargarPDF(params) {  \n  \n  var cargarOP = params.row.cargarOP;\n  const fideicomiso = params.row.fideicomiso;\n  const numero = params.row.numero;\n  var nombrePDF = \"OP_\" +  fideicomiso + \"_\" + numero + \".pdf\";\n  const archivada = params.row.archivada;\n  const apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n  \n  const notify = () =>{\n    \n    cargarOP();\n    // return(\n    setTimeout(() => {\n    \n        toast(({ closeToast}) => (\n          // cargarOP()\n          <Box>\n            <Button\n              sx={{ p: 1, m: 1 }}\n              variant='contained'\n              color='secondary'\n              size='small'\n              //onMouseDownCapture={cargarOP()}\n              onClick={closeToast}>\n              \n              Cancelar\n            </Button>\n\n            <PDFDownloadLink document={<RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociedad} />} fileName={nombrePDF} >\n              {({ blob, url, loading, error }) => {\n          \n                return (loading ? 'Loading document...' : 'Descargar')}\n              }\n            </PDFDownloadLink> \n\n            \n          </Box>\n        )) // )\n      }, 800);\n    };\n  \n  if(archivada === 0){\n    return <Button onClick={notify} >Para Generar</Button>;\n  }else{\n    return <Button onClick={notify} >Generada</Button>;    \n  }\n\n} \n\nfunction EnviarMail(params) {\n\n  const enviar = params.row.onEnviar;  \n  const enviada = params.row.enviada;\n  const archivada = params.row.archivada;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            enviar();\n            closeToast();\n          }}>Enviar\n        </Button>\n      </Box>\n    ));\n  \n    if(archivada === 0){\n      return \"\";\n    }else{\n      if(enviada === 0){\n        return <Button onClick={notify} >Enviar</Button>;\n      \n      }else{\n        return <Button onClick={notify} >Re enviar</Button>;\n      }   \n    }\n  \n} \n\n","import { Container, Box, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { ManipularOP } from 'src/components/OP/ManipularOP';\nimport { GrillaOP } from 'src/components/OP/GrillaOP';\n\nexport function OP({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n            <Box sx={{ pt: 3 }}>\n              <ManipularOP idSociety={idSociety}  loggedUser={loggedUser} />\n            </Box>\n          </Hidden>\n          <Box sx={{ pt: 3 }}>\n            <GrillaOP idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Button} from '@mui/material';\nimport PriceCheckIcon from '@mui/icons-material/PriceCheck';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod} from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'createdAt',\n    headerName: 'Fecha',\n    editable: false,\n    width: 120,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => mostrarFecha(value),\n  },\n\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'numero',\n    headerName: 'Numero',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    renderCell: IrDetalleOP_2,    \n  },\n\n  {\n    field: 'empresa',\n    headerName: 'Razón Social',\n    editable: false,\n    width: 160,\n    headerAlign: 'center',\n    align: 'center',\n  },  \n  {\n    field: 'monto',\n    headerName: 'Monto',\n    editable: false,\n    width: 125,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    editable: false,\n    width: 60,\n    headerAlign: 'center',\n    align: 'left',    \n  },\n  {\n    field: 'formaPago',\n    headerName: 'Forma Pago',\n    width: 160,\n    editable: true,\n  },\n  {\n    field: 'PriceCheckIcon',\n    headerName: 'Autorizar',\n    width: 160,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { authId } }) => (\n      <PriceCheckIcon\n        onClick={e => {\n\n          setRowIdToDelete(authId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n\n];\n\n\n// por ahora se inicializa en el login\nvar formaPagos =[];\nif(localStorage.getItem(\"formaPagos\")){\n  formaPagos = localStorage.getItem(\"formaPagos\").split(\",\")\n}else{  \n  formaPagos[0] =\"Otra\";\n}\n\nexport function GrillaOpAuth({ idSociety,  loggedUser, tipo }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n  const navigate = useNavigate();\n  const blue = 0; // trae todas las de la OP\n\n  let str = '';\n  if(tipo ==='adm'){\n    str = `OP/listar/${idSociety.id}/authADM/nulo/${blue}`;\n  }else{\n    str = `OP/listar/${idSociety.id}/authObra/nulo/${blue}`;\n  }\n\n  const {\n    data: opInformation,\n    isLoading,\n    error,\n  } = useQuery(['OP' + tipo, idSociety], () => getMethod(str));\n \n  const queryClient = useQueryClient();\n\n  const { mutate: authFila } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: tipo,\n        creador: loggedUser.id\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP' + tipo, idSociety]),\n    }\n\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async el =>    \n      navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el.confirmada}/${el.blue}`)\n\n  );\n  \n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`OP/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['OP' + tipo, idSociety]);\n        const prevData = queryClient.getQueryData(['OP' + tipo, idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(OP => OP.id !== id),\n          { ...prevData.find(OP => OP.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['OP' + tipo, idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['OP' + tipo, idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['OP' + tipo, idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Autorizar fila?\" action={() => authFila(rowIdToDelete)} />\n        <DataGrid\n          rows={opInformation.map(OP => ({\n            id: OP.id,        \n            numero: OP.numero,\n            empresa: OP.empresas[0].razonSocial,\n            monto: OP.monto,\n            moneda: OP.moneda,   \n            formaPago: OP.formaPago,      \n            fideicomiso: OP.fideicomisos[0].nombre,          \n            apr_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            apr_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            createdAt: OP.createdAt,\n            authId: OP.id,\n            onIrDetalle: () => irDetalle(OP),   \n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const fideicomiso = params.row.fideicomiso;\n  return <Button onClick={sendRow} >{fideicomiso}  </Button>;\n} \nfunction IrDetalleOP_2(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const numero = params.row.numero;\n  return <Button onClick={sendRow} >{numero}  </Button>;\n} \n\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { GrillaOpAuth } from 'src/components/OP/GrillaOpAuth';\n\nexport function AuthAdmOP({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container >\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOpAuth idSociety={idSociety}  loggedUser={loggedUser} tipo='adm' />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { GrillaOpAuth } from 'src/components/OP/GrillaOpAuth';\n\nexport function AuthObraOP({ idSociety,  loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container >\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOpAuth idSociety={idSociety}  loggedUser={loggedUser} tipo='obra' />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { useState } from 'react';\nimport { TextField, Button, Autocomplete } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { getMethod, postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\n\nexport function AgregarFactura({ idSociety, empresaId, OPId, refetch }) {\n  \n\n  const { blue } = useParams();\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  \n  const { data: facturas } = useQuery(\n    ['facturas'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0/${blue}`));\n\n  const { mutate: addFactura } = useMutation(\n    async factura =>\n      await postMethod(`factura/modificar/${idSociety.id}`, \n      {id: factura?.factura?.id,\n      OPId: OPId\n      }),\n    {\n      onSuccess: async () =>\n      \n        await queryClient.refetchQueries(['facturas', idSociety])              \n        \n    }\n  );\n\n  const [typeInForm, setTypeInForm] = useState(null);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          factura: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n       \n          addFactura(values);\n          \n          setTimeout(() => {\n            refetch();\n            console.log(\"refetch\");\n          }, 750)\n   \n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Número Factura'\n              disablePortal\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setTypeInForm(newValue);\n                setFieldValue('factura', newValue);\n              }}\n              value={typeInForm}\n              getOptionLabel={option => option.numero}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={facturas? facturas?.filter(factura => factura?.empresaId === parseInt(empresaId)):[]}\n              renderInput={params => <TextField {...params} label='Número Factura' />}\n            />\n            \n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar Factura\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"...error\"\n        ok\n      />\n    </>\n  );\n}\n","// import { useState, useContext } from 'react';\nimport { useState } from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport { TextField, Typography, Grid, Autocomplete, Hidden, Switch} from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { isValidDate, yearMonthDayString } from 'src/utils/utils'; \n// import { SumFacturaContext } from './sumFacturaContext';\n\n\n\nexport function FormDetalleOP({ idSociety, OPId, loggedUser, estadoOP, confirmada, formOP, isLoading, error, refetch}) {\n  \n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  var acceso = true;\n\n  if(loggedUser?.['rol.op'] ==='vista'){\n       acceso =false;\n  }\n/*\n   \n*/\n  const { mutate: updateOP } = useMutation(\n      async newOP =>\n        await postMethod(`op/modificar/${idSociety.id}`, newOP),\n      {\n        onSuccess: async () => await queryClient.refetchQueries(['formOP', idSociety])\n      }\n    );\n\n  // por ahora se inicializa en el login\n  var estados = JSON.parse(localStorage.getItem(\"estados\"));\n  const [isConfirmOP, setIsConfirmOP] = useState(parseInt(confirmada));\n  const [typeInForm, setTypeInForm] = useState(estados[parseInt(estadoOP)]);\n\n\n\n  var bancos = JSON.parse(localStorage.getItem(\"bs\"));\n  var banco_en_blanco = {id:0, banco:\"\", descripcionLarga:\"\" };\n  bancos.push(banco_en_blanco);\n\n\n  var cuentasbanco = JSON.parse(localStorage.getItem(\"co\"));  \n  var cuenta_en_blanco = {id: 0,  bancoId: 0,  cuentaBanco: \"\",  descripcionLarga: \"\",  bancos: [{banco: \"\"}]};\n  cuentasbanco.push(cuenta_en_blanco);\n  \n  // por ahora se inicializa en el login\n  var formaPagos = localStorage.getItem(\"formaPagos\").split(\",\")\n  \n  var verBotonDesconfirmar = (loggedUser['rol.op'] ==='total' && (isConfirmOP===1))? false:true;\n//console.log(999999, isValidDate(\"2021-12-13\"));\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n          \n    <>\n\n      <Formik \n        initialValues={{\n          id: OPId,\n          flagPago: 1,// es para avisarle a la api que se modifica OPpagos\n          \n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          updateOP(values);\n          // resetForm();\n          setSubmitting(false);\n          // refetch();\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form  >\n            \n                <Grid container spacing={{ xs: 0.5, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }} >                  \n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Aprobación Técnica \n                      </Typography>\n                    \n\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={6}>\n                        <TextField   sx={{ width: '68ch' }} label=\"Detalle\"  defaultValue={formOP?.descripcion || \"\"} type=\"float\"  name=\"descripcion\" \n                        onChange={event => handleModification(event, setFieldValue, refetch, 'descripcion', idSociety.id, OPId, 0, 0)}\n                        /* onFocus={event => formOP.descripcion? handleModification(event, setFieldValue, refetch, 'descripcion', idSociety.id, OPId, 0, 0):false } */\n                        InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}\n\n                        />                  \n                  </Grid>                 \n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Aprobado por:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                        {formOP?.auth_obra?formOP.auth_obra[0]?.usuarios[0]?.user:''}\n                        </Typography>\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Aprobación Administrativa\n                      </Typography>\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={2}   >\n                  <Typography  align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                  Estado:&nbsp;&nbsp;&nbsp;\n                        </Typography>\n                  </Grid>     \n                  <Grid item md={2}>                  \n                    <Field\n                      as={Autocomplete}\n                      size={'small'}\n                      label='Estado'\n                      disabled={!acceso || (isConfirmOP===1)}\n                      disablePortal\n                      style={{ width: '160px', display: 'inline-flex' }}\n                      onChange={(event, newValue) => {\n                        setTypeInForm(newValue);\n                        setFieldValue('estadoOP', newValue);                        \n                        onlyNumbers(event, setFieldValue, refetch, 'estadoOP', idSociety.id, OPId, 0, newValue.id)\n                      }}\n                      value={typeInForm}\n                      getOptionLabel={option => option.descripcion}\n                      isOptionEqualToValue={(option, value) => option.id === value.id}\n                      options={estados}\n                      renderInput={params => <TextField {...params} label='Estado' />}\n                      \n                    />\n                  </Grid>\n                  <Grid item md={2}>  \n                      <Hidden  smUp={(loggedUser['rol.op'] ==='total'  || (isConfirmOP!==1)?true:false)} >\n                          <Typography align=\"center\" color=\"green\" variant=\"h5\">                      \n                            {(isConfirmOP===1)?\"Confirmada!\":\"\"}\n                          </Typography> \n                      </Hidden>\n\n                      <Hidden  smUp={(!acceso || (typeInForm.id!==3)  || (isConfirmOP===1)?true:false)} >\n\n                                                    \n                           <Typography align=\"left\" color=\"blue\" variant=\"h5\">                      \n                           <Switch  onChange={event => confirmarOP(event, setIsConfirmOP,'confirmada', idSociety.id, OPId, 0, 1)}  /> Confirmar\n                          </Typography> \n                      </Hidden>\n\n                      <Hidden  smUp={(verBotonDesconfirmar)} >\n                      \n                          <Typography align=\"left\" color=\"blue\" variant=\"h5\">                      \n                              <Switch  defaultChecked onChange={event => confirmarOP(event, setIsConfirmOP,'confirmada', idSociety.id, OPId, 0, 0)}  /> Desconfirmar\n                              </Typography> \n                          \n                          </Hidden>\n\n                  </Grid>              \n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Aprobado por:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        {formOP?.auth_adm?formOP.auth_adm[0]?.usuarios[0]?.user:''}\n                        </Typography>\n                  </Grid>\n                \n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>    \n\n                  <Grid item md={2}>\n                  <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                  Sumatoria Facturas:&nbsp;&nbsp;&nbsp;\n                        </Typography>\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                        &nbsp;{formOP?.monto}\n                        </Typography>\n                  </Grid>\n\n                  <Grid item md={4}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Forma de Pago:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        {formOP?.formaPago}\n                        </Typography>\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={2}>\n                  </Grid>               \n                  <Grid item md={2}>\n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"RET GAN\" type=\"number\" key={formOP?.RET_GAN} defaultValue={formOP?.RET_GAN}  name=\"RET_GAN\" onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_GAN', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={2}>                                                                                                                                             \n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Certificado GAN\"  key={formOP?.COMP_GAN} defaultValue={formOP?.COMP_GAN}  name=\"COMP_GAN\" onChange={event => handleModification(event, setFieldValue, refetch, 'COMP_GAN', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={6}>\n                  </Grid> \n\n                  <Grid item md={2}>\n                  </Grid>               \n                  <Grid item md={2}>\n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"RET IVA\" type=\"number\" key={formOP?.RET_IVA} defaultValue={formOP?.RET_IVA}  name=\"RET_IVA\" onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_IVA', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={2}>                                                                                                                                             \n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Certificado IVA\"  key={formOP?.COMP_IVA} defaultValue={formOP?.COMP_IVA}  name=\"COMP_IVA\" onChange={event => handleModification(event, setFieldValue, refetch, 'COMP_IVA', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={6}>\n                  </Grid>   \n\n                  <Grid item md={2}>\n                  </Grid>               \n                  <Grid item md={2}>\n                  <TextField size={'small'} sx={{ width: '20ch' }} label=\"RET SUSS\" type=\"number\"  key={formOP?.RET_SUSS}  defaultValue={formOP?.RET_SUSS}  name=\"RET_SUSS\"  onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_SUSS', idSociety.id, OPId, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={2}>                                                                                                                                             \n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Certificado SUSS\"  key={formOP?.COMP_SUSS} defaultValue={formOP?.COMP_SUSS}  name=\"COMP_SUSS\" onChange={event => handleModification(event, setFieldValue, refetch, 'COMP_SUSS', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={6}>\n                  </Grid> \n\n\n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Monto a Abonar:&nbsp;&nbsp;&nbsp;  \n                              </Typography>\n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                        &nbsp;{formOP?.monto_a_pagar + \" \" + formOP?.moneda}\n                        </Typography>\n                  </Grid>\n\n\n\n\n                  <Grid item md={6}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Pago\n                      </Typography>\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Modo\n                        </Typography>              \n                  </Grid> \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Banco\n                        </Typography>\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Nro Cuenta\n                        </Typography>                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Comprobante\n                        </Typography>              \n                  </Grid>                 \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Fecha\n                        </Typography>                      \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Monto\n                        </Typography>                \n                  </Grid>  \n\n                    \n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n    \n                            onlyNumbers(event, setFieldValue, refetch, 'modo1', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo1 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid> \n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco1(newValue);\n                          setFieldValue('banco1', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco1', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco1 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro1(newValue);\n                          setFieldValue('nro1', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro1', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro1 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco1 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri1} defaultValue={formOP?.OPpago.descri1} name=\"descri1\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri1', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid> \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha1)? formOP?.OPpago.fecha1:null}\n                          name=\"fecha1\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha1', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n                   \n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto1\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto1}  defaultValue={formOP?.OPpago.monto1}  onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto1', idSociety.id, OPId, 1, 0)}\n                             inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                             /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                  \n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo2', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo2 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco2(newValue);\n                          setFieldValue('banco2', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco2', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco2 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro2(newValue);\n                          setFieldValue('nro2', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro2', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro2 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco2 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri2} defaultValue={formOP?.OPpago.descri2} name=\"descri2\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri2', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>                      \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha2)? formOP?.OPpago.fecha2:null}\n                          name=\"fecha2\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha2', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto2\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto2}  defaultValue={formOP?.OPpago.monto2}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto2', idSociety.id, OPId, 1, 0)}\n                            inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                            /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo3', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo3 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>  \n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco3(newValue);\n                          setFieldValue('banco3', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco3', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco3 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro3(newValue);\n                          setFieldValue('nro3', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro3', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro3 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco3 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri3} defaultValue={formOP?.OPpago.descri3} name=\"descri3\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri3', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>                    \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha3)? formOP?.OPpago.fecha3:null}\n                          name=\"fecha3\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha3', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto3\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto3}  defaultValue={formOP?.OPpago.monto3}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto3', idSociety.id, OPId, 1, 0)}\n                            inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                            /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo4', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo4 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco4(newValue);\n                          setFieldValue('banco4', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco4', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === (formOP?.OPpago.banco4 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro4(newValue);\n                          setFieldValue('nro4', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro4', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro4 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco4 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Descripción\" type=\"float\"  key={formOP?.OPpago.descri4}  defaultValue={formOP?.OPpago.descri4} name=\"descri4\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri4', idSociety.id, OPId, 1, 0)}\n                            InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>                      \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha4)? formOP?.OPpago.fecha4:null}\n                          name=\"fecha4\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha4', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto4\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto4}  defaultValue={formOP?.OPpago.monto4}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto4', idSociety.id, OPId, 1, 0)}\n                            inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                            /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={10}>\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"center\" color=\"textPrimary\" variant=\"h5\">\n                        \n                        {(Math.round(formOP?.OPpago.monto1 * 100)/100 + Math.round(formOP?.OPpago.monto2 * 100)/100 + Math.round(formOP?.OPpago.monto3 * 100)/100 + Math.round(formOP?.OPpago.monto4 * 100)/100)}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        </Typography>                 \n                  </Grid>\n              \n                </Grid>\n            \n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}\n\n\nfunction onlyNumbers(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flagPago, valorCombo) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,7}(\\.\\d{0,2})?$/;\n  console.log(regex.test(value.toString()));\n  if (regex.test(value.toString())) {\n\n    setFieldValue(typeOfData, value.toString());\n    handleModification(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flagPago, valorCombo);\n\n  }else{\n    return false;\n  }\n}\n\nfunction handleModification(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flag, valorCombo) {\n\n  \n  let val = null;\n \n  if(flag === 2){ // si es una fecha\n    \n    val = yearMonthDayString(event) + \" 03:00:00\";\n  }else{  \n    event.preventDefault();\n    const { value } = event.target;\n    setFieldValue(typeOfData, value.toString());\n\n    val = value;\n    if(typeOfData==='estadoOP'){\n      val = valorCombo;\n    }\n    if(typeOfData==='banco1' || typeOfData==='banco2' || typeOfData==='banco3' || typeOfData==='banco4'){\n      val = valorCombo;\n    }\n    if(typeOfData==='nro1' || typeOfData==='nro2' || typeOfData==='nro3' || typeOfData==='nro4'){\n      val = valorCombo;\n    }\n    if(typeOfData==='modo1' || typeOfData==='modo2' || typeOfData==='modo3'  || typeOfData==='modo4'){\n      val = valorCombo;\n    }\n  }\n\n  let newData = {\n        id: OPId,\n        [typeOfData]: val,\n      };\n  if(flag > 0){\n        newData.flagPago = 1;\n  }    \n    \n  postMethod(`op/modificar/${idSociety}`, newData);\n  setTimeout(() => {\n    refetch();\n    console.log(\"refetch\");\n  }, 2000)\n\n}\n\nfunction confirmarOP(event, setIsConfirmOP, typeOfData, idSociety, OPId, flagPago, valor) {\n  event.preventDefault();\n\n  setIsConfirmOP(valor);\n  let newData = {\n        id: OPId,\n        [typeOfData]: valor,\n      };\n  if(flagPago===1){\n        newData.flagPago = 1;\n  }    \n    \n  postMethod(`op/modificar/${idSociety}`, newData);\n\n}\n\n","import { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Box, Button } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getMethod, postMethod } from 'src/utils/api';\n\n// const columns = [\nconst columns = (puedeEditar, verEliminar) => [\n  {\n    field: 'empresa',\n    headerName: 'Proveedor',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'detalle',\n    headerName: 'Detalle',\n    width: 175,\n    editable: puedeEditar,\n    headerAlign: 'center',\n  },\n  {\n    field: 'numero',\n    headerName: 'Nro Factura',\n    width: 185,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'txtOC',\n    headerName: 'Nro OC',\n    width: 130,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'montoTotal',\n    headerName: 'Importe',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n\n  {\n    field: 'link2',\n    headerName: '',\n    width: 20,\n    editable: false,\n    headerAlign: 'center',\n    renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >ver</a>)\n  },\n  {\n    field: 'deleteIcon',\n    headerName: '',\n    hide: !verEliminar,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n\n];\n\nexport function GrillaDetalleOP({ idSociety, OPId, loggedUser, selectedFacturaData, refetch }) {\n  \n  const queryClient = useQueryClient();\n\n  var puedeEditar = true;\n  const accesoOP = loggedUser?.['rol.op'];\n  const blue = -1; // trae todas las de la OP\n  if( accesoOP ==='vista'){puedeEditar =false}\n\n  var verEliminar = true;\n  if(loggedUser?.['rol.op'] ==='parcial' || loggedUser?.['rol.op'] ==='vista'){verEliminar =false}\n\n  const {\n    data: facturas,    \n    isLoading,\n    error,\n  } = useQuery(['facturas', idSociety, selectedFacturaData], () =>\n    getMethod(`factura/listar/${idSociety?.id}/opid/${OPId}/${blue}`)\n  );\n\n  const { mutate: deleteProduct } = useMutation(\n    async id =>\n      await postMethod(`factura/modificar/${idSociety?.id}`, {\n        //libera la factura con OPId= null\n        id: id,\n        OPId: null,\n      }),\n    {\n      \n      onSuccess: async ()=> {\n        if (idSociety.id > 0) {\n            await queryClient.refetchQueries(['facturas', idSociety, selectedFacturaData])\n        }\n        refetch()\n        \n      }\n    }\n  );\n\n\n // await queryClient.refetchQueries(['facturas', idSociety, selectedFacturaData]), \n\n\n  function handleCellModification(e) {\n    \n    let newData = {\n      id: e.id,\n     [e.field]: e.value,\n    };    \n    postMethod(`factura/modificar/${idSociety?.id}`, newData);\n    \n  }\n\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        \n        \n        rows={facturas.map(el => ({\n          id: el.id,\n          empresa:(el.empresas[0]?el.empresas[0].razonSocial:''),\n          confirmada:(el.OPs[0]?el.OPs[0].confirmada:0),\n          numero: el.numero,\n          link: el.link,\n          link2: el.link,\n          montoTotal: el.montoTotal,\n          moneda: el.moneda,\n          detalle: el.detalle,\n          txtOC: el.txtOC,\n          fechaIngreso: el.fechaIngreso,\n          fechaVTO: el.fechaVTO,  \n          onDelete: () => deleteProduct(el.id),\n        }))}\n\n        columns={columns(puedeEditar, verEliminar)}\n        isCellEditable={(params) => (!params.row.confirmada || accesoOP ==='total')}\n        disableSelectionOnClick           \n        autoHeight   \n        onCellEditCommit={handleCellModification}\n     \n      />\n    </div>\n  );\n}\n\n\n\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}>\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React, { useRef, useState } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { Container, Box, Typography, Grid, Button, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { PDFDownloadLink, PDFViewer, pdf } from \"@react-pdf/renderer\";\nimport { toast } from 'react-toastify';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\nimport { AgregarFactura } from 'src/components/detalleOP/AgregarFactura';\nimport { FormDetalleOP } from 'src/components/detalleOP/FormDetalleOP';\nimport { GrillaDetalleOP } from 'src/components/detalleOP/GrillaDetalleOP';\nimport { mostrarFechaMesTXT } from 'src/utils/utils';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function DetalleOP({ idSociety, loggedUser }) {\n\n  const [verPDF, setVerPDF] = React.useState(false);\n  const { idOP, fecha, empresaId, numero, fideicomiso, estadoOP, confirmada, blue } = useParams();\n\n  const id = idSociety.id;\n  const fileName = \"OP_\" + fideicomiso + \"_\" + numero + \".pdf\";\n  const buttonAdmRef = useRef();  \n  \n\n  const{\n      data: formOP,\n      isLoading,\n      error,\n      refetch\n    } = useQuery(['formOP', idSociety.id], () =>\n    getMethod(`op/mostrarConFacturas/${idSociety.id}/${idOP}`)\n\n  );\n\n  \n   //guarda pdf en server\n   const getPdfBlob = async () =>   {\n\n    let blobPdf = await pdf(NewDocument()).toBlob();\n    let formData = new FormData();\n    formData.append('logo', blobPdf);\n    formData.append('id', idOP);\n    formData.append('fideicomiso', fideicomiso);\n    formData.append('numero', numero);    \n    postMethod(`op/modificar/${idSociety.id}`, formData);\n    \n  }\n\n  const guardar_en_server = () => {\n\n    setTimeout(() => {\n      getPdfBlob();\n    }, 300);\n  }\n\n  function facturasCargadas(fa){\n      if(fa){return { item: fa};}else{return null}\n  }\n\n  function cargadas(obj){\n    if(obj){return obj;}else{return null}\n  }\n\n  // es el reporte .pdf\n  const NewDocument = () => {\n    return (\n      <RepOp dataOP={cargadas(formOP?.op)} dataFacturas={facturasCargadas(formOP?.item)} apiServerUrl={apiServerUrl} idSociedad={id} />\n    )\n  }\n\n\n\n  \n  const queryClient = useQueryClient();\n\n  const { mutate: authFilaObra } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: 'obra',\n        creador: loggedUser.id\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['formOP', idSociety]),\n    }\n  );\n\n  const { mutate: authFilaAdm } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: 'adm',\n        creador: loggedUser.id\n\n      }),\n      \n    {\n      onSuccess: async () =>        \n        await queryClient.refetchQueries(['formOP', idSociety]),\n    }\n  );\n\n\n\n  /* ************************* */\n  var verAdm = verAuthBoton(\"adm\", formOP, \"Autorizar en Obra\", loggedUser?.[\"rol.descripcion\"]);\n  const [verBoxAdm, setVerBoxAdm] = useState(verAdm);  \n\n  var verObra = verAuthBoton(\"obra\", formOP, \"Autorizar en Obra\", loggedUser?.[\"rol.descripcion\"]);\n  const [verBoxObra, setVerBoxObra] = useState(verObra);\n\n  let verAgregar = (loggedUser?.['rol.op'] ==='vista'); // si es vista listo no la ve\n  if(!verAgregar){\n      let conf = formOP?(formOP?.confirmada===1):false;\n      if(conf){// confirmada y no es vista\n              if(loggedUser?.['rol.op'] ==='total'){  // si es parcial\n                    verAgregar = false;\n              }else{\n                    verAgregar = true;\n              }\n      }\n  }\n\n  return ( \n      \n    \n    <div id=\"MENU\" style={{ minHeight: \"100vh\" }}>\n      <nav\n      style={{\n        display: \"flex\",\n        borderBottom: \"1px solid black\",\n        paddingBottom: \"5px\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      \n   \n      <Box  mt={2} display={verBoxObra} sx={{ pt: 1 }}>\n        <Button\n        \n        onClick={() => {\n          toast(({ closeToast }) => (\n            <Box>\n              <Button\n                sx={{ p: 1, m: 1 }}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={closeToast}\n              >\n                Cancelar\n              </Button>\n              <Button\n                sx={{ p: 1, m: 1 }}\n                variant=\"contained\"\n                color=\"secondary\"\n                size=\"small\"\n                onClick={() => {\n                  setVerBoxObra(\"none\")\n                  authFilaObra(idOP)\n                  closeToast();\n                }}\n              >\n                Autorizar\n              </Button>\n            </Box>\n          ));\n        }}\n      >\n        Autorizar en Obra\n        </Button>\n      </Box>\n      <Box  mt={2} display={verBoxAdm} sx={{ pt: 1 }}>\n        <Button\n          ref={buttonAdmRef}\n          /*variant=\"info\"*/\n          \n          onClick={() => {\n            toast(({ closeToast }) => (\n              <Box>\n                <Button\n                  sx={{ p: 1, m: 1 }}\n                  \n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={closeToast}\n                >\n                  Cancelar\n                </Button>\n                <Button\n                  sx={{ p: 1, m: 1 }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={() => {\n                    setVerBoxAdm(\"none\")\n                    authFilaAdm(idOP)\n                    closeToast();\n                  }}\n                >\n                  Autorizar\n                </Button>\n              </Box>\n            ));\n          }}\n        >        \n          Autorizar ADM\n        </Button>      \n      </Box>\n\n      <Box mt={2} sx={{ pt: 1 }}>\n        <Button\n          /*variant=\"info\"*/\n          onClick={() => {\n            setVerPDF(!verPDF);\n          }}\n        >\n          {verPDF ? \"Ocultar PDF\" : \"Ver PDF\"}\n        </Button>\n\n        <PDFDownloadLink\n          document={<RepOp dataOP={cargadas(formOP?.op)} dataFacturas={facturasCargadas(formOP?.item)} apiServerUrl={apiServerUrl} idSociedad={id} />}\n          fileName={fileName}\n        >\n          <Button variant=\"info\" onClick={guardar_en_server} >Descargar</Button>\n        </PDFDownloadLink>\n\n   \n      </Box>\n  \n\n\n    </nav>     \n\n      <Helmet>\n          <title>\n          op:{numero.replace(\"OP_\",\"\")} | {idSociety?.nombre}\n          </title>\n      </Helmet>  \n      <>\n                  \n          {verPDF ? (\n            <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\n              <RepOp dataOP={cargadas(formOP?.op)} dataFacturas={facturasCargadas(formOP?.item)} apiServerUrl={apiServerUrl} idSociedad={id} />\n            </PDFViewer>\n          ) : \n     \n          <Box\n                sx={{\n                  backgroundColor: 'background.default',\n                  minHeight: '100%',\n                  py: 3,\n                }}\n              >\n            <Container >\n\n              <Box sx={{ pt: 3 }}>\n                <Grid container spacing={{ xs: 0.5, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }} >\n                                \n                      <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                              Solicitud de Pago:\n                        </Typography>\n                      </Grid>\n\n                      <Grid item md={5}>\n\n                        <Hidden  smUp={( !(parseInt(blue)===1))} >\n                          <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                                {numero.replace(\"OP_\",\"\")} (Blue) &nbsp;&nbsp; {fideicomiso}\n                          </Typography>\n                        </Hidden>\n                        <Hidden  smUp={( !(parseInt(blue)===0))} >\n                          <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                                {numero.replace(\"OP_\",\"\")}&nbsp;&nbsp;&nbsp;&nbsp; {fideicomiso}\n                          </Typography>\n                        </Hidden>\n\n                      </Grid>\n\n                      <Grid item md={5}>\n                            <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                              {mostrarFechaMesTXT(fecha)}\n                            </Typography>\n                      </Grid>             \n\n                </Grid>\n              </Box>\n              <Hidden  smUp={( verAgregar)} >\n                <Box sx={{ pt: 3 }}>\n                \n                  <AgregarFactura\n                    OPId={idOP}\n                    fecha={fecha}\n                    empresaId={empresaId}\n                    idSociety={idSociety}\n                    refetch={refetch}\n                    loggedUser={loggedUser}\n                  />\n                \n                </Box>\n              </Hidden> \n              <Box  sx={{ pt: 3 }}>\n                <GrillaDetalleOP\n                  OPId={idOP}\n                  fecha={fecha}\n                  empresaId={empresaId}\n                  idSociety={idSociety}\n                  refetch={refetch}\n                  loggedUser={loggedUser}\n                />\n              </Box>\n\n              <Box  sx={{ pt: 3 }}>\n                <FormDetalleOP\n                  OPId={idOP}\n                  estadoOP={estadoOP}\n                  confirmada={confirmada}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n\n                  formOP={formOP?.op}\n                  isLoading={isLoading}\n                  error={error}\n                  refetch={refetch}\n\n                />\n              </Box>\n         \n            </Container>\n            \n          </Box>\n          \n          }\n        </>\n   \n    </div>\n    \n  );  \n}\n\n//</SumFacturaContext.Provider>\n\nfunction verAuthBoton(tipo, formOP, label, rol_usuario){\n  // rol adm, obra, manager\n  let rta = \"\";\n\n  if(tipo === \"manager\"){rta = label} \n  if(tipo === rol_usuario){rta = label} \n\n  if(tipo===\"adm\"){\n    if(formOP?.auth_adm){\n      if(formOP.auth_adm[0]){\n        if(formOP.auth_adm[0].usuarios[0].user !== undefined){\n          rta = \"\";\n        }\n      }     \n    }\n  }else{\n    if(formOP?.auth_obra){\n      if(formOP.auth_obra[0]){\n        if(formOP.auth_obra[0].usuarios[0].user !== undefined){\n          rta = \"\";\n        }\n      }     \n    }\n  }  \n\n  if(rta ===\"\"){\n    return \"none\";\n  }else{  \n    return \"\";\n  }  \n\n}\n\n","import { useState } from 'react';\nimport { useQuery} from 'react-query';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { isNumberUsedDig } from 'src/utils/utils';\nimport { IconButton, Collapse, Box, FormControlLabel, TextField, Button, Hidden, Checkbox, Autocomplete, Alert } from '@mui/material';\nimport { getMethod, postMethod } from 'src/utils/api';\nimport CloseIcon from '@mui/icons-material/Close';\nimport React from 'react';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { yearMonthDayNum } from 'src/utils/utils'; \n\nexport function FormFactura({ idSociety, loggedUser}) {\n  //const { Prompt } = usePrompt();\n  const { setIsPromptOpen, Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  // const [defaultFact, setDefaultFact] = useState(2021112101);\n\n  // const [fblue, setFBlue] = useState(false);\n  // var blue = 0;\n  var verCheckBlue = false;\n  if(loggedUser?.['rol.factura'] ==='total'){/*blue= -1;*/ verCheckBlue = true;}\n\n\n  const { data: fideicomisos } = useQuery(\n    ['fideicomisos'],\n    () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n  const { data: proveedores } = useQuery(\n    ['proveedores'],\n    () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n  const { mutate: addFactura } = useMutation(\n    newFactura => postMethod(`factura/agregar/${idSociety.id}`, newFactura),\n    {\n      onMutate: async newFactura => {\n        newFactura.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['factura', idSociety]);\n        const prevData = await queryClient.getQueryData(['factura', idSociety]);\n        const newData = [...prevData, { ...newFactura, id: new Date().getTime() }];\n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n\n  const [fideInForm, setFideInForm] = useState(null);\n  const [typeInForm, setTypeInForm] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [chkblue, setChkblue] = useState(true);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          numero: '',\n          montoTotal: '',\n          fechaIngreso: new Date(),\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          let existe = await isNumberUsedDig('factura', idSociety.id, values.empresa.id , values.numero)\n          if (existe || values.numero ==='') {\n            setIsPromptOpen(true);\n          }else{\n            \n            addFactura({\n              numero: values.numero,\n              montoTotal: values.montoTotal,\n              fechaIngreso: values.fechaIngreso,\n              empresaId: values.empresa.id,\n              fideicomisoId: values.fideicomiso.id,\n              moneda: 'ARS',\n              blue: values.blue==='on'? 1:0,\n              creador: loggedUser.id\n            });            \n            //resetForm();\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Fideicomiso'\n              title=\"Seleccione un fideicomiso.\"\n              disablePortal\n              required\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setFideInForm(newValue);\n                setFieldValue('fideicomiso', newValue);\n              }}\n              value={fideInForm}\n              getOptionLabel={option => option.nombre}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={(fideicomisos? fideicomisos:[])}\n              renderInput={params => <TextField {...params} label='Fideicomiso' />}\n            />\n\n             <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Razon Social'\n            title=\"Seleccione un proveedor.\"\n            disablePortal\n            required\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setTypeInForm(newValue);\n              setFieldValue('empresa', newValue);\n            }}\n            value={typeInForm}\n            getOptionLabel={option => option?.razonSocial}\n            isOptionEqualToValue={(option, value) => option?.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField {...params} label='Razon Social' />}\n          />\n\n            <Field\n              as={TextField}\n              title=\"Cargar número completo de la factura.\"\n              label='Numero'\n              type='float'\n              required     \n              maxLength={11}         \n              size=\"small\"\n              sx={{ width: '20ch' }}\n              name='numero'\n              onChange={event => onlyNumbers(event, setFieldValue, 'numero')}\n            /> \n\n          <Field\n            as={TextField}\n            label='Monto'\n            title=\"Monto total, solo numeros.\"\n            required\n            maxLength={9}\n            type='float'\n            size=\"small\"\n            sx={{ width: '20ch' }}\n            name='montoTotal'\n            onChange={event => onlyNumbers(event, setFieldValue, 'montoTotal')}\n          />\n\n          &nbsp;&nbsp;\n          <Hidden  smUp={( !verCheckBlue)} >        \n          <FormControlLabel \n            control={ <Checkbox  id={'blue'}  name={'blue'}             \n            onChange={(event) => onlyCheck(event, setFieldValue, 'blue', chkblue, setChkblue)}\n            /> }   label=\"Blue\"  />\n          </Hidden>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n\n            <Box sx={{ width: '100%' }}>\n            <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>         \n          </Box>\n\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe ese número de factura para esa razon social.\"\n        ok\n      />\n    </>\n  );\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\nfunction onlyCheck(event, setFieldValue, typeOfData, chkblue, setChkblue, setFBlue) {\n  event.preventDefault();\n  // const { value } = event.target;\n  setChkblue(!chkblue);\n  if(chkblue){ \n    let f = new Date();\n    let n = \"\" + yearMonthDayNum(f) + \"01\";\n    setFieldValue(typeOfData, 'on');\n    setFieldValue('numero', parseInt(n));\n    //setFBlue(true);\n\n  }else{\n\n    setFieldValue(typeOfData, 'off');\n    setFieldValue('numero', '');\n    //setFBlue(false);\n\n  }\n  \n}\n\n\n\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Avatar } from '@mui/material';\nimport { Button } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\nimport { useNavigate } from 'react-router-dom';\n\nconst columns = (verColumnBlue, acceso, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'blue',\n    headerName: 'Blue',\n    hide: !verColumnBlue,\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: ({ value }) => value===0?'' :<Avatar sx={{ bgcolor: '#3944BC' }} >B</Avatar>,\n  },\n\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'left',\n    /*renderCell: IrDetalleOP_1,*/\n  }, \n  {\n    field: 'empresa',\n    headerName: 'Razon Social',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'numero',\n    headerName: 'Número',\n    width: 155,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'montoTotal',\n    headerName: 'Monto',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n\n  {\n    field: 'moneda',\n    headerName: '',\n    width: 50,\n    editable: acceso,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'link',\n    headerName: 'Link',\n    width: 110,\n    editable: acceso,\n    headerAlign: 'center',\n    /*renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >{ link }</a>)*/\n  },\n  {\n    field: 'link2',\n    headerName: '',\n    width: 20,\n    editable: false,\n    headerAlign: 'center',\n    renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >ver</a>)\n  },\n\n  {\n    field: 'fechaIngreso',\n    headerName: 'Fecha',\n    width: 155,\n    type: 'date',\n    editable: acceso,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: fFechaIngreso,\n    \n  },\n  {\n    field: 'diasVTO',\n    headerName: 'Días VTO',\n    width: 140,\n    editable: acceso,\n    type: 'singleSelect',\n    valueOptions: [0,1,2,3,4,5,6,7,10,14,15,20,21,28,30,40,50,60,70,80,90,100,120,150]\n  },\n  {\n    field: 'id',\n    headerName: 'VTO',\n    width: 155,\n    type: 'date',\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: fFechaVTO,\n    \n  },\n  {\n    field: 'OPnumero',\n    headerName: 'OP',\n    width: 100,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'estadoOP',\n    headerName: 'Estado OP',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    hide: !acceso,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId, OPnumero} }) => (OPnumero>0? '':\n      <DeleteIcon\n        onClick={e => {\n\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\n// por ahora se inicializa en el login\nvar estados = JSON.parse(localStorage.getItem(\"estados\"));\n\nexport function GrillaFactura({ idSociety, loggedUser }) {\n  \n  const navigate = useNavigate();\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  \n  var blue = 0;\n  var verColumnBlue = false;\n  if(loggedUser?.['rol.factura'] ==='total'){blue= -1; verColumnBlue = true;}\n  var acceso = true;\n  if(loggedUser?.['rol.factura'] ==='vista'){acceso =false}\n\n\n  const {\n    data: facturaInformation,\n    isLoading,\n    error,\n  } = useQuery(['factura', idSociety], () => getMethod(`factura/listar/${idSociety.id}/todas/nada/${blue}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idFactura => await deleteMethod(`factura/eliminar/${idSociety.id}`, { id: idFactura }),\n    {\n      onMutate: async idFactura => {\n        await queryClient.cancelQueries(['factura', idSociety]);\n        const prevData = queryClient.getQueryData(['factura', idSociety]);\n        const newData = prevData.filter(factura => factura.id !== idFactura);\n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idFactura, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    \n    async ({ field, id, value }) =>\n      ( \n     \n\n      await postMethod(`factura/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      })\n      ),\n      \n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['factura', idSociety]);\n        const prevData = queryClient.getQueryData(['factura', idSociety]);\n\n        const newData = [\n          ...prevData.filter(factura => factura.id !== id),\n          { ...prevData.find(factura => factura.id === id), [field]: value },\n        ];  \n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async el =>    \n      navigate(`./${el?.OPs[0]?.id}/${el?.OPs[0]?.createdAt}/${el.empresaId}/${el?.OPs[0]?.numero}/${el.fideicomisos[0]?.nombre}/${el?.OPs[0]?.estadoOP}/${el?.OPs[0]?.confirmada}/${el?.OPs[0]?.blue}`)\n\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={facturaInformation.map(factura => ({\n            id: factura.id,\n            fideicomiso: (factura?.fideicomisos? factura?.fideicomisos[0]?.nombre:''),\n            empresaId: factura.empresaId,\n            empresa:(factura?.empresas? factura?.empresas[0]?.razonSocial:''),\n            blue: factura.blue,\n            numero: factura.numero,\n            link: factura.link,\n            link2: factura.link,\n            montoTotal: factura.montoTotal,\n            moneda: factura.moneda,\n            fechaIngreso: factura.fechaIngreso,\n            diasVTO: factura.diasVTO, \n            fechaVTO: factura.fechaVTO,  \n            OPnumero : (factura?.OPs? factura?.OPs[0]?.numero:''),\n            estadoOP:(factura?.OPs? estados[factura?.OPs[0]?.estado]?.descripcion:''),\n            deleteId: factura.id,\n            onIrDetalle: () => irDetalle(factura),  \n\n          }))}OPs\n          onCellEditCommit={modifyData}\n          columns={columns(verColumnBlue, acceso, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction fFechaVTO(params) {\n  let f = new Date(params.row.fechaIngreso)\n  let d =0;\n  if(params.row.diasVTO){ \n    if(params.row.diasVTO > 0 ){\n       d =params.row.diasVTO;\n    }\n  }\n  f.setDate(f.getDate() + d);\n  let fechaVTO = mostrarFecha(f);\n\n\n  return fechaVTO;\n}\n\nfunction fFechaIngreso(params) {\n  let fechaIngreso = null; \n  if(params.row.fechaIngreso){\n    fechaIngreso = mostrarFecha(params.row.fechaIngreso);\n  }else{\n    fechaIngreso = '';\n  }\n\n  return fechaIngreso;\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const OPnumero = params.row.OPnumero;\n  return <Button onClick={sendRow} >{OPnumero}  </Button>;\n} ","import { Container, Box, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormFactura } from 'src/components/factura/FormFactura';\nimport { GrillaFactura } from 'src/components/factura/GrillaFactura';\n\nexport function Factura({ idSociety , loggedUser}) {\n\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Facturas | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n          <Box sx={{ pt: 3 }} >\n            <FormFactura idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          </Hidden> \n          <Box sx={{ pt: 3 }}>\n            <GrillaFactura idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { PDFDownloadLink, PDFViewer, pdf } from \"@react-pdf/renderer\";\nimport { Button } from '@mui/material';\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\nimport { postMethod } from 'src/utils/api';\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function OT({ idSociety }) {\n  const id = idSociety.id;\n\n  const dataFacturas ={ \n      item: [\n      {\n          id: 31,\n          OPId: 35,\n          numero: \"333\",\n          fechaIngreso: \"2021-12-17T00:00:00.000Z\",\n          fechaVTO: null,\n          path: null,\n          link: null,\n          empresaId: 1,\n          montoTotal: \"47000\",\n          moneda: \"ARS\",\n          detalle: null,\n          txtOC: null,\n          estadoFactura: null,\n          fideicomisoId: null,\n          rubroId: null,\n          subRubroId: null,\n          usuarioId: 1,\n          empresas: [\n              {\n                  razonSocial: \"Abelson s.a.\"\n              }\n          ]\n      },\n      {\n          id: 19,\n          OPId: 35,\n          numero: \"1919\",\n          fechaIngreso: \"2021-11-04T00:00:00.000Z\",\n          fechaVTO: null,\n          path: null,\n          link: \"aaaa\",\n          empresaId: 1,\n          montoTotal: \"47000\",\n          moneda: \"ARS\",\n          detalle: null,\n          txtOC: null,\n          estadoFactura: null,\n          fideicomisoId: 1,\n          rubroId: null,\n          subRubroId: null,\n          usuarioId: 1,\n          empresas: [\n              {\n                  razonSocial: \"Abelson s.a.\"\n              }\n          ]\n      }\n  ]};\n\n  const dataOP = {\n    id: 35,\n    numero: 56,\n    empresaId: 1,\n    monto: \"94000\",\n    monto_a_pagar: \"93445\",\n    RET_SUSS: \"222\",\n    RET_GAN: \"333\",\n    RET_IVA: \"0\",\n    estadoRET: 2,\n    fideicomisoId: 1,\n    certificadoId: null,\n    estado: 1,\n    estadoOP: 2,\n    fondos: 2,\n    archivada: 0,\n    descripcion: \"wwww\",\n    authADM: 33,\n    authOBRA: 31,\n    createdAt: \"01/03/2021\",\n    auth_obra: [\n      {\n          id: 31,\n          usuarios: [\n              {\n                  user: \"martin\",\n                  id: 1\n              }\n          ]\n      }\n    ],\n    auth_adm: [\n      {\n          \"id\": 33,\n          \"usuarios\": [\n              {\n                  \"user\": \"martin\",\n                  \"id\": 1\n              }\n          ]\n      }\n    ],\n    empresas: [\n      {\n          razonSocial: \"Abelson s.a.\",\n          CUIT: \"30652000076\",\n          mail: \"test@verelmail.com\",\n          CBU: \"0070088720000002642004\",\n          banco: \"Galicia\",\n          nroCuenta: \"2642-0088-0\"\n      }\n    ],\n    \"OPpago\": {\n        id: 3,\n        OPId: 35,\n        banco1: \"bna\",\n        nro1: \"0070088720000002642004\",\n        descri1: \"123\",\n        fecha1: \"01/06/2021\",\n        monto1: \"234.00\",\n        banco2: \"bna\",\n        nro2: \"0070088720000002642004\",\n        descri2: \"asd\",\n        fecha2: \"01/06/2021\",\n        monto2: \"444.00\",\n        banco3: \"\",\n        nro3: \"\",\n        descri3: \"\",\n        fecha3: \"\",\n        monto3: \"0.00\",\n        banco4: null,\n        nro4: null,\n        descri4: null,\n        fecha4: null,\n        monto4: null,\n        usuarioId: 1,\n        sociedadId: 1,\n        createdAt: \"2021-12-05T04:32:09.000Z\",\n        updatedAt: \"2021-12-18T01:32:01.000Z\"\n    },\n    fideicomisos: [\n      {\n          nombre: \"Barlovento\",\n          logo: \"logo_fide_1.png\",\n          color: \"green\",\n          color2: \"#D0F0C0\",\n      }\n    ],\n\n    items: [\n      {\n        sno: 1,\n        desc: \"ad sunt culpa occaecat qui\",\n        qty: 5,\n        rate: 405.89,\n      },\n      {\n        sno: 2,\n        desc: \"cillum quis sunt qui aute\",\n        qty: 5,\n        rate: 373.11,\n      },\n      {\n        sno: 3,\n        desc: \"ea commodo labore culpa irure\",\n        qty: 5,\n        rate: 458.61,\n      },\n      {\n        sno: 4,\n        desc: \"nisi consequat et adipisicing dolor\",\n        qty: 10,\n        rate: 725.24,\n      },\n      {\n        sno: 5,\n        desc: \"proident cillum anim elit esse\",\n        qty: 4,\n        rate: 141.02,\n      },\n    ],\n  };\n\n  const [verWeb, setVerWeb] = React.useState(false);\n  const [verPDF, setVerPDF] = React.useState(false);\n\n  const NewDocument = () => {\n    return (\n      <RepOp dataOP={dataOP} />\n    )\n  }\n\n //guarda en server\n  const getPdfBlob = async () =>   {\n\n      let blobPdf = await pdf(NewDocument()).toBlob();\n      let formData = new FormData();\n      formData.append('logo', blobPdf);\n      formData.append('id', 15);    \n      postMethod('op/modificar/1', formData);\n      \n  }\n\n  const guardar_en_server = () => {\n\n    setTimeout(() => {\n      getPdfBlob();\n    }, 300);\n  }\n\n  const Menu = () => (\n    <nav\n      style={{\n        display: \"flex\",\n        borderBottom: \"1px solid black\",\n        paddingBottom: \"5px\",\n        justifyContent: \"space-around\",\n      }}\n    >\n      <Button\n        variant=\"dark\"\n        onClick={() => {\n          setVerWeb(!verWeb);\n          setVerPDF(false);\n        }}\n      >\n        {verWeb ? \"Ocultar Web\" : \"Ver Web\"}\n      </Button>\n      <Button\n        variant=\"dark\"\n        onClick={() => {\n          setVerPDF(!verPDF);\n          setVerWeb(false);\n        }}\n      >\n        {verPDF ? \"Ocultar PDF\" : \"Ver PDF\"}\n      </Button>\n\n      <PDFDownloadLink\n        document={<RepOp dataOP={dataOP} />}\n        fileName=\"miReporte.pdf\"\n      >\n        <Button variant=\"info\" onClick={guardar_en_server} >Crear y Descargar</Button>\n      </PDFDownloadLink>\n\n\n    </nav>\n  );\n\n  return (\n    <div style={{ minHeight: \"100vh\" }}>\n      <Menu /> \n        <>          \n          {verPDF ? (\n            <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\n              <RepOp dataOP={dataOP} dataFacturas={dataFacturas} apiServerUrl={apiServerUrl} idSociedad={id} />\n            </PDFViewer>\n          ) : null}\n        </>\n   \n    </div>\n  );\n}\n\n\n","import { useState, createContext } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport dotenv from 'dotenv';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport GlobalStyles from 'src/components/auxiliares/GlobalStyles';\nimport theme from 'src/theme';\n\n// *** Generales *********************************\n\nimport DashboardLayout from 'src/components/auxiliares/DashboardLayout';\nimport MainLayout from 'src/components/auxiliares/MainLayout';\nimport { Login } from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport { useAuth } from 'src/utils/useAuth';\n\n// *** Auxiliares *********************************\nimport { Dolar } from 'src/pages/Dolar';\nimport { Cac } from 'src/pages/Cac';\nimport { Rubro } from 'src/pages/Rubro';\nimport { SubRubro } from 'src/pages/SubRubro';\nimport { Banco } from 'src/pages/Banco';\nimport { CuentaBanco } from 'src/pages/CuentaBanco';\n\n// *** Maestros *********************************\nimport { Usuarios } from 'src/pages/Usuarios';\nimport { Proveedores } from 'src/pages/Proveedores';\nimport { Persona } from 'src/pages/Persona';\nimport { Empresa } from 'src/pages/Empresa';\n\n// *** Fide *********************************\nimport { Fideicomiso } from 'src/pages/Fideicomiso';\nimport { DetalleFideicomiso } from 'src/pages/DetalleFideicomiso';\n\n// *** Contrato *********************************\n//import { Contratos } from 'src/pages/Contratos';\n//import { ContratoAlta } from 'src/pages/ContratoAlta';\n//import { Cobros } from 'src/pages/Cobros';\n//import { Cuotas } from 'src/pages/Cuotas';\n//import { DetalleContrato } from 'src/pages/DetalleContrato';\n//import { ContratoVista } from 'src/pages/ContratoVista';\n\n// *** Pagos *********************************\nimport { OP } from 'src/pages/OP';\nimport { AuthAdmOP } from 'src/pages/AuthAdmOP';\nimport { AuthObraOP } from 'src/pages/AuthObraOP';\nimport { DetalleOP } from 'src/pages/DetalleOP';\nimport { Factura } from 'src/pages/Factura';\n\n// *** Orden de Trabajo **********************\nimport { OT } from 'src/pages/OT';\n//import { DetalleOT } from 'src/pages/DetalleOT';\n//import { Certificado } from 'src/pages/Certificado';\n\nexport const SocietyContext = createContext({});\ndotenv.config();\n\nexport default function App() {\n  const { loggedUser, setLoggedUser } = useAuth();\n  const [idSociety, setIdSociety] = useState(() => {\n    const localStorageIdSociety = localStorage.getItem('idSociety');\n    return localStorageIdSociety ? JSON.parse(localStorageIdSociety) : null;\n  });\n\n  return (\n\n    <SocietyContext.Provider value={idSociety}>\n\n    \n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Routes>\n        {loggedUser ? (\n          <>\n            \n            <Route path=\"/\" element={<Navigate to={`${idSociety?.nombre}`} />} />\n            <Route\n              path=\":societyName\"\n              element={\n                <DashboardLayout\n                \n                  setLoggedUser={setLoggedUser}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n                />\n              }\n            >\n              <Route path=\"dolar\" element={<Dolar idSociety={idSociety} loggedUser={loggedUser}  />} />\n              <Route path=\"cac\" element={<Cac idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"OT\" element={<OT idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"empresa\" element={<Empresa idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"persona\" element={<Persona idSociety={idSociety}  loggedUser={loggedUser}  />} />\n\n              <Route path=\"factura\">\n                <Route path=\"\" element={<Factura idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"OP\">\n                <Route path=\"\" element={<OP idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"AuthAdmOP\">\n                <Route path=\"\" element={<AuthAdmOP idSociety={idSociety}  loggedUser={loggedUser} />}  />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"AuthObraOP\">\n                <Route path=\"\" element={<AuthObraOP idSociety={idSociety}  loggedUser={loggedUser} />}  />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n\n              \n              <Route path=\"proveedores\" element={<Proveedores idSociety={idSociety}   loggedUser={loggedUser} />} />\n              <Route path=\"usuarios\" element={<Usuarios idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              \n              <Route path=\"rubro\"> \n                <Route path=\"\" element={<Rubro idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idRubro/:rubro\"\n                  element={<SubRubro idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"banco\"> \n                <Route path=\"\" element={<Banco idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idBanco/:banco\"\n                  element={<CuentaBanco idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              \n              <Route path=\"fideicomiso\">\n                <Route path=\"\" element={<Fideicomiso idSociety={idSociety}  loggedUser={loggedUser}  />} />\n                <Route\n                  path=\":nombreFideicomiso\"\n                  element={<DetalleFideicomiso idSociety={idSociety}   loggedUser={loggedUser}  />}\n                />\n              </Route>\n              <Route path=\"*\" element={<NotFound />} />\n            </Route>\n            \n          </>\n        ) : (\n          <MainLayout>\n            <Route\n              path=\":societyName/login\"\n              element={\n                <Login\n                  setLoggedUser={setLoggedUser}\n                  setIdSociety={setIdSociety}\n                />\n              }\n            />\n            <Route path=\":societyName\" element={<Navigate to=\"login\" />} />\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </MainLayout>\n        )}\n      </Routes>\n    </ThemeProvider>\n    </SocietyContext.Provider>\n    \n  )}\n","import { useEffect, useState } from 'react';\n\nexport function useAuth() {\n  const [loggedUser, setLoggedUser] = useState(() => {\n    const localStorageLoggedUserInfo = localStorage.getItem('loggedUserInfo');\n    return localStorageLoggedUserInfo ? JSON.parse(localStorageLoggedUserInfo) : null;\n  });\n  useEffect(() => {\n    localStorage.setItem('loggedUserInfo', JSON.stringify(loggedUser));\n  }, [loggedUser]);\n\n  return { loggedUser, setLoggedUser };\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  \n  <BrowserRouter>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}