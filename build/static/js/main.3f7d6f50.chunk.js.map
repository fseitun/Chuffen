{"version":3,"sources":["components/auxiliares/GlobalStyles.js","theme/shadows.js","theme/typography.js","theme/index.js","components/auxiliares/Logo.js","components/auxiliares/sideBarOptions.js","components/auxiliares/DashboardNavbar.js","components/auxiliares/NavItem.js","components/auxiliares/DashboardSidebar.js","components/auxiliares/DashboardLayout.js","components/auxiliares/MainNavbar.js","components/auxiliares/MainLayout.js","utils/api.js","pages/Login.js","pages/NotFound.js","utils/utils.js","utils/usePrompt.js","components/dolar/FormDolar.js","components/dolar/GrillaDolar.js","pages/Dolar.js","components/cac/FormCac.js","components/cac/GrillaCac.js","pages/Cac.js","components/rubro/FormRubro.js","components/rubro/GrillaRubro.js","pages/Rubro.js","components/rubro/FormSubRubro.js","components/rubro/GrillaSubRubro.js","pages/SubRubro.js","components/banco/FormBanco.js","components/banco/GrillaBanco.js","pages/Banco.js","components/banco/FormCuentaBanco.js","components/banco/GrillaCuentaBanco.js","pages/CuentaBanco.js","components/usuarios/FormUsuario.js","components/usuarios/GrillaUsuario.js","pages/Usuarios.js","components/proveedores/FormProveedor.js","components/proveedores/GrillaProveedor.js","pages/Proveedores.js","components/persona/ManipularPersona.js","components/persona/GrillaPersona.js","pages/Persona.js","components/empresa/ManipularEmpresa.js","components/empresa/GrillaEmpresa.js","pages/Empresa.js","components/fideicomiso/ManipularFideicomiso.js","components/fideicomiso/GrillaFideicomiso.js","pages/Fideicomiso.js","components/fideicomiso/DatosPrincipalesFideicomiso.js","components/detalleFideicomiso/ManipularDetalleFideicomiso.js","components/detalleFideicomiso/GrillaDetalleFideicomiso.js","pages/DetalleFideicomiso.js","components/OP/ManipularOP.js","components/OP/FiltroOP.js","components/reportes/orden_de_pago/tablaFacturas.js","components/reportes/orden_de_pago/tablaTEC.js","components/reportes/orden_de_pago/tablaADM.js","components/reportes/orden_de_pago/tablaPagos.js","components/reportes/orden_de_pago/tablaPie.js","components/reportes/orden_de_pago/orden_de_pago.js","components/OP/GrillaOP.js","pages/OP.js","components/OP/GrillaOpAuth.js","pages/AuthAdmOP.js","pages/AuthObraOP.js","components/detalleOP/AgregarFactura.js","components/detalleOP/FormDetalleOP.js","components/detalleOP/GrillaDetalleOP.js","pages/DetalleOP.js","components/factura/FormFactura.js","components/factura/FiltroFactura.js","components/factura/GrillaFactura.js","pages/Factura.js","components/OC/ManipularOC.js","components/OC/GrillaOC.js","pages/OC.js","App.js","utils/useAuth.js","index.js"],"names":["useStyles","makeStyles","createStyles","boxSizing","margin","padding","html","height","width","body","backgroundColor","a","textDecoration","GlobalStyles","array","obj","h1","fontWeight","fontSize","letterSpacing","h2","h3","h4","h5","h6","overline","theme","createTheme","palette","background","default","paper","colors","common","white","primary","contrastText","main","text","secondary","shadows","typography","Logo","idSociety","alt","src","process","logo","sideBarOptions","path","icon","CreditCard","title","acceso","ListAlt","Construction","LocalShipping","Apartment","MenuBook","TrendingUp","AttachMoney","People","DashboardNavbar","setisMobileNavOpen","setLoggedUser","loggedUser","user","avatar","navigate","useNavigate","pathname","useLocation","lastPartOfPath","split","length","logOut","nameOfPage","find","option","nombre","AppBar","elevation","Toolbar","to","style","marginLeft","Typography","align","color","variant","replace","Box","sx","flexGrow","IconButton","Avatar","component","Link","cursor","display","md","lg","onClick","Menu","ExitToApp","NavItem","href","Icon","rest","location","active","matchPath","end","ListItem","disableGutters","py","Button","RouterLink","justifyContent","textTransform","mr","size","DashboardSidebar","isMobileNavOpen","content","flexDirection","p","List","arrMenu","map","item","Drawer","xs","anchor","onClose","open","PaperProps","top","arr","forEach","indexOf","trim","undefined","push","splice","DashboardLayoutRoot","styled","overflow","DashboardLayoutWrapper","flex","paddingTop","breakpoints","up","paddingLeft","DashboardLayoutContainer","DashboardLayoutContent","DashboardLayout","useState","MainNavbar","props","MainLayoutRoot","MainLayoutWrapper","MainLayoutContainer","MainLayoutContent","MainLayout","apiServerUrl","getMethod","url","axios","get","data","postMethod","newData","post","deleteMethod","infoOfElementToDelete","delete","Login","setIdSociety","useContext","SocietyContext","societyName","useParams","localStorage","setItem","isAlertOpen","setIsAlertOpen","useEffect","societyStateObjectSetter","bancos","useQuery","id","JSON","stringify","cuentasbanco","descripcion","Helmet","onChangeClientState","nombreComercial","Container","maxWidth","enableReinitialize","initialValues","email","dominio","password","onSubmit","values","actions","userCheck","resetForm","handleSubmit","TextField","fullWidth","label","name","onBlur","handleBlur","onChange","handleChange","value","autoComplete","type","Alert","severity","disabled","isSubmitting","nameToId","societyData","nombreSociedad","removeItem","mail","pass","loggedUserInfo","NotFound","textAlign","marginTop","Qdigitos","isValidDate","d","f","Date","isNaN","getTime","mostrarFecha","fecha","toLocaleDateString","timeZone","mostrarFechaMesTXT","getDate","month","getFullYear","yearMonthDayString","getMonth","toString","padStart","isNumberUsedDig","endpoint","empresaId","numero","num","parseInt","slice","isDateUsed","date","usePrompt","isPromptOpen","setIsPromptOpen","Prompt","ok","action","message","Dialog","handleClose","DialogTitle","DialogActions","handleActionAndClose","autoFocus","FormDolar","queryClient","useQueryClient","useMutation","newDolar","onMutate","creador","invalidateQueries","getQueryData","prevData","setQueryData","onError","err","context","onSettled","addDolar","mutate","mep","BCRA","setSubmitting","setFieldValue","Picker","as","maxLength","event","onlyNumbers","typeOfData","preventDefault","target","test","field","form","LocalizationProvider","dateAdapter","AdapterDateFns","DesktopDatePicker","inputFormat","renderInput","params","required","columns","setRowIdToDelete","headerName","headerAlign","valueFormatter","preProcessEditCellProps","editable","Intl","NumberFormat","minimumFractionDigits","format","Number","renderCell","deleteId","row","Delete","e","GrillaDolar","rowIdToDelete","dolarInformation","isLoading","error","idDolar","cancelQueries","filter","dolar","eliminate","modifyData","rows","blue","onCellEditCommit","pageSize","disableSelectionOnClick","autoHeight","scrollbarSize","components","CustomToolbar","Dolar","minHeight","pt","FormCac","newCac","addCac","estimado","definitivo","year","GrillaCac","cacInformation","idCac","cac","Cac","FormRubro","newRubro","addRubro","rubro","GrillaRubro","rubroInformation","idRubro","onRowDoubleClick","compone","Rubro","FormSubRubro","newSubRubro","addSubRubro","subRubro","GrillaSubRubro","subrubroInformation","idSubRubro","subrubro","SubRubro","FormBanco","newBanco","addBanco","banco","IrDetalleOP_1","GrillaBanco","bancoInformation","idBanco","irDetalle","descripcionLarga","onIrDetalle","sendRow","Banco","FormCuentaBanco","newCuentaBanco","addCuentaBanco","cuentaBanco","GrillaCuentaBanco","cuentaBancoInformation","idCuentaBanco","cuentabanco","CuentaBanco","FormUsuario","newUsuario","addUsuario","Passformat","rol_descripcion","renderEditCell","ComboBox","roles","GrillaUsuario","usuarioInformation","idUsuario","usuario","rolId","rol","density","api","selectedRol","setSelectedRol","Autocomplete","newValue","setEditCellValue","commitCellChange","setCellMode","options","isOptionEqualToValue","op","val","getOptionLabel","Usuarios","FormProveedor","newProveedor","addProveedor","razonSocial","CUIT","rubros","subRubros","join","console","log","mostrarCUIT","ComboBoxSub","GrillaProveedor","proveedorInformation","idProveedor","proveedor","rubroID","rubroId","subrubroID","subrubroId","telefono","CBU","nroCuenta","enviar_OP_auto","selectedRubro","setSelectedRubro","subR","selectedsubRubro","setSelectedsubRubro","Proveedores","Hidden","smUp","ManipularPersona","onSuccess","refetchQueries","checkName","Boolean","deleteRow","onDelete","toast","closeToast","m","GrillaPersona","el","onEditCellChange","Persona","ManipularEmpresa","checkCuit","cuit","GrillaEmpresa","Empresa","ManipularFideicomiso","fechaInicio","fechaFin","checkIfNameExists","setColor","passedData","colorElegido","ColorPicker","originalColor","css","colorOptions","GrillaFideicomiso","fideicomisoInformation","idFideicomiso","fideicomiso","cloud","previousStateColor","renderOption","c","Fideicomiso","createFilterOptions","DatosPrincipalesFideicomiso","selectedFideicomisoData","managerId","setManagerId","personaId","isDialogOpen","setIsDialogOpen","contactInfo","directionInfo","localizacionId","peopleInfo","setManagerInFideicomiso","addNewPerson","contacto","direccion","nameFormatter","AlertDialog","rowHeight","headerHeight","hideFooter","onCellDoubleClick","transform","DialogContent","Select","closeDialog","newName","inputValue","filterOptions","filtered","isExisting","some","selectOnFocus","clearOnBlur","handleHomeEndKeys","freeSolo","ManipularDetalleFideicomiso","typesOfProducts","initialData","codigo","addProduct","typeInForm","setTypeInForm","code","description","fideicomisoId","tipo","GrillaDetalleFideicomiso","products","deleteProduct","metros","precioULT","sortModel","sort","DetalleFideicomiso","nombreFideicomiso","ManipularOP","fideicomisos","proveedores","ddfacturas","ddfacturasBlue","verCheckBlue","chkblue","setChkblue","addOP","fideInForm","setFideInForm","rsInForm","setRsInForm","factInForm","setFactInForm","setOpen","montoTotal","fechaIngreso","empresa","subRubroId","facturaId","factura","disablePortal","FormControlLabel","control","Checkbox","onlyCheck","Collapse","in","mb","FiltroOP","setFiltFide","setFiltRS","setFiltEst","estados","parse","getItem","estadoInForm","setEstadoInForm","filterOP","campo","styles","StyleSheet","create","container","borderBottomWidth","alignItems","fontStyle","borderRightWidth","qty","rate","paddingRight","amount","amountRow","tablaFacturas","dataOP","dataFacturas","flexWrap","borderWidth","borderColor","borderBottomColor","color2","borderRightColor","empresas","detalle","link","txtOC","espacio","col1","col2","col3","tablaTEC","auth_obra","usuarios","rowbis","col1bis","col2bis","col3bis","tablaADM","monto","RET_GAN","COMP_GAN","RET_IVA","COMP_IVA","RET_SUSS","COMP_SUSS","monto_a_pagar","auth_adm","col4","col5","rowf","descriptionf","totalf","tablaPagos","arr_id","arr_banco","arr_cid","arr_cuenta","OPpago","modo1","banco1","nro1","descri1","descri12","fecha1","monto1","modo2","banco2","nro2","descri2","descri22","fecha2","monto2","modo3","banco3","nro3","descri3","descri32","fecha3","monto3","modo4","banco4","nro4","descri4","descri42","fecha4","monto4","parseFloat","tableContainer","tablaPie","page","fontFamily","lineHeight","marginRight","titleContainer","reportTitle","reportTitleFide","subreportTitle","saltolinea","invoiceNoContainer","invoiceDateContainer","invoiceDate","i","bancoId","j","orden_de_pago","idSociedad","ancho_logo","titulo","color3","uri","method","headers","createdAt","getBackgroundColor","mode","darken","lighten","getHoverBackgroundColor","miOP","fa","verColumnBlue","puedeEditar","IrDetalleOP_0","hide","bgcolor","IrDetalleOP_2","ComboBoxEst","ComboBoxRet","retenciones","misFacturas","NonObraAuthRow","NonAdmAuthRow","ComboBoxFon","fondos_s","DescargarPDF","EnviarMail","confirmada","GrillaOP","filtFide","filtRS","filtEst","opInformation","result","accesoOP","grfacturas","estadoOP","idOP","getPdfBlob","cargar_y_subir_OP","nom_empresa","pdf","NewDocument","toBlob","blobPdf","formData","FormData","fileName","append","authOBRA","tipoAutorizacion","opid","nonAuthObra","authADM","nonAuthAdm","mailTo","mailOP","mailaccount","mailfromname","mailConstructora","enviarCorreo","selectionModel","setSelectionModel","success","element","filtrar","OP","moneda","estadoRET","retencion","estado","fondos","archivada","enviada","apr_obra","apr_adm","OPId","aprobado_obra","aprobado_adm","fondos_","formaPago","onAuthObra","onAuthAdm","onEnviar","cargarOP","esEditable","isCellEditable","checkboxSelection","onSelectionModelChange","getRowClassName","getOPs","generar_y_enviar","getPdfBlob_2","generado","enviarCorreo_2","rta","csvOptions","fields","selectedRet","selectedEst","defaultValue","InputProps","readOnly","selectedFon","authRow","toUpperCase","notify","setTimeout","document","blob","loading","enviar","authId","formaPagos","GrillaOpAuth","str","documento","authFila","auth_seleccionados","AuthAdmOP","AuthObraOP","AgregarFactura","refetch","facturas","addFactura","FormDetalleOP","formOP","newOP","updateOP","isConfirmOP","setIsConfirmOP","iniEstado","setIniEstado","iniRet","setIniRet","iniFondos","setIniFondos","verBotonDesconfirmar","flagPago","Grid","spacing","sm","handleModification","onlyNumbers2","Switch","confirmarOP","defaultChecked","cuenta","inputProps","min","Math","round","valorCombo","flag","valor","verEliminar","rel","DeleteRow","GrillaDetalleOP","selectedFacturaData","tipos","OPs","link2","fechaVTO","DetalleOP","React","verPDF","setVerPDF","buttonAdmRef","useRef","facturasCargadas","cargadas","authFilaObra","authFilaAdm","verAgregar","borderBottom","paddingBottom","verAuthBoton","mt","ref","nomPdfCargado","auth","rol_usuario","FormFactura","newFactura","tipoInForm","setTipoInForm","setNumber","setFBlue","n","FiltroFactura","setFiltComp","compInForm","setCompInForm","fFechaIngreso","valueOptions","fFechaVTO","OPnumero","GrillaFactura","filtComp","facturaInformation","idFactura","diasVTO","setDate","Factura","ManipularOC","addOC","OC","createContext","App","localStorageLoggedUserInfo","useAuth","localStorageIdSociety","Provider","ThemeProvider","dotenv","config","QueryClient","ReactDOM","render","client","getElementById"],"mappings":"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","file":"static/js/main.3f7d6f50.chunk.js","sourcesContent":["import { createStyles, makeStyles } from '@mui/styles';\n\nconst useStyles = makeStyles(() =>\n  createStyles({\n    '@global': {\n      '*': {\n        boxSizing: 'border-box',\n        margin: 0,\n        padding: 0,\n      },\n      html: {\n        '-webkit-font-smoothing': 'antialiased',\n        '-moz-osx-font-smoothing': 'grayscale',\n        height: '100%',\n        width: '100%',\n      },\n      body: {\n        backgroundColor: '#f4f6f8',\n        height: '100%',\n        width: '100%',\n      },\n      a: {\n        textDecoration: 'none',\n      },\n      '#root': {\n        height: '100%',\n        width: '100%',\n      },\n    },\n  })\n);\n\nconst GlobalStyles = () => {\n  useStyles();\n\n  return null;\n};\n\nexport default GlobalStyles;\n","const array = [\n  'none',\n  '0 0 0 1px rgba(63,63,68,0.05), 0 1px 2px 0 rgba(63,63,68,0.15)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 2px 2px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 3px 4px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 6px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 4px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 5px 8px -2px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 12px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 6px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 7px 16px -4px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 8px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 9px 18px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 10px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 11px 20px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 12px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 13px 22px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 14px 24px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 16px 28px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 18px 30px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 20px 32px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 22px 34px -8px rgba(0,0,0,0.25)',\n  '0 0 1px 0 rgba(0,0,0,0.31), 0 24px 36px -8px rgba(0,0,0,0.25)'\n];\nexport default array;\n","const obj = {\n  h1: {\n    fontWeight: 500,\n    fontSize: 35,\n    letterSpacing: '-0.24px'\n  },\n  h2: {\n    fontWeight: 500,\n    fontSize: 29,\n    letterSpacing: '-0.24px'\n  },\n  h3: {\n    fontWeight: 500,\n    fontSize: 24,\n    letterSpacing: '-0.06px'\n  },\n  h4: {\n    fontWeight: 500,\n    fontSize: 20,\n    letterSpacing: '-0.06px'\n  },\n  h5: {\n    fontWeight: 500,\n    fontSize: 16,\n    letterSpacing: '-0.05px'\n  },\n  h6: {\n    fontWeight: 500,\n    fontSize: 14,\n    letterSpacing: '-0.05px'\n  },\n  overline: {\n    fontWeight: 500\n  }\n};\nexport default obj;\n","import { createTheme, colors } from '@mui/material';\nimport shadows from './shadows';\nimport typography from './typography';\n\nconst theme = createTheme({\n  palette: {\n    background: {\n      default: '#F4F6F8',\n      paper: colors.common.white,\n    },\n    primary: {\n      contrastText: '#ffffff',\n      main: '#5664d2',\n    },\n    text: {\n      primary: '#172b4d',\n      secondary: '#6b778c',\n    },\n  },\n  shadows,\n  typography,\n});\n\nexport default theme;\n","const apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nconst Logo = ({ idSociety }) => (\n  <img alt=\"Logo\" height=\"60px\" src={`${apiServerUrl}public/${idSociety?.logo}`} />\n);\nexport default Logo;\n","import {\n  AttachMoney,\n  TrendingUp,\n  LocalShipping,\n  People,\n  MenuBook,\n  Apartment,\n  /*Assignment,*/\n  ListAlt,\n  CreditCard,\n  Construction,\n  /*MonetizationOn,\n  Business,\n  PeopleAlt,\n  Schema,\n  AssignmentTurnedIn,*/\n} from '@mui/icons-material';\n\nexport const sideBarOptions = [\n  {\n    path: 'op',\n    icon: CreditCard,\n    title: 'OPs',\n    acceso: 'oppago',\n  },\n\n  {\n    path: 'AuthAdmOP',\n    icon: CreditCard,\n    title: 'OPs Auth ADM',\n    acceso: 'AuthAdmOP',\n  },\n\n  {\n    path: 'AuthObraOP',\n    icon: CreditCard,\n    title: 'OPs Auth Obra',\n    acceso: 'AuthObraOP',\n  },\n\n  {\n    path: 'factura',\n    icon: ListAlt,\n    title: 'Facturas',\n    acceso: 'factura',\n  },  \n  {\n    path: 'OC',\n    icon: Construction,\n    title: 'OC',\n    acceso: 'orden_compra',\n  },\n  {\n    path: 'proveedores',\n    icon: LocalShipping,\n    title: 'Proveedores',\n    acceso: 'proveedores',\n  },\n  {\n    path: 'fideicomiso',\n    icon: Apartment,\n    title: 'Fideicomisos',\n    acceso: 'fideicomiso',\n  },\n  {\n    path: 'rubro',\n    icon: MenuBook,\n    title: 'Rubros',\n    acceso: 'rubro',\n  },\n\n/*\n  {\n    path: 'empresa',\n    icon: Business,\n    title: 'Empresa',\n  },*/\n  /*\n  {\n    path: 'persona',\n    icon: PeopleAlt,\n    title: 'Personas',\n  },*/\n  \n\n  {\n    path: 'cac',\n    icon: TrendingUp,\n    title: 'CAC',\n    acceso: 'cac',\n  },\n  {\n    path: 'dolar',\n    icon: AttachMoney,\n    title: 'Dólar',\n    acceso: 'dolar',\n  },\n\n  {\n    path: 'banco',\n    icon: AttachMoney,\n    title: 'Bancos',\n    acceso: 'banco',\n  },\n\n  {\n    path: 'usuarios',\n    icon: People,\n    title: 'Usuarios',\n    acceso: 'usuarios',\n  },\n];\n","// import { useState } from 'react';\nimport {\n  Typography,\n  AppBar,\n  Toolbar,\n  Box,\n  IconButton,\n  Avatar,\n} from '@mui/material';\nimport { ExitToApp, Menu } from '@mui/icons-material';\nimport { Link, useLocation } from 'react-router-dom';\nimport Logo from 'src/components/auxiliares/Logo.js';\nimport { sideBarOptions } from 'src/components/auxiliares/sideBarOptions.js';\nimport { useNavigate } from 'react-router-dom';\n\n\nexport default function DashboardNavbar({\n  setisMobileNavOpen,\n  setLoggedUser,\n  idSociety,\n  loggedUser,\n}) {\n\n  var pathAvatar = '/static/images/avatars/' + loggedUser.avatar;\n\n  const user = {avatar: pathAvatar,};\n\n  const navigate = useNavigate();\n\n  const { pathname } = useLocation();\n\n  const lastPartOfPath = pathname.split('/')[pathname.split('/').length - 1];\n\n  if(!loggedUser){\n    logOut();\n  }\n\n  const nameOfPage =\n    sideBarOptions.find(option => option.path === lastPartOfPath)?.title ||\n    lastPartOfPath;\n\n  //const [notifications] = useState([]);\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n\n\n  return (\n    <AppBar elevation={0}>\n      <Toolbar>\n        <Link to=\"/\">\n          <Logo idSociety={idSociety} />\n        </Link>\n        <div style={{ marginLeft: 50, fontSize: 24 }}>\n          <Typography align=\"left\" color=\"white\" variant=\"h4\">\n            {nameOfPage==='0' || nameOfPage==='1'? 'OP Detalle': nameOfPage\n              .replace('-', ' de ')\n              .replace('%20', ' ')\n              .replace('%20', ' ')\n              .replace('%20', ' ')\n              .replace('_', ': ')}\n          </Typography>\n        </div>\n        <Box sx={{ flexGrow: 1 }} />\n\n        <div>\n          <Typography align=\"left\" color=\"white\" variant=\"h4\">\n            {loggedUser?.user}\n          </Typography>\n        </div>\n\n        <IconButton color=\"inherit\">\n          <Avatar\n            component={Link}\n            to=\"/\"\n            src={user.avatar}\n            sx={{\n              cursor: 'pointer',\n              width: 30,\n              height: 30,\n            }}\n          />\n        </IconButton>\n        <IconButton\n          color=\"inherit\"\n          sx={{ display: { md: 'block', lg: 'none' } }}\n          onClick={setisMobileNavOpen}\n        >\n          <Menu />\n        </IconButton>\n        <IconButton color=\"inherit\" onClick={logOut}>\n          <ExitToApp />\n        </IconButton>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import { NavLink as RouterLink, matchPath, useLocation } from 'react-router-dom';\nimport { ListItem, Button } from '@mui/material';\n\nexport function NavItem({ href, icon: Icon, title, ...rest }) {\n  const location = useLocation();\n\n  const active = href\n    ? !!matchPath(\n        {\n          path: href,\n          end: false,\n        },\n        location.pathname\n      )\n    : false;\n\n  return (\n    <ListItem\n      disableGutters\n      sx={{\n        display: 'flex',\n        py: 0,\n      }}\n      {...rest}\n    >\n      <Button\n        component={RouterLink}\n        sx={{\n          color: 'text.secondary',\n          fontWeight: 'medium',\n          justifyContent: 'flex-start',\n          letterSpacing: 0,\n          py: 1.25,\n          textTransform: 'none',\n          width: '100%',\n          ...(active && {\n            color: 'primary.main',\n          }),\n          '& svg': {\n            mr: 1,\n          },\n        }}\n        to={href}\n      >\n        {Icon && <Icon size=\"20\" />}\n        <span>{title}</span>\n      </Button>\n    </ListItem>\n  );\n}\n","import { Box, List, Drawer } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { NavItem } from './NavItem';\nimport { sideBarOptions } from './sideBarOptions';\n\nexport default function DashboardSidebar({ setisMobileNavOpen, setLoggedUser, isMobileNavOpen, idSociety, loggedUser }) {\n  // console.log('idSociety:', idSociety);\n  const navigate = useNavigate();\n  if(!loggedUser){\n    logOut();\n  }\n\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n  const content = (\n    <Box\n      sx={{\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        p: 2,\n      }}\n    >\n      <List>\n        {arrMenu(sideBarOptions, loggedUser?.['rol.accesoTXT']).map(item => (\n          <NavItem\n            href={`/${idSociety?.nombre}/${item.path}`}\n            key={item.title}\n            title={item.title}\n            icon={item.icon}\n          />\n        ))}\n      </List>\n    </Box>\n  );\n\n  return (\n    <>\n      <Drawer\n        variant=\"temporary\"\n        sx={{ display: { xs: 'block', lg: 'none' } }}\n        anchor=\"left\"\n        onClose={setisMobileNavOpen}\n        open={isMobileNavOpen}\n        PaperProps={{\n          sx: {\n            width: 256,\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n      <Drawer\n        variant=\"persistent\"\n        open\n        sx={{ display: { xs: 'none', lg: 'block' } }}\n        anchor=\"left\"\n        PaperProps={{\n          sx: {\n            width: 256,\n            top: 64,\n            height: 'calc(100% - 64px)',\n          },\n        }}\n      >\n        {content}\n      </Drawer>\n    </>\n  );\n}\n\n// segun acceso en el accessTXT del rol\nfunction arrMenu(sideBarOptions, acceso){\n  \n  let arr =[{}]; \n\n  sideBarOptions.forEach(obj => {\n    if(acceso.indexOf(obj.acceso) !== -1 && obj.acceso.trim()!==\"\" && obj.acceso!==null && obj.acceso!==undefined){\n      arr.push(obj);\n    }  \n  })\n  arr.splice(0, 1);\n\n  return arr;\n}\n","import { useState } from 'react';\nimport { styled } from '@mui/system';\nimport { Outlet } from 'react-router-dom';\nimport DashboardNavbar from './DashboardNavbar';\nimport DashboardSidebar from './DashboardSidebar';\nimport { useNavigate } from 'react-router-dom';\n// import { ReactQueryDevtools } from 'react-query/devtools';\n// <ReactQueryDevtools initialIsOpen={false} />\n\nconst DashboardLayoutRoot = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.default,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}));\n\nconst DashboardLayoutWrapper = styled('div')(({ theme }) => ({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n  [theme.breakpoints.up('lg')]: {\n    paddingLeft: 256,\n  },\n}));\n\nconst DashboardLayoutContainer = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n});\n\nconst DashboardLayoutContent = styled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n});\n\nexport default function DashboardLayout({ setLoggedUser, idSociety, loggedUser }) {\n  \n  const navigate = useNavigate();\n\n  if(!loggedUser){\n    logOut();\n  }\n\n  function logOut() {\n    setLoggedUser(null);\n    navigate(`../${idSociety?.nombre}`);\n  }\n  const [isMobileNavOpen, setisMobileNavOpen] = useState(false);\n\n  return (\n    <DashboardLayoutRoot>\n      <DashboardNavbar\n        setisMobileNavOpen={() => setisMobileNavOpen(!isMobileNavOpen)}\n        setLoggedUser={setLoggedUser}\n        idSociety={idSociety}\n        loggedUser={loggedUser}\n      />\n      <DashboardSidebar\n        idSociety={idSociety}\n        loggedUser={loggedUser}\n        setisMobileNavOpen={() => setisMobileNavOpen(!isMobileNavOpen)}\n        isMobileNavOpen={isMobileNavOpen}\n      />\n      <DashboardLayoutWrapper>\n        <DashboardLayoutContainer>\n          <DashboardLayoutContent>\n            <Outlet />\n            \n          </DashboardLayoutContent>\n        </DashboardLayoutContainer>\n      </DashboardLayoutWrapper>\n    </DashboardLayoutRoot>\n  );\n}\n","import { Link as RouterLink } from 'react-router-dom';\nimport { AppBar, Toolbar } from '@mui/material';\nimport Logo from './Logo';\n\nconst MainNavbar = props => (\n  <AppBar elevation={0} {...props}>\n    <Toolbar sx={{ height: 64 }}>\n      <RouterLink to='/'>\n        <Logo />\n      </RouterLink>\n    </Toolbar>\n  </AppBar>\n);\n\nexport default MainNavbar;\n","import { Outlet } from 'react-router-dom';\nimport { styled } from '@mui/system';\nimport MainNavbar from 'src/components/auxiliares/MainNavbar';\n\nconst MainLayoutRoot = styled('div')(({ theme }) => ({\n  backgroundColor: theme.palette.background.paper,\n  display: 'flex',\n  height: '100%',\n  overflow: 'hidden',\n  width: '100%',\n}));\n\nconst MainLayoutWrapper = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n  paddingTop: 64,\n});\n\nconst MainLayoutContainer = styled('div')({\n  display: 'flex',\n  flex: '1 1 auto',\n  overflow: 'hidden',\n});\n\nconst MainLayoutContent = styled('div')({\n  flex: '1 1 auto',\n  height: '100%',\n  overflow: 'auto',\n});\n\nconst MainLayout = () => (\n  <MainLayoutRoot>\n    <MainNavbar />\n    <MainLayoutWrapper>\n      <MainLayoutContainer>\n        <MainLayoutContent>\n          <Outlet />\n        </MainLayoutContent>\n      </MainLayoutContainer>\n    </MainLayoutWrapper>\n  </MainLayoutRoot>\n);\n\nexport default MainLayout;\n","import axios from 'axios';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport const getMethod = async url => {\n  const { data } = await axios.get(`${apiServerUrl}${url}`);\n  return data;\n};\n\nexport const postMethod = async (url, newData) => {\n  const { data } = await axios.post(`${apiServerUrl}${url}`, newData);\n  return data;\n};\n\nexport const deleteMethod = async (url, infoOfElementToDelete) => {\n  // console.log('infoOfElementToDelete:', infoOfElementToDelete);\n  return await axios.delete(`${apiServerUrl}${url}`, { data: infoOfElementToDelete });\n};\n","import { useState, useEffect, useContext } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { Container, Box, TextField, Button, Alert } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { Formik } from 'formik';\nimport { getMethod } from 'src/utils/api';\nimport { postMethod } from 'src/utils/api';\nimport { useQuery } from 'react-query';\nimport { SocietyContext } from 'src/App';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function Login({ setLoggedUser, setIdSociety }) {\n\n  const idSociety = useContext(SocietyContext);\n  //const queryClient = useQueryClient();\n  let { societyName } = useParams();\n  const navigate = useNavigate();\n\n  // localStorage.clear();\n  \n  localStorage.setItem(\"loggedUserInfo\", null);\n  localStorage.setItem(\"bs\", null);\n  localStorage.setItem(\"co\", null);\n  localStorage.setItem(\"estados\", null);\n  localStorage.setItem(\"formaPagos\", null);\n\n  const [isAlertOpen, setIsAlertOpen] = useState('none');\n\n\n  useEffect(() => {\n    societyStateObjectSetter(societyName, setIdSociety);\n  }, [setIdSociety, societyName]);\n\n  /****************************************************/\n  /*************** deuda tecnica **********************/\n  /****************************************************/\n\n  const { data: bancos } = useQuery(['bancos', idSociety], () =>\n    getMethod(`banco/listar/${idSociety.id}`)\n  );\n  localStorage.setItem(\"bs\", JSON.stringify(bancos));\n\n  const { data: cuentasbanco } = useQuery(['cuentasbanco', idSociety], () =>\n    getMethod(`cuentabanco/listar/${idSociety.id}/0`)\n  );  \n  localStorage.setItem(\"co\", JSON.stringify(cuentasbanco));\n\n  const estados = [  \n    { id: 0, descripcion: '-' },\n    { id: 1, descripcion: 'Para autorizar en Obra' },\n    { id: 2, descripcion: 'Para pagar' },\n    { id: 3, descripcion: 'Pagada' },\n    { id: 4, descripcion: 'Para autorizar Admin. Central' },\n    { id: 5, descripcion: 'Pagado Parcial' },\n    { id: 6, descripcion: 'Anulado' },\n    { id: 7, descripcion: 'Cargada en Banco' },\n  ];\n  localStorage.setItem(\"estados\", JSON.stringify(estados));\n\n  const retenciones = [  \n    { id: 0, descripcion: '-' },\n    { id: 1, descripcion: 'No aplican' },\n    { id: 2, descripcion: 'OK' },\n    { id: 3, descripcion: 'Pendiente' },\n  ];\n  localStorage.setItem(\"retenciones\", JSON.stringify(retenciones));\n  \n  const fondos_s = [\n    { id: 0, descripcion: '-' },  \n    { id: 1, descripcion: 'Sin fondos' },\n    { id: 2, descripcion: 'OK cargado' },\n  ];\n  localStorage.setItem(\"fondos_s\", JSON.stringify(fondos_s));\n\n  const tipos = [\n    { id: 0, descripcion: 'Factura' },  \n    { id: 1, descripcion: 'Nota débito' },\n    { id: 2, descripcion: 'Nota crédito' },\n    { id: 3, descripcion: 'Boleta Pago' },\n  ];\n  localStorage.setItem(\"tipos\", JSON.stringify(tipos));\n\n\n  const formaPagos = \"-,Transferencia ARS,Transferencia USD,Cheque,Efectivo ARS,Efectivo USD,Débito automático,Echeq,Otra\";\n  localStorage.setItem(\"formaPagos\", formaPagos); \n\n  /****************************************************/\n  /****************************************************/\n  /****************************************************/\n\n  return (\n    <>\n      <Helmet onChangeClientState={() => {}}>\n        <title>Login | {idSociety?.nombreComercial ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          justifyContent: 'center',\n        }}\n      >\n        <Container maxWidth=\"sm\">\n          <div style={{ width: '100%' }} >\n            <img\n              /* backgroundColor:\"#6326d5\" */\n              style={{ display: 'block', margin: 'auto', width: '50%', backgroundColor:\"#777777\" }}\n              src={`${apiServerUrl}public/${idSociety?.logo}`}\n              alt=\"logo\"\n            />\n          </div>\n          <Formik\n            enableReinitialize=\"true\"\n            initialValues={{\n              email: `${idSociety?.dominio ?? ''}`,\n              password: '',\n            }}\n            onSubmit={async (values, actions) => {\n              if (await userCheck(idSociety.id, values.email, values.password, setLoggedUser)) {\n\n                navigate(`/${societyName}`, { replace: true });\n              } else {\n                setIsAlertOpen('flex');\n                actions.resetForm();\n              }\n            }}\n          >\n            {function (props) {\n              return (\n                <form onSubmit={props.handleSubmit}>\n                  <TextField\n                    fullWidth\n                    label=\"Correo\"\n                    margin=\"normal\"\n                    name=\"email\"\n                    onBlur={props.handleBlur}\n                    onChange={props.handleChange}\n                    value={props.values.email}\n                    variant=\"outlined\"\n                  />\n                  <TextField\n                    fullWidth\n                    label=\"Contraseña\"\n                    margin=\"normal\"\n                    name=\"password\"\n                    autoComplete=\"on\"\n                    onBlur={props.handleBlur}\n                    onChange={props.handleChange}\n                    type=\"password\"\n                    value={props.values.password}\n                    variant=\"outlined\"\n                  />\n                  <Box sx={{ py: 2 }}>\n                    <Alert\n                      style={{ display: isAlertOpen }}\n                      severity=\"error\"\n                      onClose={() => {\n                        setIsAlertOpen('none');\n                      }}\n                    >\n                      Correo y/o contraseña inválidos\n                    </Alert>\n                    <Button\n                      color=\"primary\"\n                      disabled={props.isSubmitting}\n                      fullWidth\n                      size=\"large\"\n                      type=\"submit\"\n                      variant=\"contained\"\n                    >\n                      Ingresar\n                    </Button>\n                  </Box>\n                </form>\n              );\n            }}\n          </Formik>\n        </Container>\n      </Box>\n    </>\n  );\n}\n\nasync function societyStateObjectSetter(societyName, setIdSociety) {\n  const societyData = await nameToId(societyName);\n  setIdSociety({ ...societyData });\n}\n\nasync function nameToId(nombreSociedad) {\n  const data = await getMethod(`sociedad/mostrar/${nombreSociedad}`);\n  localStorage.removeItem('idSociety');\n  if (data) {\n    localStorage.setItem('idSociety', JSON.stringify({ ...data }));\n  }\n  return await data;\n}\n\nasync function userCheck(idSociety, email, password, setLoggedUser) {\n  const loggedUserInfo = await postMethod(`usuario/login/${await idSociety}`, {\n    mail: email,\n    pass: password,\n  });\n\n\n  setLoggedUser(loggedUserInfo);\n  return loggedUserInfo !== null ? true : false;\n}\n","import { Container, Box, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nconst NotFound = () => (\n  <>\n    <Helmet>\n      <title>404</title>\n    </Helmet>\n    <Box\n      sx={{\n        backgroundColor: 'background.default',\n        display: 'flex',\n        flexDirection: 'column',\n        height: '100%',\n        justifyContent: 'center',\n      }}\n    >\n      <Container >\n        <Typography align=\"center\" color=\"textPrimary\" variant=\"h1\">\n          404: La página no existe\n        </Typography>\n        <Box sx={{ textAlign: 'center' }}>\n          <img\n            alt=\"Under development\"\n            src=\"/static/images/undraw_page_not_found_su7k.svg\"\n            style={{\n              marginTop: 50,\n              display: 'inline-block',\n              width: 560,\n            }}\n          />\n        </Box>\n      </Container>\n    </Box>\n  </>\n);\n\nexport default NotFound;\n","\nimport { getMethod } from './api';\n// import moment from 'moment';\nconst Qdigitos = process.env.REACT_APP_Q_DIGITOS_FACTURA;\n\nexport function isValidDate(d) {\n  let f = new Date(d);\n  return !isNaN(f.getTime());\n}\n\n// Devuelve CUIT con formato 20-44.123.225-8\nexport function mostrarCUIT(value) {\n  try {\n    value = value.split('');\n    value.splice(2, 0, '-');\n    //value.splice(5, 0, '.');\n    //value.splice(9, 0, '.');\n    value.splice(13, 0, '-');\n    return value.join('');\n  } catch (e) {\n    console.log('hubo un error: ', e);\n    return null;\n  }\n}\n\n// entra base de datos\n// Devuelve un Date con formato 1/5/2021\nexport function mostrarFecha(fecha) {\n\n  \n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return new Date(fecha).toLocaleDateString('es-AR', { timeZone: 'UTC' });\n  }\n}\n\n// Devuelve un Date con formato 5 dic. 2021\nexport function mostrarFechaMesTXT(fecha) {\n  let dd = new Date(fecha).getDate();\n  let mm = new Date(fecha).toLocaleDateString('es-AR', { timeZone: 'UTC',  month: 'short' });\n  let yyyy = new Date(fecha).getFullYear();\n  return dd + ' ' + mm + ' '  + yyyy;\n \n}\n\n// entra date\n// Devuelve un string con formato YYYY-MM-DD\nexport function yearMonthDayString(fecha) {\n\n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return `${fecha.getFullYear(fecha)}-${(1 + fecha.getMonth(fecha)).toString().padStart(2, '0')}-${fecha\n      .getDate(fecha)\n      .toString()\n      .padStart(2, '0')}`;\n  } \n}\n\n// entra date\n// Devuelve un string con formato YYYY-MM-DD\nexport function yearMonthDayNum(fecha) {\n\n  if(fecha ===undefined || fecha ===null){\n    return null\n  }else{\n    return `${fecha.getFullYear(fecha)}${(1 + fecha.getMonth(fecha)).toString().padStart(2, '0')}${fecha\n      .getDate(fecha)\n      .toString()\n      .padStart(2, '0')}`;\n  } \n}\n\n// entra date\n// Devuelve una fecha con dia 1\nexport function dateToStringWithDayEqualToOne(date) {\n  return `${date.getFullYear(date)}-${(1 + date.getMonth(date)).toString().padStart(2, '0')}-01`;\n}\n\nexport async function isNumberUsed(endpoint, idSociety, empresaId, numero) {\n  let url = `${endpoint}/mostrar/${idSociety}/${empresaId}/${numero}`;\n  let data = await getMethod(url);\n  return !!data;\n}\n\nexport async function isNumberUsedDig(endpoint, idSociety, empresaId, numero) {\n  \n\n  // let dig = process.env.Q_DIGITOS_COM_FACTURA;\n  let num = \"\" + numero; \n  if(num.length > parseInt(Qdigitos)){\n    num = num.slice(num.length - parseInt(Qdigitos));\n  } \n  \n  let url = `${endpoint}/checknumero/${idSociety}/${empresaId}/${num}`;\n  let data = await getMethod(url);\n  \n  return (!!data);\n\n}\n\n\nexport async function isDateUsed(endpoint, idSociety, date) {\n  let url = `${endpoint}/mostrar/${idSociety}/${date}`;\n  let data = await getMethod(url);\n  return !!data;\n}\n\nexport function onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\n/*\nultimos\n\tconst id = \"ctl03_Tabs1\";\n\tconsole.log(id.slice(id.length - 5)); //Outputs: Tabs1\nprimeros\n\tconst string = \"0123456789\";\n\tconsole.log(string.slice(0, 2)); // \"01\"\n\tconsole.log(string.slice(0, 8)); // \"01234567\"\n\tconsole.log(string.slice(3, 7)); // \"3456\"\nsin decimales\n\tMath.trunc(42.84);    // 42\n\tMath.trunc(0.123);    //  0\nNumber to string\n\tn.toString()\n\t\"\"+n\n  */\n","import { useState } from 'react';\nimport { Button, Dialog, DialogActions, DialogTitle } from '@mui/material';\n\nexport function usePrompt() {\n  const [isPromptOpen, setIsPromptOpen] = useState(false);\n\n  return { Prompt, setIsPromptOpen };\n\n  function Prompt({\n    ok = false,\n    action = () => {},\n    message = '¿Estás seguro de eliminar este registro?',\n  }) {\n    // console.log('action', action);\n    return (\n      <div>\n        <Dialog\n          open={isPromptOpen}\n          onClose={handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{message}</DialogTitle>\n          <DialogActions>\n            {ok ? (\n              <Button onClick={handleClose}>Ok</Button>\n            ) : (\n              <>\n                <Button onClick={handleClose}>No</Button>\n                <Button onClick={() => handleActionAndClose(action)} autoFocus>\n                  Sí\n                </Button>\n              </>\n            )}\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n\n  function handleClose() {\n    setIsPromptOpen(false);\n  }\n\n  function handleActionAndClose(action) {\n    action();\n    handleClose();\n  }\n}","import { useContext } from 'react';\nimport { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { postMethod } from 'src/utils/api';\nimport { yearMonthDayString, isDateUsed } from 'src/utils/utils';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nimport { SocietyContext } from 'src/App';\n\nexport function FormDolar({loggedUser}) {\n\n  const idSociety = useContext(SocietyContext);\n  const { setIsPromptOpen, Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  /*\n  const user = useUser();\n  console.log(user); */\n\n  const { mutate: addDolar } = useMutation(\n    newDolar => postMethod(`dolar/agregar/${idSociety.id}`, newDolar),\n    {\n      onMutate: async newDolar => {\n        newDolar.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['dolar', idSociety]);\n        const prevData = await queryClient.getQueryData(['dolar', idSociety]);\n        const newData = [...prevData, { ...newDolar, id: new Date().getTime() }];\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          fecha: new Date(),\n          mep: '',\n          BCRA: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          values.fecha = yearMonthDayString(values.fecha);\n          if (await isDateUsed('dolar', idSociety.id, values.fecha)) {\n            setIsPromptOpen(true);\n          } else addDolar(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            <Field component={Picker} label=\"Fecha\" type=\"date\" name=\"fecha\" />\n            <Field\n              as={TextField}\n              label=\"BCRA\"\n              size=\"small\"\n              type=\"float\"\n              maxLength={4}\n              name=\"BCRA\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'BCRA')}\n            />\n            <Field\n              as={TextField}\n              label=\"MEP\"\n              size=\"small\"\n              type=\"float\"\n              name=\"mep\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'mep')}\n            />\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\nfunction Picker({ field, form }) {\n  const { name, value } = field;\n  const { setFieldValue } = form;\n\n  return (\n    <LocalizationProvider dateAdapter={AdapterDateFns}>\n      <DesktopDatePicker\n        label=\"Fecha\"\n        inputFormat=\"dd/MM/yyyy\"\n        value={value}\n        onChange={value => setFieldValue(name, value)}\n        renderInput={params => <TextField required size=\"small\" {...params} />}\n      />\n    </LocalizationProvider>\n  );\n}","\nimport * as React from 'react';\nimport { useState, useContext } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\nimport { SocietyContext } from 'src/App';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'fecha',\n    headerName: 'Fecha',\n    width: 150,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => mostrarFecha(value),\n  },\n  {\n    field: 'BCRA',\n    preProcessEditCellProps: onlyNumbers,\n    headerName: 'BCRA',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'mep',\n    preProcessEditCellProps: onlyNumbers,\n    headerName: 'MEP',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaDolar() {\n  const idSociety = useContext(SocietyContext);\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: dolarInformation,\n    isLoading,\n    error,\n  } = useQuery(['dolar', idSociety], () => getMethod(`dolar/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idDolar => await deleteMethod(`dolar/eliminar/${idSociety.id}`, { id: idDolar }),\n    {\n      onMutate: async idDolar => {\n        await queryClient.cancelQueries(['dolar', idSociety]);\n        const prevData = queryClient.getQueryData(['dolar', idSociety]);\n        const newData = prevData.filter(dolar => dolar.id !== idDolar);\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idDolar, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`dolar/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['dolar', idSociety]);\n        const prevData = queryClient.getQueryData(['dolar', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(dolar => dolar.id !== id),\n          { ...prevData.find(dolar => dolar.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['dolar', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['dolar', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['dolar', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={dolarInformation.map(dolar => ({\n            id: dolar.id,\n            fecha: dolar.fecha,\n            BCRA: dolar.BCRA,\n            blue: dolar.blue,\n            descripcion: dolar.descripcion,\n            mep: dolar.mep,\n            deleteId: dolar.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction onlyNumbers(data) {\n\n  const regex = /^\\d{0,3}(\\.\\d{0,2})?$/;\n  const isValid = regex.test(data.props.value.toString());\n  const error = !isValid;\n  return { ...data.props, error };\n}\n","\nimport { useContext } from 'react';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormDolar } from 'src/components/dolar/FormDolar';\nimport { GrillaDolar } from 'src/components/dolar/GrillaDolar';\n\nimport { SocietyContext } from 'src/App';\n\nexport function Dolar({loggedUser}) {\n\n  const idSociety = useContext(SocietyContext);\n\n  return (\n    <>\n      <Helmet>\n        <title>Dólar | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <FormDolar  loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaDolar  loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { dateToStringWithDayEqualToOne, isDateUsed } from 'src/utils/utils';\n\nexport function FormCac({ idSociety, loggedUser }) {\n  const { Prompt, setIsPromptOpen } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addCac } = useMutation(\n    newCac => postMethod(`cac/agregar/${idSociety.id}`, newCac),\n    {\n      onMutate: async newCac => {\n        newCac.creador = loggedUser.id;\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = await queryClient.getQueryData(['cac', idSociety]);\n        const newData = [...prevData, { ...newCac, id: new Date().getTime() }];\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          fecha: new Date(),\n          estimado: '',\n          definitivo: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          values.fecha = dateToStringWithDayEqualToOne(values.fecha);\n          if (await isDateUsed('cac', idSociety.id, values.fecha)) {\n            setIsPromptOpen(true);\n          } else addCac(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            <Field component={Picker} label=\"Fecha\" type=\"date\" name=\"fecha\" />\n            <Field\n              as={TextField}\n              label=\"Estimado\"\n              required\n              type=\"float\"\n              size=\"small\"\n              maxLength={4}\n              name=\"estimado\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'estimado')}\n            />\n            <Field\n              as={TextField}\n              label=\"Definitivo\"\n              required\n              type=\"float\"\n              size=\"small\"\n              name=\"definitivo\"\n              onChange={event => onlyNumbers(event, setFieldValue, 'definitivo')}\n            />\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya hay un mes con información, por favor editar el mes desde la grilla.\"\n        ok\n      />\n    </>\n  );\n\n  function onlyNumbers(event, setFieldValue, typeOfData) {\n    event.preventDefault();\n    const { value } = event.target;\n    const regex = /^\\d{0,4}(\\.\\d{0,2})?$/;\n    if (regex.test(value.toString())) {\n      setFieldValue(typeOfData, value.toString());\n    }\n  }\n\n  function Picker({ field, form }) {\n    const { name, value } = field;\n    const { setFieldValue } = form;\n\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label=\"Fecha\"\n          inputFormat=\"dd/MM/yyyy\"\n          value={value}\n          onChange={value => setFieldValue(name, value)}\n          renderInput={params => <TextField required size=\"small\" {...params} />}\n        />\n      </LocalizationProvider>\n    );\n  }\n}\n","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'fecha',\n    headerName: 'Fecha',\n    width: 150,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n  },\n  {\n    field: 'estimado',\n    headerName: 'Estimado',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    preProcessEditCellProps: onlyNumbers,\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'definitivo',\n    headerName: 'Definitivo',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n    preProcessEditCellProps: onlyNumbers,\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n       \n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaCac({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt();\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: cacInformation,\n    isLoading,\n    error,\n  } = useQuery(['cac', idSociety], () => getMethod(`CAC/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idCac => await deleteMethod(`cac/eliminar/${idSociety.id}`, { id: idCac }),\n    {\n      onMutate: async idCac => {\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = queryClient.getQueryData(['cac', idSociety]);\n        const newData = prevData.filter(cac => cac.id !== idCac);\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idCac, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`cac/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['cac', idSociety]);\n        const prevData = queryClient.getQueryData(['cac', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(cac => cac.id !== id),\n          { ...prevData.find(cac => cac.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['cac', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cac', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cac', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={cacInformation.map(cac => ({\n            id: cac.id,\n            fecha: cac.fecha,\n            estimado: cac.estimado,\n            definitivo: cac.definitivo,\n            deleteId: cac.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n\n  function CustomToolbar() {\n    return (\n      <GridToolbarContainer>\n        <GridToolbarExport />\n      </GridToolbarContainer>\n    );\n  }\n}\n\nfunction onlyNumbers(data) {\n  \n  const regex = /^\\d{0,4}(\\.\\d{0,2})?$/;\n  const isValid = regex.test(data.props.value.toString());\n  const error = !isValid;\n  return { ...data.props, error };\n}\n","\n  \nimport { Box, Container } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormCac } from 'src/components/cac/FormCac';\nimport { GrillaCac } from 'src/components/cac/GrillaCac';\n\nexport function Cac({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>CAC | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <FormCac idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaCac idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { Hidden } from '@material-ui/core';\n\nexport function FormRubro({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addRubro } = useMutation(\n    newRubro => postMethod(`rubro/agregar/${idSociety.id}`, newRubro),\n    {\n      onMutate: async newRubro => {\n        newRubro.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['rubro', idSociety]);\n        const prevData = await queryClient.getQueryData(['rubro', idSociety]);\n        const newData = [...prevData, { ...newRubro, id: new Date().getTime()}];\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          rubro: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addRubro(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Rubro\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"rubro\"\n            />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El rubro no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'rubro',\n    headerName: 'Rubro',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaRubro({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const navigate = useNavigate();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: rubroInformation,\n    isLoading,\n    error,\n  } = useQuery(['rubro', idSociety], () => getMethod(`rubro/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idRubro => await deleteMethod(`rubro/eliminar/${idSociety.id}`, { id: idRubro }),\n    {\n      onMutate: async idRubro => {\n        await queryClient.cancelQueries(['rubro', idSociety]);\n        const prevData = queryClient.getQueryData(['rubro', idSociety]);\n        const newData = prevData.filter(rubro => rubro.id !== idRubro);\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idRubro, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`rubro/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['rubro', idSociety]);\n        const prevData = queryClient.getQueryData(['rubro', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(rubro => rubro.id !== id),\n          { ...prevData.find(rubro => rubro.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['rubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['rubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['rubro', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={rubroInformation.map(rubro => ({\n            id: rubro.id,\n            rubro: rubro.rubro,\n            deleteId: rubro.id,\n          }))}\n          onCellEditCommit={modifyData}\n          onRowDoubleClick={a => {\n          // console.log(a);\n           return IrASubrubro(a);\n         }}\n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n    function IrASubrubro(params) {\n      navigate(`./${params.row.id}/Subrubros-${params.row.rubro}`);\n    }\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormRubro } from 'src/components/rubro/FormRubro';\nimport { GrillaRubro } from 'src/components/rubro/GrillaRubro';\n\nexport function Rubro({ idSociety, loggedUser}) {\n  return (\n    <>\n      <Helmet>\n        <title>Rubro | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormRubro idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaRubro idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormSubRubro({ idSociety, idRubro, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addSubRubro } = useMutation(\n    newSubRubro => postMethod(`subrubro/agregar/${idSociety.id}/${idRubro}`, newSubRubro),\n    {\n      onMutate: async newSubRubro => {\n        newSubRubro.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['subrubro', idSociety]);\n        const prevData = await queryClient.getQueryData(['subrubro', idSociety]);\n        const newData = [...prevData, { ...newSubRubro, id: new Date().getTime() }];\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          subRubro: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addSubRubro(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"SubRubro\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"subRubro\"\n            />\n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El subrubro no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'subRubro',\n    headerName: 'SubRubro',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaSubRubro({ idSociety, idRubro }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: subrubroInformation,\n    isLoading,\n    error,\n  } = useQuery(['subrubro', idSociety], () => getMethod(`subrubro/listar/${idSociety.id}/${idRubro}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idSubRubro => await deleteMethod(`subrubro/eliminar/${idSociety.id}`, { id: idSubRubro }),\n    {\n      onMutate: async idSubRubro => {\n        await queryClient.cancelQueries(['subrubro', idSociety]);\n        const prevData = queryClient.getQueryData(['subrubro', idSociety]);\n        const newData = prevData.filter(subrubro => subrubro.id !== idSubRubro);\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idSubRubro, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`subrubro/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['subrubro', idSociety]);\n        const prevData = queryClient.getQueryData(['subrubro', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(subrubro => subrubro.id !== id),\n          { ...prevData.find(subrubro => subrubro.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['subrubro', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['subrubro', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['subrubro', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={subrubroInformation.map(subrubro => ({\n            id: subrubro.id,\n            subRubro: subrubro.subRubro,\n            deleteId: subrubro.id,\n          }))}\n          onCellEditCommit={modifyData}\n        \n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n         \n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n   \n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormSubRubro } from 'src/components/rubro/FormSubRubro';\nimport { GrillaSubRubro } from 'src/components/rubro/GrillaSubRubro';\n\nexport function SubRubro({ idSociety, loggedUser}) {\n  const { idRubro } = useParams();\n  const rubro = parseInt(idRubro);\n  return (\n    <>\n      <Helmet>\n        <title>SubRubro | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormSubRubro idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaSubRubro idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormBanco({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addBanco } = useMutation(\n    newBanco => postMethod(`banco/agregar/${idSociety.id}`, newBanco),\n    {\n      onMutate: async newBanco => {\n        newBanco.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['banco', idSociety]);\n        const prevData = await queryClient.getQueryData(['banco', idSociety]);\n        const newData = [...prevData, { ...newBanco, id: new Date().getTime()}];\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          banco: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addBanco(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Banco\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"banco\"\n            />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n            \n\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El Banco no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Button, Typography } from '@mui/material';\nimport { useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'banco',\n    headerName: 'Banco',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1\n  },\n  {\n    field: 'descripcionLarga',\n    headerName: 'Descripcion',\n    width: 250,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  \n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaBanco({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const navigate = useNavigate();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: bancoInformation,\n    isLoading,\n    error,\n  } = useQuery(['banco', idSociety], () => getMethod(`banco/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idBanco => await deleteMethod(`banco/eliminar/${idSociety.id}`, { id: idBanco }),\n    {\n      onMutate: async idBanco => {\n        await queryClient.cancelQueries(['banco', idSociety]);\n        const prevData = queryClient.getQueryData(['banco', idSociety]);\n        const newData = prevData.filter(banco => banco.id !== idBanco);\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idBanco, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`banco/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['banco', idSociety]);\n        const prevData = queryClient.getQueryData(['banco', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(banco => banco.id !== id),\n          { ...prevData.find(banco => banco.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['banco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['banco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['banco', idSociety]),\n    }\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async banco =>    \n      navigate(`./${banco.id}/Cuentas de Banco-${banco.banco}`)\n      //navigate(`./${params.row.id}/Cuentas de Banco-${params.row.banco}`);\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={bancoInformation.map(banco => ({\n            id: banco.id,\n            banco: banco.banco,\n            descripcionLarga: banco.descripcionLarga,\n            deleteId: banco.id,\n            onIrDetalle: () => irDetalle(banco),  \n          }))}\n          onCellEditCommit={modifyData}\n          \n          /* onRowDoubleClick={a => {return IrACuentaBanco(a);}}*/\n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n           <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                 &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            </Typography>\n            <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                 Para visualizar los cambios en otras pantallas del sistema es necesario salir y volver a loguearse, gracias.\n            </Typography>\n      </div>\n    );\n    /*\n    function IrACuentaBanco(params) {\n      navigate(`./${params.row.id}/Cuentas de Banco-${params.row.banco}`);\n    }*/\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const banco = params.row.banco;\n  return <Button onClick={sendRow} >{banco}  </Button>;\n} \n\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormBanco } from 'src/components/banco/FormBanco';\nimport { GrillaBanco } from 'src/components/banco/GrillaBanco';\n\nexport function Banco({ idSociety, loggedUser}) {\n  return (\n    <>\n      <Helmet>\n        <title>Banco | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormBanco idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaBanco idSociety={idSociety} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\nexport function FormCuentaBanco({ idSociety, loggedUser }) {\n\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  const { idBanco } = useParams();\n\n  const { mutate: addCuentaBanco } = useMutation(\n    newCuentaBanco => postMethod(`cuentabanco/agregar/${idSociety.id}/${idBanco}`, newCuentaBanco),\n    {\n      onMutate: async newCuentaBanco => {\n        newCuentaBanco.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['cuentabanco', idSociety]);\n        const prevData = await queryClient.getQueryData(['cuentabanco', idSociety]);\n        const newData = [...prevData, { ...newCuentaBanco, id: new Date().getTime() }];\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          cuentaBanco: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n     \n          addCuentaBanco(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n              as={TextField}\n              label=\"Cuenta\"\n              required\n              size=\"small\"\n              type=\"float\"              \n              name=\"cuentaBanco\"\n            />\n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El cuentabanco no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}","import { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { Typography } from '@mui/material';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'cuentaBanco',\n    headerName: 'Cuenta',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'descripcionLarga',\n    headerName: 'Descripcion',\n    width: 250,\n    editable: true,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          // console.log('e', e);\n          // console.log('deleteId', deleteId);\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaCuentaBanco({ idSociety }) {\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  const { idBanco } = useParams();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: cuentaBancoInformation,\n    isLoading,\n    error,\n  } = useQuery(['cuentabanco', idSociety], () => getMethod(`cuentabanco/listar/${idSociety.id}/${idBanco}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idCuentaBanco => await deleteMethod(`cuentabanco/eliminar/${idSociety.id}`, { id: idCuentaBanco }),\n    {\n      onMutate: async idCuentaBanco => {\n        await queryClient.cancelQueries(['cuentabanco', idSociety]);\n        const prevData = queryClient.getQueryData(['cuentabanco', idSociety]);\n        const newData = prevData.filter(cuentabanco => cuentabanco.id !== idCuentaBanco);\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idCuentaBanco, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`cuentabanco/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['cuentabanco', idSociety]);\n        const prevData = queryClient.getQueryData(['cuentabanco', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(cuentabanco => cuentabanco.id !== id),\n          { ...prevData.find(cuentabanco => cuentabanco.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['cuentabanco', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['cuentabanco', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['cuentabanco', idSociety]),\n    }\n  );\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={cuentaBancoInformation.map(cuentabanco => ({\n            id: cuentabanco.id,\n            cuentaBanco: cuentabanco.cuentaBanco,\n            descripcionLarga: cuentabanco.descripcionLarga,\n            deleteId: cuentabanco.id,\n          }))}\n          onCellEditCommit={modifyData}\n        \n        compone\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n         \n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n        </Typography>\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n            Para visualizar los cambios en otras pantallas del sistema es necesario salir y volver a loguearse, gracias.\n        </Typography>\n      </div>\n    );\n   \n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n","import { useParams } from 'react-router-dom';\nimport { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { FormCuentaBanco } from 'src/components/banco/FormCuentaBanco';\nimport { GrillaCuentaBanco } from 'src/components/banco/GrillaCuentaBanco';\n\nexport function CuentaBanco({ idSociety, loggedUser}) {\n  const { idRubro } = useParams();\n  const rubro = parseInt(idRubro);\n  return (\n    <>\n      <Helmet>\n        <title>CuentaBanco | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormCuentaBanco idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaCuentaBanco idSociety={idSociety} idRubro={rubro} loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nexport function FormUsuario({ idSociety, loggedUser}) {\n  //const { setIsPromptOpen, Prompt } = usePrompt();\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addUsuario } = useMutation(\n    newUsuario => postMethod(`usuario/agregar/${idSociety.id}`, newUsuario),\n    {\n      onMutate: async newUsuario => {\n        newUsuario.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['usuario', idSociety]);\n        const prevData = await queryClient.getQueryData(['usuario', idSociety]);\n        const newData = [...prevData, { ...newUsuario, id: new Date().getTime() }];\n        queryClient.setQueryData(['usuario', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['usuario', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          user: '',\n          mail: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n\n          addUsuario(values);\n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        \n        {({ isSubmitting }) => (\n          <Form>\n            <Field as={TextField} required size=\"small\" label='Usuario' type='string' maxLength={30} name='user' />\n            <Field as={TextField} required size=\"small\" label='Mail' type='mail' name='mail' />  \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\nconst columns = (setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'user',\n    headerName: 'Usuario',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 220,\n    headerAlign: 'center',\n  },\n  {\n    field: 'pass',\n    headerName: 'Clave',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    renderCell: Passformat,\n  },\n  {\n    field: 'rolId', // campo en grilla\n    headerName: 'Rol',\n    width: 150,\n    editable: true,\n    renderCell: ({ value }) => value.rol_descripcion, // a visualizar\n    renderEditCell: props => <ComboBox roles={roles} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nconst roles = [  \n  { id: 1, rol_descripcion: 'administrativo' },\n  { id: 2, rol_descripcion: 'obra' },\n  { id: 3, rol_descripcion: 'manager' },\n  { id: 4, rol_descripcion: 'vista' },\n];\n\nexport function GrillaUsuario({ idSociety }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: usuarioInformation,\n    isLoading,\n    error,\n  } = useQuery(['usuario', idSociety], () => getMethod(`usuario/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idUsuario => await deleteMethod(`usuario/eliminar/${idSociety.id}`, { id: idUsuario }),\n    {\n      onMutate: async idUsuario => {\n        await queryClient.cancelQueries(['usuario', idSociety]);\n        const prevData = queryClient.getQueryData(['usuario', idSociety]);\n        const newData = prevData.filter(usuario => usuario.id !== idUsuario);\n        queryClient.setQueryData(['usuario', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idUsuario, context) => queryClient.setQueryData(['usuario', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n      async ({ field, id, value }) => \n          await postMethod(`usuario/modificar/${idSociety.id}`, {\n            id,\n            [field]: value,\n          }),\n          \n        {\n          onMutate: async ({ field, id, value }) => {\n            await queryClient.cancelQueries(['usuario', idSociety]);\n            const prevData = queryClient.getQueryData(['usuario', idSociety]);\n            // console.log('prevData', prevData);\n            const newData = [\n              ...prevData.filter(usuario => usuario.id !== id),\n              { ...prevData.find(usuario => usuario.id === id), [field]: value },\n            ];\n            // console.log('newData', newData);\n            queryClient.setQueryData(['usuario', idSociety], newData);\n            return prevData;\n          },\n          onError: (err, id, context) => queryClient.setQueryData(['usuario', idSociety], context),\n          onSettled: () => queryClient.invalidateQueries(['usuario', idSociety]),\n        }     \n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{height: '100%', width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={usuarioInformation.map(usuario => ({\n            id: usuario.id,\n            user: usuario.user,\n            mail: usuario.mail,\n            pass: usuario.pass,\n            rolId: { // es lo que manda por post a la api\n              id: usuario['rol.id'],\n              rol_descripcion: roles?.find(rol => rol.id === usuario['rol.id'])?.rol_descripcion,\n            }, \n            \n            deleteId: usuario.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          autoHeight={true}\n          disableSelectionOnClick\n          density={'comfortable'}\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction ComboBox({ roles, props }) {\n  const { id, api, field } = props;\n\n  roles = [\n    ...roles,\n    {\n      rol_descripcion: '',\n    },\n  ];\n  const [selectedRol, setSelectedRol] = useState({\n    rol_descripcion: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRol}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue);\n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}      \n      id=\"combo-box-demo\"\n      options={roles}\n      isOptionEqualToValue={(op, val) => op.rol_descripcion === val.rol_descripcion}\n      getOptionLabel={option => option.rol_descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rol\" />}\n    />\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction Passformat(params) {\n  //const sendRow = params.row.onIrDetalle;  \n  //const empresa = params.row.empresa;\n  return '***********';\n} \n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormUsuario } from 'src/components/usuarios/FormUsuario';\nimport { GrillaUsuario } from 'src/components/usuarios/GrillaUsuario';\n\nexport function Usuarios({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>Usuarios | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <FormUsuario idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaUsuario idSociety={idSociety}  loggedUser={loggedUser} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n\n                \nexport function FormProveedor({ idSociety, loggedUser }) {\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  const { mutate: addProveedor } = useMutation(\n    newProveedor => postMethod(`proveedor/agregar/${idSociety.id}`, newProveedor),\n    {\n      onMutate: async newProveedor => {\n        newProveedor.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['proveedor', idSociety]);\n        const prevData = await queryClient.getQueryData(['proveedor', idSociety]);\n        const newData = [...prevData, { ...newProveedor, id: new Date().getTime()}];\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          razonSocial: '',\n          CUIT: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          // check cuit\n          addProveedor(values);\n          resetForm();\n          setSubmitting(false);\n          \n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n            \n            <Field\n            as={TextField}\n            label='CUIT'\n            type='string'\n            required\n            size=\"small\"\n            maxLength={11}\n            name='CUIT'\n            onChange={event => onlyNumbers(event, setFieldValue, 'CUIT')}\n          />\n          \n          <Field as={TextField} required size=\"small\" label='Razón Social' type='string' name='razonSocial' />\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"El CUIT no puede estar en blanco\"\n        ok\n      />\n    </>\n  );\n}\n/* USAR !!!\nasync function checkCuit(idSociety, cuit) {\n  let url = `proveedor/mostrar/${idSociety}/${cuit}`;\n  ///return Boolean(await getMethod(url));\n  return false;\n}*/\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Autocomplete, TextField } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarCUIT } from 'src/utils/utils';\n\nconst columns = (rubros, subRubros, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'razonSocial',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 130,\n    // editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => mostrarCUIT(value),\n  },\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 140,\n    editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CBU',\n    headerName: 'CBU',\n    width: 200,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'banco',\n    headerName: 'Banco',\n    width: 120,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'nroCuenta',\n    headerName: '# Cuenta',\n    width: 140,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'rubroID',\n    headerName: 'Rubro',\n    width: 140,\n    editable: true,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBox rubros={rubros} props={props} />,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'subrubroID',\n    headerName: 'Sub Rubro',\n    width: 140,\n    editable: true,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBoxSub subRubros={subRubros} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'enviar_OP_auto',\n    headerName: 'Enviar',\n    type: 'boolean',\n    width: 50,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId } }) => (\n      <DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\nexport function GrillaProveedor({ idSociety }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n\n  const {\n    data: proveedorInformation,\n    isLoading,\n    error,\n  } = useQuery(['proveedor', idSociety], () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { data: rubros } = useQuery(['rubros', idSociety], () =>\n    getMethod(`rubro/listar/${idSociety.id}`)\n  );\n\n\n  const { data: subRubros } = useQuery(['subrubros', idSociety], () =>\n    getMethod(`subrubro/listar/${idSociety.id}/0`)\n  );\n\n  const { mutate: eliminate } = useMutation(\n    async idProveedor => await deleteMethod(`proveedor/eliminar/${idSociety.id}`, { id: idProveedor }),\n    {\n      onMutate: async idProveedor => {\n        await queryClient.cancelQueries(['proveedor', idSociety]);\n        const prevData = queryClient.getQueryData(['proveedor', idSociety]);\n        const newData = prevData.filter(proveedor => proveedor.id !== idProveedor);\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idProveedor, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`proveedor/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['proveedor', idSociety]);\n        const prevData = queryClient.getQueryData(['proveedor', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(proveedor => proveedor.id !== id),\n          { ...prevData.find(proveedor => proveedor.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['proveedor', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['proveedor', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['proveedor', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={proveedorInformation.map(proveedor => ({\n            id: proveedor.id,\n            rubroID: {\n              id: proveedor.rubroId,\n              nombre: rubros?.find(rubro => rubro.id === proveedor.rubroId)?.rubro,\n            },\n            subrubroID: {\n              id: proveedor.subrubroId,\n              nombre: subRubros?.find(subRubro => subRubro.id === proveedor.subrubroId)?.subRubro,\n            },          \n            razonSocial: proveedor.razonSocial,\n            CUIT: proveedor.CUIT,\n            mail: proveedor.mail,\n            telefono: proveedor.telefono,\n            CBU: proveedor.CBU,\n            banco: proveedor.banco,\n            nroCuenta: proveedor.nroCuenta,\n            enviar_OP_auto: proveedor.enviar_OP_auto,\n            /*enviar_OP_auto: parseInt(proveedor.enviar_OP_auto===0)? false:true,*/\n            deleteId: proveedor.id,\n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(rubros, subRubros, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction ComboBox({ rubros, props }) {\n  const { id, api, field } = props;\n\n  rubros = [\n    ...rubros,\n    {\n      rubro: '',\n    },\n  ];\n  const [selectedRubro, setSelectedRubro] = useState({\n    rubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedRubro(newValue);\n     \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      // disablePortal\n      id=\"combo-box-demo\"\n      options={rubros}\n      isOptionEqualToValue={(op, val) => op.rubro === val.rubro}\n      getOptionLabel={option => option.rubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxSub({ subRubros, props }, params) {\n  const { id, api, field } = props;\n\n  subRubros = [\n    \n    ...subRubros.filter(subR => subR.rubroId === parseInt(props?.row?.rubroID.id)),\n    {\n      subRubro: '',\n    },\n  ];\n\n  const [selectedsubRubro, setSelectedsubRubro] = useState({\n    subRubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedsubRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedsubRubro(newValue);\n      \n        \n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }}\n      // disablePortal\n      id=\"combo-box-demo\"\n      options={subRubros}\n      isOptionEqualToValue={(op, val) => op.subRubro === val.subRubro}\n      getOptionLabel={option => option.subRubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"subRubro\" />}\n    />\n  );\n}\n\n","import { Container, Box, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\n\nimport { FormProveedor } from 'src/components/proveedores/FormProveedor';\nimport { GrillaProveedor } from 'src/components/proveedores/GrillaProveedor';\n\nexport function Proveedores({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>Proveedores | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n            <Box sx={{ pt: 3 }}>\n              <FormProveedor idSociety={idSociety} loggedUser={loggedUser} />\n            </Box>\n          </Hidden> \n          <Box sx={{ pt: 3 }}>\n            <GrillaProveedor idSociety={idSociety} loggedUser={loggedUser}/>\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Button } from '@mui/material';\n\n\n// import Radio from '@mui/material/Radio';\n// import RadioGroup from '@mui/material/RadioGroup';\n/// import FormControlLabel from '@mui/material/FormControlLabel';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularPersona({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(newData => postMethod(`persona/agregar/${idSociety}`, newData), {\n    onSuccess: () => {\n      queryClient.refetchQueries(['persona', idSociety]);\n    },\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        nombre: '',\n        mail: null,\n        telefono: null,\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        let bool = await checkName(idSociety, values.nombre);\n        !bool\n          ? mutate(values) // console.log('ya lo tenés'); //cambiar por un pop up\n          : resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field as={TextField} label=\"Nombre\" type=\"string\" maxLength={40} name=\"nombre\" />\n          <Field as={TextField} label=\"Email\" type=\"string\" maxLength={100} name=\"mail\" />\n          <Field as={TextField} label=\"Teléfono\" type=\"string\" maxLength={11} name=\"telefono\" />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nasync function checkName(idSociety, nombre) {\n  let n = \"\" + nombre ;\n  // controla blanco y espacios\n  if (n.trim() === '') {\n    return true;\n  }\n  // controla si ya existe el nombre\n  let url = `persona/mostrar/${idSociety}/${nombre}`;\n  return Boolean(await getMethod(url));\n}\n","import React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Button, Box } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  // { field: 'id', headerName: 'ID', width: 100 , headerAlign: 'center',},\n  {\n    field: 'nombre',\n    headerName: 'Nombre',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    /*\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },*/\n  },\n\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    /*\n    valueFormatter: ({ value }) => {\n      value = value.split('');\n      value.splice(2, 0, '-');\n      value.splice(5, 0, '.');\n      value.splice(9, 0, '.');\n      value.splice(13, 0, '-');\n      return value.join('');\n    },*/\n  },\n\n  {\n    field: 'delete',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaPersona({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    async (id) => {\n      await deleteMethod(`persona/eliminar/${idSociety}`, id);\n    },\n    {\n      onSuccess: async () => await queryClient.refetchQueries(['persona', idSociety]),\n    }\n  );\n\n  const { data, isLoading, error } = useQuery(['persona', idSociety], () =>\n    getMethod(`persona/listar/${idSociety}`)\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    let newData = {\n      id: e.id,\n      [e.field]: e.props.value,\n    };\n    postMethod(`persona/modificar/${idSociety}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={data.map((el) => ({\n          id: el.id,\n          nombre: el.nombre,\n          mail: el.mail,\n          telefono: el.telefono,\n          CUIT: el.CUIT,\n          onDelete: () => {\n            mutate(el.id);\n          },\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        scrollbarSize\n        onEditCellChange={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@mui/material';\nimport { ManipularPersona } from 'src/components/persona/ManipularPersona';\nimport { GrillaPersona } from 'src/components/persona/GrillaPersona';\n\nexport function Persona({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Fiduciante | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <ManipularPersona idSociety={idSociety} />\n          </Box>\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaPersona idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import React from 'react';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { TextField, Button } from '@mui/material';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularEmpresa({ idSociety }) {\n  const queryClient = useQueryClient();\n  const { mutate } = useMutation(newData => postMethod(`empresa/agregar/${idSociety}`, newData), {\n    onSuccess: () => queryClient.refetchQueries(['empresas', idSociety]),\n  });\n\n  return (\n    <Formik\n      initialValues={{\n        razonSocial: '',\n        mail: '',\n        telefono: '',\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        !(await checkCuit(idSociety, values.CUIT))\n          ? mutate(values) // console.log('ya lo tenés'); //cambiar por un pop up\n          : resetForm();\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field as={TextField} label=\"Razón Social\" type=\"string\" name=\"razonSocial\" />\n          <Field as={TextField} label=\"Email\" type=\"string\" name=\"mail\" />\n\n          <Field\n            as={TextField}\n            label=\"Teléfono\"\n            type=\"string\"\n            maxLength={11}\n            name=\"telefono\"\n            onChange={event => onlyNumbers(event, setFieldValue, 'telefono')}\n          />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nasync function checkCuit(idSociety, cuit) {\n  let url = `empresa/mostrar/${idSociety}/${cuit}`;\n  return Boolean(await getMethod(url));\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}$/;\n  if (regex.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n","import React from 'react';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { Button, Box } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  // { field: 'id', headerName: 'ID', width: 100 , headerAlign: 'center',},\n  {\n    field: 'razonSocial',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'CUIT',\n    headerName: 'CUIT',\n    width: 150,\n    // editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      value = value.split('');\n      value.splice(2, 0, '-');\n      value.splice(5, 0, '.');\n      value.splice(9, 0, '.');\n      value.splice(13, 0, '-');\n      return value.join('');\n    },\n  },\n  {\n    field: 'telefono',\n    headerName: 'Teléfono',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    valueFormatter: ({ value }) => {\n      if (value) {\n        value = value.split('');\n        value.splice(2, 0, '-');\n        value.splice(7, 0, '-');\n        return value.join('');\n      }\n    },\n  },\n  {\n    field: 'mail',\n    headerName: 'Mail',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaEmpresa({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    async (id) => {\n      await deleteMethod(`empresa/eliminar/${idSociety}`, id);\n    },\n    {\n      onSuccess: async () => await queryClient.refetchQueries(['empresas', idSociety]),\n    }\n  );\n\n  const { data, isLoading, error } = useQuery(['empresas', idSociety], () =>\n    getMethod(`empresa/listar/${idSociety}`)\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    let newData = {\n      id: e.id,\n      [e.field]: e.props.value,\n    };\n    postMethod(`empresa/modificar/${idSociety}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={data.map((el) => ({\n          id: el.id,\n          razonSocial: el.razonSocial,\n          CUIT: el.CUIT,\n          mail: el.mail,\n          telefono: el.telefono,\n          onDelete: () => {\n            mutate(el.id);\n          },\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        scrollbarSize\n        onEditCellChange={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React from 'react';\nimport { Helmet } from 'react-helmet';\nimport { Box, Container } from '@mui/material';\n\nimport { ManipularEmpresa } from 'src/components/empresa/ManipularEmpresa';\nimport { GrillaEmpresa } from 'src/components/empresa/GrillaEmpresa';\n\nexport function Empresa({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Empresas | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Box sx={{ pt: 3 }}>\n            <ManipularEmpresa idSociety={idSociety} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaEmpresa idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { TextField, Button } from '@mui/material';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularFideicomiso({ idSociety }) {\n  const queryClient = useQueryClient();\n\n  const { mutate } = useMutation(\n    newData => postMethod(`fideicomiso/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: () => {\n        queryClient.refetchQueries(['fideicomiso', idSociety]);\n      },\n    }\n  );\n\n  return (\n    <Formik\n      initialValues={{\n        nombre: '',\n        fechaInicio: null,\n        fechaFin: null,\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        let bool = await checkIfNameExists(idSociety.id, values.nombre);\n        !bool && mutate(values);\n\n        resetForm();\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field\n            as={TextField}\n            required\n            label='Nombre Fideicomiso'\n            size=\"small\"\n            type='string'\n            maxLength={40}\n            name='nombre'\n          />\n          <Field name='fechaInicio' >\n            {({ field: { value, name }, form: { setFieldValue } }) => (\n              <Picker label='Inicio' value={value} setFieldValue={setFieldValue} name={name} />\n            )}\n          </Field>\n          <Field name='fechaFin'>\n            {({ field: { value, name }, form: { setFieldValue } }) => (\n              <Picker\n                label='Finalizacion'\n                value={value}\n                setFieldValue={setFieldValue}\n                name={name}\n              />\n            )}\n          </Field>\n\n          <Button type='submit' disabled={isSubmitting}>\n            Agregar\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n\n  function Picker({ value, name, setFieldValue, label }) {\n    return (\n      <LocalizationProvider dateAdapter={AdapterDateFns}>\n        <DesktopDatePicker\n          label={label}\n          value={value}\n          inputFormat='dd/MM/yyyy'\n          renderInput={params => <TextField  size=\"small\" {...params} />}\n          onChange={value => setFieldValue(name, value)}\n        />\n      </LocalizationProvider>\n    );\n  }\n\n  async function checkIfNameExists(idSociety, nombre) {\n    return Boolean(await getMethod(`fideicomiso/mostrar/${idSociety}/${nombre}`));\n  }\n}\n","import * as React from 'react';\nimport { useState, useEffect } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\n// import { Delete as DeleteIcon } from '@mui/icons-material';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\n// import { mostrarFecha } from 'src/utils/utils';\n// import { Uploader } from 'src/components/auxiliares/Uploader';\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n//const columns = (color, setColor, id,  setNewLogoFlag, setIsPromptOpen, setRowIdToDelete) => [\nconst columns = (color, setColor, id,  setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'nombre',\n    headerName: 'Nombre',\n    width: 200,\n    headerAlign: 'center',\n    align: 'left',\n  },\n  {\n    field: 'fechaInicio',\n    headerName: 'Inicio',\n    editable: true,\n    width: 170,\n    type: 'date',\n    headerAlign: 'center',      \n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n    \n  },\n  {\n    field: 'fechaFin',\n    headerName: 'Finalización',\n    editable: true,\n    width: 170,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) =>\n      new Date(value).toLocaleDateString('es-AR', {\n        year: 'numeric',\n        month: 'short',\n        timeZone: 'UTC',\n      }),\n  },\n  /*\n  {\n    field: 'cloud',\n    headerName: 'Cloud',\n    editable: true,\n    width: 200,\n    headerAlign: 'center',\n    align: 'left',\n  },*/\n\n  {\n    field: 'logo',\n    headerName: 'Logo',\n    width: 150,\n    renderCell: passedData =>\n      passedData.row.logo ? (\n        <img\n          style={{ display: 'block', margin: 'auto', width: '30%' }}\n          src={`${apiServerUrl}sociedades/${id}/${passedData.row.logo}`}\n          alt=\"logo\"\n        />\n      ): (\"\"), \n  },\n\n  {\n    field: 'colorElegido',\n    headerName: 'Color',\n    width: 150,\n    editable: false,\n    renderCell: ({ row: { colorElegido } }) => (\n      <div style={{ width: '100%', height: '100%', background: colorElegido }}></div>\n    ),\n    renderEditCell: ({ row: { colorElegido } }) => (\n      <ColorPicker\n        originalColor={colors.filter(color => color.css === colorElegido)[0]}\n        color={color}\n        setColor={setColor}\n        colorOptions={colors}\n      />\n    ),\n  },\n\n];\n\nconst colors = [\n  { label: 'red', css: 'red' },\n  { label: 'DarkGreen', css: 'DarkGreen' },\n  { label: 'MidnightBlue', css: 'MidnightBlue' },\n  { label: 'black', css: 'black' },\n  { label: 'Salmon', css: 'LightSalmon' },\n  { label: 'Khaki', css: 'Khaki' },\n  { label: 'Bisque', css: 'Bisque' },\n  { label: 'Plum', css: 'Plum' },\n  { label: 'Orchid', css: 'Orchid' },\n  { label: 'Chocolate', css: 'Chocolate' },\n  { label: 'LightSteelBlue', css: 'LightSteelBlue' },  \n  { label: 'orange', css: 'orange' },\n  { label: 'green', css: 'green' }\n \n];\n\nexport function GrillaFideicomiso({ idSociety }) {\n\n  const [color, setColor] = useState(null);\n  //const [fechaInicio, setFechaInicio] = useState(null);\n  // const [newLogoFlag, setNewLogoFlag] = useState(false);\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  // console.log(rowIdToDelete);\n\n  const {\n    data: fideicomisoInformation,\n    isLoading,\n    error,\n  } = useQuery(['fideicomiso', idSociety], () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idFideicomiso => await deleteMethod(`fideicomiso/eliminar/${idSociety.id}`, { id: idFideicomiso }),\n    {\n      onMutate: async idFideicomiso => {\n        await queryClient.cancelQueries(['fideicomiso', idSociety]);\n        const prevData = queryClient.getQueryData(['fideicomiso', idSociety]);\n        const newData = prevData.filter(fideicomiso => fideicomiso.id !== idFideicomiso);\n        queryClient.setQueryData(['fideicomiso', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idFideicomiso, context) => queryClient.setQueryData(['fideicomiso', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['fideicomiso', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`fideicomiso/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['fideicomiso', idSociety]);\n        const prevData = queryClient.getQueryData(['fideicomiso', idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(fideicomiso => fideicomiso.id !== id),\n          { ...prevData.find(fideicomiso => fideicomiso.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['fideicomiso', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['fideicomiso', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['fideicomiso', idSociety]),\n    }\n  );\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={fideicomisoInformation.map(fideicomiso => ({\n            id: fideicomiso.id,\n            nombre: fideicomiso.nombre,\n            fechaInicio: fideicomiso.fechaInicio,\n            fechaFin: fideicomiso.fechaFin,\n            colorElegido: fideicomiso.color,\n            logo: fideicomiso.logo,\n            cloud: fideicomiso.cloud,\n            deleteId: fideicomiso.id,\n          }))}\n          onCellEditCommit={modifyData}\n          //columns={columns(color, setColor, idSociety?.id, setNewLogoFlag, setIsPromptOpen, setRowIdToDelete)}\n          columns={columns(color, setColor, idSociety?.id, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\n\nfunction ColorPicker({ color, setColor, colorOptions, originalColor }) {\n  useEffect(\n    () =>\n      setColor(previousStateColor =>\n        originalColor?.css !== previousStateColor?.css ? originalColor : previousStateColor\n      ),\n    [originalColor, setColor]\n  );\n  return (\n    <Autocomplete\n      value={color}\n      onChange={(event, newValue) => {\n        setColor(newValue);\n      }}\n      options={colorOptions}\n      sx={{ width: 300 }}\n      isOptionEqualToValue={(option, value) => option.label === value.label}\n      renderInput={params => <TextField style={{ background: color?.css }} {...params} />}\n      renderOption={(props, option, c) => {\n        // console.log(props, option, c);\n        return (\n          <div {...props} style={{ background: option?.css }}>\n            {option.label}\n          </div>\n        );\n      }}\n    />\n  );\n}\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { ManipularFideicomiso } from 'src/components/fideicomiso/ManipularFideicomiso';\nimport { GrillaFideicomiso } from 'src/components/fideicomiso/GrillaFideicomiso';\n\nexport function Fideicomiso({ idSociety }) {\n  return (\n    <>\n      <Helmet>\n        <title>Fideicomisos | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <ManipularFideicomiso idSociety={idSociety} />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaFideicomiso idSociety={idSociety} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport {\n  Typography,\n  Box,\n  TextField,\n  Autocomplete,\n  createFilterOptions,\n  Dialog,\n  DialogContent,\n} from '@mui/material';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { useMutation, useQuery } from 'react-query';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nconst filter = createFilterOptions();\n\nexport function DatosPrincipalesFideicomiso({ selectedFideicomisoData, idSociety }) {\n  \n  const [managerId, setManagerId] = useState();\n  useEffect(() => setManagerId(selectedFideicomisoData?.personaId), [selectedFideicomisoData]);\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const { data: contactInfo } = useQuery(['persona', managerId], () =>\n    getMethod(`persona/mostrar/${idSociety.id}/${managerId}`)\n  );\n\n  const { data: directionInfo } = useQuery(\n    ['localización', selectedFideicomisoData?.localizacionId],\n    () =>\n      getMethod(`localizacion/mostrar/${idSociety.id}/${selectedFideicomisoData?.localizacionId}`)\n  );\n\n  const { data: peopleInfo } = useQuery(['personas'], () =>\n    getMethod(`persona/listar/${idSociety.id}`)\n  );\n\n  const { mutate: setManagerInFideicomiso } = useMutation(newData =>\n    postMethod(`fideicomiso/modificar/${idSociety.id}`, newData)\n  );\n\n  const { mutate: addNewPerson } = useMutation(\n    newData => postMethod(`persona/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: data => {\n        setManagerId(data.id);\n        setManagerInFideicomiso({\n          id: selectedFideicomisoData.id,\n          personaId: data.id,\n        });\n      },\n    }\n  );\n  // console.log('contactInfo:', contactInfo);\n\n  const rows = [\n    {\n      id: 1,\n      contacto: contactInfo?.nombre,\n      fechaInicio: selectedFideicomisoData?.fechaInicio,\n      fechaFin: selectedFideicomisoData?.fechaFin,\n      direccion: directionInfo?.direccion,\n    },\n  ];\n\n  const columns = [\n    {\n      field: 'contacto',\n      headerName: 'Contacto',\n      width: 350,\n      headerAlign: 'center',\n      align: 'center',\n    },\n    {\n      field: 'fechaInicio',\n      headerName: 'Inicio',\n      width: 160,\n      headerAlign: 'center',\n      align: 'center',\n      type: 'date',\n      nameFormatter: ({ name }) =>\n        new Date(name).toLocaleDateString('es-AR', {\n          year: 'numeric',\n          month: 'short',\n          timeZone: 'UTC',\n        }),\n      editable: true,\n    },\n    {\n      field: 'fechaFin',\n      headerName: 'Fin',\n      width: 100,\n      headerAlign: 'center',\n      align: 'center',\n      type: 'date',\n      nameFormatter: ({ name }) =>\n        new Date(name).toLocaleDateString('es-AR', {\n          year: 'numeric',\n          month: 'short',\n          timeZone: 'UTC',\n        }),\n      editable: true,\n    },\n    {\n      field: 'direccion',\n      headerName: 'Dirección',\n      width: 200,\n      editable: false,\n      headerAlign: 'center',\n      align: 'center',\n    },\n  ];\n  return (\n    <>\n      <AlertDialog isDialogOpen={isDialogOpen} setIsDialogOpen={setIsDialogOpen} />\n      <Box width={'auto'}>\n        <Typography align=\"left\" color=\"textPrimary\" variant=\"h3\">\n          {selectedFideicomisoData?.nombre}\n        </Typography>\n        {selectedFideicomisoData && (\n          <DataGrid\n            columns={columns}\n            rows={rows}\n            rowHeight={75}\n            headerHeight={35}\n            hideFooter\n            autoHeight={'false'}\n            pageSize={1}\n            onCellDoubleClick={e => {\n              if (e.field === 'contacto') {\n                setIsDialogOpen(true);\n                // console.log('isDialogOpen:', isDialogOpen);\n              }\n            }}\n          />\n        )}\n      </Box>\n    </>\n  );\n\n  function AlertDialog({ isDialogOpen, setIsDialogOpen }) {\n    return (\n      <>\n        <Dialog\n          open={isDialogOpen}\n          onClose={() => setIsDialogOpen(false)}\n          fullWidth\n          style={{ transform: 'translate(0, -200px)' }}\n        >\n          <DialogContent>\n            <Select peopleInfo={peopleInfo} closeDialog={() => setIsDialogOpen(false)} />\n          </DialogContent>\n        </Dialog>\n      </>\n    );\n  }\n\n  function Select({ peopleInfo, closeDialog }) {\n    return (\n      <Autocomplete\n        value={contactInfo?.nombre}\n        onChange={(event, newName) => {\n          if (typeof newName === 'string') {\n            //agrego desde el teclado sin ir a agregar\n            addNewPerson({ nombre: newName });\n            closeDialog();\n          } else if (newName && newName.inputValue) {\n            //agrego nuevo yendo a \"agregar\" en el dd\n            addNewPerson({ nombre: newName.inputValue });\n            closeDialog();\n          } else {\n            //elijo opción del dd\n            if (newName?.id !== managerId) {\n              setManagerId(newName.id);\n              setManagerInFideicomiso({\n                id: selectedFideicomisoData.id,\n                personaId: newName.id,\n              });\n              closeDialog();\n            }\n          }\n        }}\n        filterOptions={(options, params) => {\n          // console.log('options:', options);\n          const filtered = filter(options, params);\n          const { inputValue } = params;\n          const isExisting = options.some(option => inputValue === option.nombre);\n          if (inputValue !== '' && !isExisting) {\n            filtered.push({\n              inputValue,\n              nombre: `agregar ${inputValue}`,\n            });\n          }\n\n          return filtered;\n        }}\n        selectOnFocus\n        clearOnBlur\n        handleHomeEndKeys\n        options={peopleInfo}\n        getOptionLabel={option => {\n          if (typeof option === 'string') {\n            return option;\n          }\n          if (option.inputValue) {\n            return option.inputValue;\n          }\n          return option.nombre;\n        }}\n        renderOption={(props, option) => <li {...props}>{option.nombre}</li>}\n        freeSolo\n        renderInput={params => <TextField {...params} />}\n      />\n    );\n  }\n}\n","import { useState } from 'react';\nimport { TextField, Button, Autocomplete } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\n\nimport { getMethod, postMethod } from 'src/utils/api';\n\nexport function ManipularDetalleFideicomiso({ idSociety, selectedFideicomisoData }) {\n  // console.log('selectedFideicomisoData', selectedFideicomisoData);\n  const { data: typesOfProducts } = useQuery(\n    ['typesOfProducts'],\n    () => getMethod(`configuracion/listar/${idSociety.id}/tipo_producto`),\n    {\n      initialData: [\n        {\n          id: 7,\n          descripcion: 'UF',\n          codigo: 1,\n          descripcionLarga: 'Unidad funcional',\n        },\n        {\n          id: 8,\n          descripcion: 'Cod. Nom.',\n          codigo: 2,\n          descripcionLarga: 'Código de nomenclatura',\n        },\n        {\n          id: 9,\n          descripcion: 'Cochera',\n          codigo: 3,\n          descripcionLarga: 'Cochera Auto',\n        },\n        {\n          id: 10,\n          descripcion: 'Cochera Moto',\n          codigo: 4,\n          descripcionLarga: 'Cochera Moto',\n        },\n        {\n          id: 11,\n          descripcion: 'Baulera',\n          codigo: 5,\n          descripcionLarga: 'Baulera',\n        },\n        {\n          id: 12,\n          descripcion: 'Local',\n          codigo: 6,\n          descripcionLarga: 'Local comercial',\n        },\n        {\n          id: 13,\n          descripcion: 'Lote',\n          codigo: 7,\n          descripcionLarga: 'Lote, terreno',\n        },\n        {\n          id: 14,\n          descripcion: 'Casa',\n          codigo: 8,\n          descripcionLarga: 'Casa',\n        },\n        {\n          id: 15,\n          descripcion: 'Bungalo',\n          codigo: 9,\n          descripcionLarga: 'Bungalo',\n        },\n      ],\n    }\n  );\n  // console.log('typesOfProducts:', typesOfProducts);\n\n  const queryClient = useQueryClient();\n  const { mutate: addProduct } = useMutation(\n    newData => postMethod(`producto/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['productos', idSociety, selectedFideicomisoData]),\n    }\n  );\n\n  const [typeInForm, setTypeInForm] = useState(null);\n\n  return (\n    <Formik\n      initialValues={{\n        code: '',\n        type: '',\n        description: '',\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        // console.log('values:', values);\n        addProduct({\n          fideicomisoId: selectedFideicomisoData.id,\n          codigo: values.code,\n          descripcion: values.description,\n          tipo: values.type.codigo,\n        });\n        resetForm();\n        setTypeInForm(null);\n        setSubmitting(false);\n      }}\n    >\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n          <Field\n            as={TextField}\n            label=\"Código\"\n            type=\"string\"\n            maxLength={40}\n            size={'small'}\n            name=\"code\"\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label=\"Tipo\"\n            //disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setTypeInForm(newValue);\n              setFieldValue('type', newValue);\n            }}\n            value={typeInForm}\n            getOptionLabel={option => option.descripcion}\n            isOptionEqualToValue={(option, value) => option.descripcion === value.descripcion}\n            options={typesOfProducts}\n            renderInput={params => <TextField {...params} label=\"Tipo\" />}\n          />\n\n          <Field\n            as={TextField}\n            size={'small'}\n            label=\"Descripcion\"\n            type=\"string\"\n            maxLength={100}\n            name=\"description\"\n          />\n\n          <Button type=\"submit\" disabled={isSubmitting}>\n            Agregar\n          </Button>\n          \n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Box, Button } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\n\nconst columns = [\n  {\n    field: 'codigo',\n    headerName: 'Código',\n    width: 140,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },\n\n  {\n    field: 'metros',\n    headerName: 'Metros',\n    type: 'number',\n    width: 130,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n  },\n\n  {\n    field: 'precioULT',\n    type: 'number',\n    headerName: 'Precio',\n    width: 150,\n    editable: true,\n    headerAlign: 'center',\n    align: 'right',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: '',\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n];\n\nexport function GrillaDetalleFideicomiso({ idSociety, selectedFideicomisoData }) {\n  // console.log('idSociety:', idSociety);\n  // console.log('selectedFideicomisoData:', selectedFideicomisoData);\n  const {\n    data: products,\n    isLoading,\n    error,\n  } = useQuery(['productos', idSociety, selectedFideicomisoData], () =>\n    getMethod(`producto/listar/${idSociety?.id}/${selectedFideicomisoData?.id}`)\n  );\n\n  const queryClient = useQueryClient();\n\n  const { mutate: deleteProduct } = useMutation(\n    async id =>\n      await deleteMethod(`producto/eliminar/${idSociety?.id}`, {\n        fideicomisoId: selectedFideicomisoData?.id,\n        id: id,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['productos', idSociety, selectedFideicomisoData]),\n    }\n  );\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  function handleCellModification(e) {\n    // console.log('e:', e);\n    let newData = {\n      id: e.id,\n      idFideicomiso: selectedFideicomisoData?.id,\n      [e.field]: e.value,\n    };\n    // console.log('newData:', newData);\n    postMethod(`producto/modificar/${idSociety?.id}`, newData);\n  }\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        rows={products.map(el => ({\n          id: el.id,\n          codigo: el.codigo,\n          metros: el.metros,\n          precioULT: el.precioULT,\n          onDelete: () => deleteProduct(el.id),\n        }))}\n        columns={columns}\n        pageSize={25}\n        disableSelectionOnClick\n        autoHeight\n        sortModel={[\n          {\n            field: 'codigo',\n            sort: 'asc',\n          },\n        ]}\n        scrollbarSize\n        onCellEditCommit={handleCellModification}\n        components={{\n          Toolbar: CustomToolbar,\n        }}\n      />\n    </div>\n  );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={closeToast}\n        >\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant=\"contained\"\n          color=\"secondary\"\n          size=\"small\"\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}\n        >\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import { useParams } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport { getMethod } from 'src/utils/api';\nimport { Container, Box, Typography } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { DatosPrincipalesFideicomiso } from 'src/components/fideicomiso/DatosPrincipalesFideicomiso';\nimport { ManipularDetalleFideicomiso } from 'src/components/detalleFideicomiso/ManipularDetalleFideicomiso';\nimport { GrillaDetalleFideicomiso } from 'src/components/detalleFideicomiso/GrillaDetalleFideicomiso';\n\nexport function DetalleFideicomiso({ idSociety }) {\n  const { nombreFideicomiso } = useParams();\n\n  const { data } = useQuery(['fideicomiso', idSociety.id], () =>\n    getMethod(`fideicomiso/listar/${idSociety.id}`)\n  );\n\n  const selectedFideicomisoData = data?.find(el => el.nombre === nombreFideicomiso);\n\n  return (\n    <>\n      <Helmet>\n        <title>\n          {nombreFideicomiso} | {idSociety?.nombre}\n        </title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container >\n          <Box sx={{ pt: 3 }}>\n            <DatosPrincipalesFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n              Grilla de Productos\n            </Typography>\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <ManipularDetalleFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaDetalleFideicomiso\n              idSociety={idSociety}\n              selectedFideicomisoData={selectedFideicomisoData}\n            />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { IconButton, Collapse, Box, TextField, Hidden, FormControlLabel, Checkbox, Button, Autocomplete, Alert } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\n\nexport function ManipularOP({ idSociety, loggedUser, fideicomisos, proveedores, ddfacturas, ddfacturasBlue  }) {\n\n  var verCheckBlue = false;\n  if(loggedUser?.['rol.factura'] ==='total'){verCheckBlue = true;}\n  const [chkblue, setChkblue] = useState(true);\n\n  const queryClient = useQueryClient();\n\n  const { mutate: addOP } = useMutation(\n    newData => postMethod(`OP/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety])\n    }\n  );\n\n\n  const [fideInForm, setFideInForm] = useState(null);\n  const [rsInForm, setRsInForm] = useState(null);\n  const [factInForm, setFactInForm] = useState(null);  \n  const [open, setOpen] = useState(false);\n  \n  return (\n    <Formik\n      initialValues={{\n        \n        numero: '',\n        montoTotal: '',\n        fechaIngreso: new Date(),\n\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        // console.log(11111, chkblue);\n        addOP({\n\n          fideicomisoId: values.fideicomiso.id,\n          empresaId: values.empresa.id,\n          rubroId: values.empresa.rubroId,\n          subRubroId: values.empresa.subrubroId,\n          facturaId: values.factura.id,\n          blue: !chkblue? 1:0,\n          creador: loggedUser.id ,\n                    \n        });\n        \n        //resetForm();\n        setOpen(true);\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Fideicomiso'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFideInForm(newValue);\n              setFieldValue('fideicomiso', newValue);\n            }}\n            value={fideInForm}\n            getOptionLabel={option => option.nombre}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(fideicomisos? fideicomisos:[])}\n            renderInput={params => <TextField {...params} label='Fideicomiso' />}\n          />\n          \n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Razon Social'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setRsInForm(newValue);\n              setFieldValue('empresa', newValue);\n            }}\n            value={rsInForm}\n            getOptionLabel={option => option.razonSocial}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField {...params} label='Razon Social' />}\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Factura N॰'\n            disablePortal\n            style={{ width: '230px', display: !chkblue?'none':'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFactInForm(newValue);\n              setFieldValue('factura', newValue);\n            }}\n            value={factInForm}\n            getOptionLabel={option => option.numero}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={ddfacturas? ddfacturas?.filter(factura => factura?.empresaId === rsInForm?.id):[]}\n            renderInput={params => <TextField {...params} label='Factura N॰' />}\n          />\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Factura Blue N॰'\n            disablePortal\n            style={{ width: '230px', display: chkblue?'none':'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFactInForm(newValue);\n              setFieldValue('factura', newValue);\n            }}\n            value={factInForm}\n            getOptionLabel={option => option.numero}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={ddfacturasBlue? ddfacturasBlue?.filter(factura => factura?.empresaId === rsInForm?.id):[]}\n            renderInput={params => <TextField {...params} label='Factura Blue N॰' />}\n          />\n\n          &nbsp;&nbsp;          \n          <Hidden  smUp={( !verCheckBlue)} >        \n          <FormControlLabel \n            control={ <Checkbox  id={'blue'}  name={'blue'}             \n            onChange={(event) => onlyCheck(event, setFieldValue, 'blue', chkblue, setChkblue)}\n            /> }   label=\"Blue\"  />\n          </Hidden>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n          <Button id='bagregar' variant=\"text\" type='submit' disabled={isSubmitting}>\n            Agregar\n          </Button>\n\n        \n\n          <Box sx={{ width: '100%' }}>\n            <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>         \n          </Box>\n\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\nfunction onlyCheck(event, setFieldValue, typeOfData, chkblue, setChkblue) {\n  event.preventDefault();\n  //const { value } = event.target;\n  setChkblue(!chkblue);\n  if(chkblue){ \n    setFieldValue(typeOfData, 'on');\n    // console.log(55555, typeOfData, value, chkblue);\n  }else{\n    setFieldValue(typeOfData, 'off');\n    // console.log(66666, typeOfData, value, chkblue);\n  }\n  \n}\n\n\n\n","import { useState } from 'react';\nimport { TextField, Autocomplete } from '@mui/material';\nimport { Formik, Form, Field } from 'formik';\n\nexport function FiltroOP({setFiltFide, setFiltRS, setFiltEst, idSociety, loggedUser,  fideicomisos, proveedores, ddfacturas, ddfacturasBlue  }) {\n\n  var estados = JSON.parse(localStorage.getItem(\"estados\"));\n  \n  const [fideInForm, setFideInForm] = useState(null);\n  const [rsInForm, setRsInForm] = useState(null);\n  const [estadoInForm, setEstadoInForm] = useState(null);  \n\n  function filterOP(campo, newValue){\n\n    // let arr = filt;\n    let id = -1\n    if(newValue?.id){\n      id = newValue.id;\n    }\n    \n    if(campo ==='fide'){setFiltFide(id);}\n    if(campo ==='rs'){setFiltRS(id);}\n    if(campo ==='estado'){setFiltEst(id);}\n\n  }  \n  \n  return (\n    <Formik\n      initialValues={{\n        \n        numero: '',\n        montoTotal: '',\n        fechaIngreso: new Date(),\n\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n         \n        // \n\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            \n            label='Filtrar por Fideicomiso'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFideInForm(newValue);\n              filterOP('fide', newValue);\n            }}\n            value={fideInForm}\n            getOptionLabel={option => option.nombre}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(fideicomisos? fideicomisos:[])}\n            renderInput={params => <TextField variant=\"standard\" {...params} label='Filtrar por Fideicomiso' />}\n          />\n          \n          &nbsp;\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Filtrar por Razon Social'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setRsInForm(newValue);\n              filterOP('rs', newValue);\n            }}\n            value={rsInForm}\n            getOptionLabel={option => option.razonSocial}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField variant=\"standard\" {...params} label='Filtrar por Razon Social' />}\n          />\n          &nbsp;\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Filtrar por Estado'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setEstadoInForm(newValue);\n              filterOP('estado', newValue);\n            }}\n            value={estadoInForm}\n            getOptionLabel={option => option.descripcion}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(estados? estados:[])}\n            renderInput={params => <TextField variant=\"standard\" {...params} label='Filtrar por Estado' />}\n          />\n        \n        </Form>\n      )}\n    </Formik>\n  );\n}\n","import React from 'react';\nimport {View, Text, Link, StyleSheet } from '@react-pdf/renderer';\n\n \nconst styles = StyleSheet.create({\n\n    container: {\n        flexDirection: 'row',\n        //borderBottomColor: '#bff0fd',\n        //backgroundColor: '#bff0fd',\n        borderBottomWidth: 1,\n        alignItems: 'center',\n        height: 21,\n        fontSize: 10,\n        textAlign: 'center',\n        fontStyle: 'bold',\n        flexGrow: 1,\n    },\n\n\n  row: {\n    flexDirection: 'row',\n    //borderBottomColor: '#bff0fd',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  description: {\n      width: '35%',\n      textAlign: 'left',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      paddingLeft: 8,\n  },\n  qty: {\n      width: '35%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'left',\n      paddingLeft: 8,\n      // paddingRight: 8,\n  },\n  rate: {\n      width: '15%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n  amount: {\n    width: '15%'\n},\n  amountRow: {\n      width: '15%',\n      textAlign: 'right',\n      paddingRight: 8,\n  },\n});\n\n\n  const tablaFacturas = ({dataOP, dataFacturas}) => (\n   \n   <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }}>\n       \n       <View /* Encabezado*/   \n       style={[styles.container, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color2:'#ffffff'}]}>\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Proveedor</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Detalle</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Nº Factura</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Nº OC</Text>\n            <Text style={[styles.amount, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Importe</Text>\n      </View>\n  \n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>  <Link src={dataFacturas?.item[0]?.link} >{dataFacturas?.item[0]?.numero}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[0]? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataFacturas?.item[0]?.montoTotal)):\"\"}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>  <Link src={dataFacturas?.item[1]?.link} >{dataFacturas?.item[1]?.numero}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[1]? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataFacturas?.item[1]?.montoTotal)):\"\"}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>  <Link src={dataFacturas?.item[2]?.link} >{dataFacturas?.item[2]?.numero}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[2]? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataFacturas?.item[2]?.montoTotal)):\"\"}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>  <Link src={dataFacturas?.item[3]?.link} >{dataFacturas?.item[3]?.numero}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[3]? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataFacturas?.item[3]?.montoTotal)):\"\"}</Text>\n      </View>\n\n      <View  /* 5 filas fijas de factura */      \n             style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n            <Text style={[styles.description, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.empresas[0]?.razonSocial}</Text>\n            <Text style={[styles.qty, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.detalle}</Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>  <Link src={dataFacturas?.item[4]?.link} >{dataFacturas?.item[4]?.numero}</Link></Text>\n            <Text style={[styles.rate, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]?.txtOC}</Text>\n            <Text style={[styles.amountRow, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataFacturas?.item[4]? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataFacturas?.item[4]?.montoTotal)):\"\"}</Text>\n      </View>\n\n\n\n\n    </View>\n  );\n  \n  export default tablaFacturas","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst styles = StyleSheet.create({\n\n  espacio: { \n    height: 8,\n  },\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  col1: {\n    width: '11%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col2: {\n    width: '55%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col3: {\n    width: '33%',\n    textAlign: 'center',\n    paddingLeft: 8,\n  },\n\n});\n\n\n\n  const tablaTEC = ({dataOP}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }} >\n       \n       <View style={styles.espacio} >\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>Detalles:</Text>\n            <Text style={styles.col2}>{dataOP?.descripcion?.slice(0, 44)}</Text>\n            <Text style={styles.col3}></Text>\n      </View>\n       \n  \n       <View style={styles.row} >\n            <Text style={styles.col1}></Text>\n            <Text style={styles.col2}>{dataOP?.descripcion?.slice(45, 99)}</Text>\n            <Text style={styles.col3}>Aprobado por {dataOP?.auth_obra[0]?.usuarios[0]?.user}</Text>\n      </View>    \n\n    </View>\n  );\n  \n  export default tablaTEC","import React from 'react';\nimport {View, Text, StyleSheet, Link } from '@react-pdf/renderer';\n\n\nconst styles = StyleSheet.create({\n\n  espacio: { \n    height: 8,\n  },\n\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 21,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  rowbis: {\n    flexDirection: 'row',\n    alignItems: 'left',\n    height: 24,\n    fontSize: 10,\n    fontStyle: 'bold',\n  },\n  col1: {\n    width: '33%',\n    textAlign: 'right',\n    paddingLeft: 8,\n  },\n  col1bis: {\n    width: '33%',\n    textAlign: 'right',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n  col2bis: {\n    width: '33%',\n    textAlign: 'center',\n    backgroundColor: '#B4B4B4',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n  col3: {\n    width: '33%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n  col3bis: {\n    width: '33%',\n    textAlign: 'center',\n    paddingTop: 5,\n    paddingLeft: 8,\n  },\n\n});\n\n  const tablaADM = ({dataOP}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', }} >\n          \n       <View style={styles.espacio} >\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n            <Text style={styles.col1}> </Text>\n      </View>\n       \n  \n       <View style={styles.row} >\n            <Text style={styles.col1}>FACTURAS:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.monto? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.monto)):\"\"}</Text>\n            <Text style={styles.col3}></Text>\n      </View>   \n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET GAN:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_GAN? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.RET_GAN)):\"\"}</Text>\n            <Text style={styles.col3}> <Link src={dataOP?.COMP_GAN} >{dataOP?.COMP_GAN? \" cert..\":''}</Link>   </Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET IVA:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_IVA? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.RET_IVA)):\"\"}</Text>\n            <Text style={styles.col3}> <Link src={dataOP?.COMP_IVA} >{dataOP?.COMP_IVA? \" cert..\":''}</Link> </Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>RET SUSS:</Text>\n            <Text style={{ width: '33%', textAlign: 'center',borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color: '#ffffff', borderBottomWidth: 1, paddingLeft: 8,}} >{dataOP?.RET_SUSS? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.RET_SUSS)):\"\"}</Text>\n            <Text style={styles.col3}> <Link src={dataOP?.COMP_SUSS} >{dataOP?.COMP_SUSS? \" cert..\":''}</Link></Text>\n      </View>\n\n      <View style={styles.rowbis} >\n            <Text style={styles.col1bis}>Monto a Abonar:</Text>\n            <Text style={styles.col2bis}>${dataOP?.monto_a_pagar? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.monto_a_pagar)):\"\"}</Text>\n            <Text style={styles.col3bis}>Aprobado por {dataOP?.auth_adm[0]? dataOP.auth_adm[0].usuarios[0]?.user:\"\"}</Text>\n      </View>\n\n     \n\n    </View>\n  );\n  \n  export default tablaADM","import React from 'react';\nimport {View, Text, Link, StyleSheet } from '@react-pdf/renderer';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst styles = StyleSheet.create({\n\n  container: {\n      flexDirection: 'row',\n      //borderBottomColor: '#bff0fd',\n      //backgroundColor: '#bff0fd',\n      borderBottomWidth: 1,\n      alignItems: 'center',\n      height: 21,\n      fontSize: 10,\n      textAlign: 'center',\n      fontStyle: 'bold',\n      flexGrow: 1,\n  },\n\n\n  row: {\n    flexDirection: 'row',\n    // borderBottomColor: '#bff0fd',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 8,\n    fontStyle: 'bold',\n  },\n  col1: {\n      width: '16%',\n      textAlign: 'left',\n      //borderRightColor: bcolor,\n      borderRightWidth: 1,\n      paddingLeft: 5,\n  },\n  col2: {\n      width: '20%',\n      //borderRightColor: '#bff0fd',\n      borderRightWidth: 1,\n      textAlign: 'left',\n      paddingLeft: 5,\n  },\n  col3: {\n      width: '20%',\n      //borderRightColor: '#bff0fd', son 2\n      borderRightWidth: 1,\n      textAlign: 'left',\n      paddingLeft: 5,\n  },\n  col4: {\n    width: '12%',\n    //borderRightColor: '#bff0fd',\n    borderRightWidth: 1,\n    textAlign: 'center',\n    paddingLeft: 5,\n},\n  col5: {\n    width: '12%',\n    textAlign: 'right',\n    paddingRight: 5,\n  },\n  rowf: {\n    flexDirection: 'row',\n    borderBottomColor: '#ffffff',\n    borderBottomWidth: 1,\n    alignItems: 'center',\n    height: 21,\n    fontSize: 8,\n    fontStyle: 'bold',\n  },\n  descriptionf: {\n    width: '88%',\n    textAlign: 'right',\n    //borderRightColor: '#bff0fd',\n    borderRightWidth: 1,\n    paddingRight: 8,\n  },\n  totalf: {\n    width: '12%',\n    textAlign: 'right',\n    paddingRight: 8,\n  },\n});\n\n\n  const tablaPagos = ({dataOP, arr_id, arr_banco, arr_cid, arr_cuenta}) => (\n    <View style={{ flexDirection: 'row',flexWrap: 'wrap', marginTop: 8, borderWidth: 1, borderColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', }}>\n       \n      <View /* Encabezado*/   \n       style={[styles.container, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff', backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color2:'#ffffff'}]}>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Modo</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Banco</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Cuenta Nro</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Comprobante</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>Fecha</Text>\n        <Text style={styles.col5}>Monto</Text>\n        \n      </View> \n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo1}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco1)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro1)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri1} >{dataOP?.OPpago?.descri1? \" ver.. -\":''}</Link>{\" \" + dataOP?.OPpago?.descri12? dataOP?.OPpago?.descri12:\"\"}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha1)}</Text>            \n        <Text style={styles.col5}>{dataOP?.OPpago?.monto1? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.OPpago?.monto1)):\"\"}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo2}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco2)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro2)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri2} >{dataOP?.OPpago?.descri2? \" ver.. -\":''}</Link>{\" \" + dataOP?.OPpago?.descri22? dataOP?.OPpago?.descri22:\"\"}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha2)}</Text>            \n        <Text style={styles.col5}>{dataOP?.OPpago?.monto2? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.OPpago?.monto2)):\"\"}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo3}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco3)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro3)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri3} >{dataOP?.OPpago?.descri3? \" ver.. -\":''}</Link>{\" \" + dataOP?.OPpago?.descri32? dataOP?.OPpago?.descri32:\"\"}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha3)}</Text>            \n        <Text style={styles.col5}>{dataOP?.OPpago?.monto3? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.OPpago?.monto3)):\"\"}</Text>\n      </View>\n\n      <View style={[styles.row, { borderBottomColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]} >\n      <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {dataOP?.OPpago?.modo4}</Text>\n        <Text style={[styles.col1, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_banco[arr_id.indexOf(dataOP?.OPpago?.banco4)]}</Text>\n        <Text style={[styles.col2, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {arr_cuenta[arr_cid.indexOf(dataOP?.OPpago?.nro4)]}</Text>\n        <Text style={[styles.col3, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> <Link src={dataOP?.OPpago?.descri4} >{dataOP?.OPpago?.descri4? \" ver.. -\":''}</Link>{\" \" + dataOP?.OPpago?.descri42? dataOP?.OPpago?.descri42:\"\"}</Text>\n        <Text style={[styles.col4, { borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}> {mostrarFecha(dataOP?.OPpago?.fecha4)}</Text>            \n        <Text style={styles.col5}>{dataOP?.OPpago?.monto4? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(dataOP?.OPpago?.monto4)):\"\"}</Text>\n      </View>   \n\n      <View style={styles.rowf}>\n            <Text style={[styles.descriptionf,{ borderRightColor: dataOP? dataOP?.fideicomisos[0]?.color:'#ffffff' }]}>TOTAL</Text>\n            <Text style={styles.col5}>{dataOP?.OPpago?.monto1? Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number((parseFloat(dataOP?.OPpago?.monto1? dataOP?.OPpago?.monto1:0) + parseFloat(dataOP?.OPpago?.monto2? dataOP?.OPpago?.monto2:0)+ parseFloat(dataOP?.OPpago?.monto3? dataOP?.OPpago?.monto3:0) + parseFloat(dataOP?.OPpago?.monto4? dataOP?.OPpago?.monto4:0)))):\"\"}</Text>\n      </View>\n      \n      \n\n    </View>\n  );\n  \n  export default tablaPagos","import React from 'react';\nimport {View, Text, StyleSheet } from '@react-pdf/renderer';\n\n\nconst borderColor = '#90e5fc';\nconst styles = StyleSheet.create({\n    tableContainer: {\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        marginTop: 8,\n\n    \n    },\n    container: {\n      flexDirection: 'row',\n\n      borderBottomWidth: 1,\n      alignItems: 'center',\n      height: 21,\n      textAlign: 'center',\n      fontStyle: 'bold',\n      flexGrow: 1,\n  },\n  description: {\n      width: '60%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  qty: {\n      width: '10%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  rate: {\n      width: '15%',\n      borderRightColor: borderColor,\n      borderRightWidth: 1,\n  },\n  amount: {\n      width: '15%'\n  },\n\n  espacio: { \n    height: 8,\n  },\n\n  row: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    height: 15,\n    fontSize: 7,\n    fontStyle: 'bold',\n  },\n\n  col1: {\n    width: '30%',\n    textAlign: 'right',\n    paddingLeft: 8,\n  },\n  col2: {\n    width: '30%',\n    textAlign: 'left',\n\n    paddingLeft: 8,\n  },\n\n  col3: {\n    width: '40%',\n    textAlign: 'left',\n    paddingLeft: 8,\n  },\n\n\n});\n\n  const tablaPie = ({dataOP}) => (\n    <View style={styles.tableContainer}>\n\n       <View style={styles.row} >\n            <Text style={styles.col1}>CBU:</Text>\n            <Text style={styles.col2}>{dataOP?.empresas[0]?.CBU}</Text>\n            <Text style={styles.col3}>Cuenta Bancaria: {dataOP?.empresas[0]?.nroCuenta}</Text>\n      </View>\n\n      <View style={styles.row} >\n            <Text style={styles.col1}>CUIT:</Text>\n            <Text style={styles.col2}>{dataOP?.empresas[0]?.CUIT}</Text>\n            <Text style={styles.col3}>Email:   {dataOP?.empresas[0]?.mail}</Text>\n      </View>      \n     \n\n    </View>\n  );\n  \n  export default tablaPie","import React from 'react';\nimport { Page, Document, Image } from '@react-pdf/renderer';\nimport TablaFacturas from './tablaFacturas';\nimport TablaTEC from './tablaTEC';\nimport TablaADM from './tablaADM';\nimport TablaPagos from './tablaPagos';\nimport TablaPie from './tablaPie';\nimport {Text, View, StyleSheet } from '@react-pdf/renderer';\nimport { mostrarFecha } from 'src/utils/utils';\n\nconst styles = StyleSheet.create({\n    page: {\n        fontFamily: 'Helvetica',\n        fontSize: 11,\n        paddingTop: 10,\n        paddingLeft:60,\n        paddingRight:60,\n        lineHeight: 1.5,\n        flexDirection: 'column',\n    }, \n    logo: {\n        height: 43,\n        marginLeft: 'auto',\n        marginRight: 'auto'\n    },\n    titleContainer:{\n      flexDirection: 'row',\n      marginTop: 24,\n    },\n    reportTitle:{\n        color: '#101010',\n        letterSpacing: 4,\n        fontSize: 22,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n    reportTitleFide:{\n        \n        letterSpacing: 4,\n        fontSize: 22,\n        textAlign: 'center',\n        textTransform: 'uppercase',\n    },\n    subreportTitle:{\n      color: '#101010',\n      letterSpacing: 4,\n      fontSize: 18,\n      textAlign: 'center',\n      textTransform: 'uppercase',\n    },\n    saltolinea:{\n        fontSize: 8,\n    },\n    invoiceNoContainer: {\n      flexDirection: 'row',\n      marginTop: 36,\n      justifyContent: 'flex-end'\n    },\n    invoiceDateContainer: {\n        flexDirection: 'row',\n        justifyContent: 'flex-end'\n    },\n    invoiceDate: {\n            fontSize: 12,\n            fontStyle: 'bold',\n    },\n\n  });\n\n  var arr_id = [];\n  var arr_banco = [];\n  var arr_cid = [];\n  var arr_cuenta = [];\n  \n  if(JSON.parse(localStorage.getItem(\"bs\"))){\n\n    var bancos = JSON.parse(localStorage.getItem(\"bs\"));\n    var banco_en_blanco = {id:0, banco:\"\", descripcionLarga:\"\" };\n    bancos.push(banco_en_blanco);\n\n\n    for (var i = 0; i < bancos.length; i++) {\n        arr_id.push(bancos[i].id);\n        arr_banco.push(bancos[i].banco);\n    }   \n\n    var cuentasbanco = JSON.parse(localStorage.getItem(\"co\"));  \n    var cuenta_en_blanco = {id: 0,  bancoId: 0,  cuentaBanco: \"\",  descripcionLarga: \"\",  bancos: [{banco: \"\"}]};\n    cuentasbanco.push(cuenta_en_blanco);\n\n\n    for (var j= 0; j < cuentasbanco.length; j++) {\n        arr_cid.push(cuentasbanco[j].id);\n        arr_cuenta.push(cuentasbanco[j].cuentaBanco);\n    } \n\n  }\n  \n\n  const orden_de_pago = ({dataOP, dataFacturas, apiServerUrl, idSociedad}) => (\n\n            <Document >\n                <Page size=\"A4\" style={styles.page}> \n\n\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>  \n\n                    <View style={{flexDirection: 'row',marginLeft: '0',marginRight: '0'}} >\n                        <Text style={[styles.reportTitleFide, {width: (dataOP? 100 - dataOP?.fideicomisos[0]?.ancho_logo + '%':'75%'), color: dataOP?.fideicomisos[0]?.color}]}>{dataOP?.fideicomisos[0]?.titulo}</Text>\n                        <View style={{width: dataOP? (dataOP?.fideicomisos[0]?.ancho_logo + '%'):'25%' }} >\n                        <Image style={[styles.logo, {backgroundColor: dataOP? dataOP?.fideicomisos[0]?.color3:'#FFFFFF' }]} src={{ uri: `${apiServerUrl}/sociedades/${idSociedad}/${dataOP? dataOP?.fideicomisos[0]?.logo:'logo.png'}` , method: \"GET\", headers: { \"Cache-Control\": \"no-cache\" }, body: \"\" }} />                   \n                        </View>\n                    </View>\n\n                \n\n                    <View style={styles.titleContainer}>\n                        <Text style={styles.reportTitle}>SOLICITUD DE PAGO     Nº\t{dataOP?.numero}</Text>\n                        \n                    </View>\n\n                    <View style={styles.invoiceDateContainer}>\n                        <Text style={styles.label}>Fecha: </Text>\n                        <Text >{mostrarFecha(dataOP?.createdAt)}</Text>\n                    </View >\n\n             \n\n                    <TablaFacturas dataOP={dataOP} dataFacturas={dataFacturas} />\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>\n\n\n                    <View >\n                        <Text style={styles.subreportTitle}>APROBACIÓN TÉCNICA</Text>                       \n                    </View>\n                    <TablaTEC dataOP={dataOP} />\n                   \n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View>\n                    <View >\n                        <Text style={styles.subreportTitle}>APROBACIÓN ADMINISTRATIVA</Text>                       \n                    </View>\n                    <TablaADM dataOP={dataOP} />\n                    <View >\n                        <Text style={styles.saltolinea}> </Text>                       \n                    </View> \n\n                    <View >\n                        <Text style={styles.subreportTitle}>PAGO</Text>                       \n                    </View>                   \n                    <TablaPagos dataOP={dataOP} arr_id={arr_id} arr_banco={arr_banco} arr_cid={arr_cid} arr_cuenta={arr_cuenta} />\n\n                    <TablaPie dataOP={dataOP} />\n\n                </Page>\n            </Document>\n        );\n  \n  export default orden_de_pago","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Box, Button, TextField, Avatar, Autocomplete, Hidden} from '@mui/material';\nimport { IconButton, Collapse, Alert } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PDFDownloadLink, pdf } from \"@react-pdf/renderer\";\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\nimport { darken, lighten } from '@mui/material/styles';\nimport { NavLink as RouterLink } from 'react-router-dom';\n\nconst getBackgroundColor = (color, mode) =>\n  mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6);\n\nconst getHoverBackgroundColor = (color, mode) =>\n  mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5);\n  \n\nvar miOP={};\nvar fa={};\nvar idSociedad=0;\n\n\nconst columns = (verColumnBlue, puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete) => [\n  \n  {\n    field: 'id',\n    headerName: 'Num',\n    width: 55,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_0\n\n  }, \n  {\n    field: 'blue',\n    headerName: 'Blue',\n    hide: !verColumnBlue,\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: ({ value }) => value===0?'' :<Avatar sx={{ bgcolor: '#3944BC' }} >B</Avatar>,\n  },\n  {\n    field: 'createdAt',\n    headerName: 'Fecha',\n    width: 120,\n    type: 'date',\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => new Date(value).toLocaleDateString('es-AR', { timeZone: 'UTC' }),\n  },\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'numero',\n    headerName: 'Numero',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    renderCell: IrDetalleOP_2,    \n  },\n  {\n    field: 'empresa',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },  \n  {\n    field: 'monto',\n    headerName: 'Monto',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    align: 'left',    \n  },\n  {\n    field: 'estadoOP', // campo en grilla\n    headerName: 'Estado',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxEst estados={estados} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'estadoRET', // campo en grilla\n    headerName: 'Retenciones',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxRet retenciones={retenciones} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'facturas',\n    headerName: 'Facturas',\n    width: 140,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { misFacturas }}) => misFacturas?.map(({numero}) => numero)?.join(', '), \n  },\n  {\n    field: 'RET_GAN',\n    headerName: 'GAN',\n    width: 120,\n    hide: true,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_IVA',\n    headerName: 'IVA',\n    width: 120,\n    hide: true,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_SUSS',\n    headerName: 'SUSS',\n    width: 120,\n    hide: true,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'retencion',\n    hide: true,\n  },\n\n  {\n    field: 'aprobado_obra',\n    hide: true,\n  },\n  {\n    field: 'aprobado obra',\n    headerName: 'Ap. Obra',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonObraAuthRow,\n  },\n  {\n    field: 'aprobado_adm',\n    hide: true,\n  },\n  {\n    field: 'aprobado adm',\n    headerName: 'Ap. ADM',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonAdmAuthRow,\n  },\n  {\n    field: 'estado',\n    hide: true,\n  },\n  {\n    field: 'formaPago',\n    headerName: 'Forma Pago',\n    width: 160,\n    editable: false,\n  },\n  {\n    field: 'fondos_',\n    hide: true,\n  },\n  {\n    field: 'fondos', // campo en grilla\n    headerName: 'Fondos',\n    width: 150,\n    type: 'singleSelect',\n    editable: puedeEditar, //props.row.confirmada,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxFon fondos_s={fondos_s} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'rubro',\n    hide: true,\n  },  \n  {\n    field: 'rubroID',\n    headerName: 'Rubro',\n    width: 140,\n    hide: true,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBox rubros={rubros} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'subrubro',\n    hide: true,\n  },\n  {\n    field: 'subrubroID',\n    headerName: 'Sub Rubro',\n    width: 140,\n    hide: true,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBoxSub subRubros={subRubros} props={props} />,\n    headerAlign: 'center',\n  },  \n\n  {\n    field: 'descripcion',\n    headerName: 'Detalle',\n    width: 140,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'center',    \n  }, \n  {\n    field: 'archivada',\n    headerName: 'Generar',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DescargarPDF,\n  },\n  {\n    field: 'enviada',\n    headerName: 'Enviar',\n    width: 90,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: EnviarMail,\n  },\n  {\n    field: 'confirmada',\n    headerName: 'Conf',\n    type: 'boolean',\n    width: 120,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    hide: !puedeEditar,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId, confirmada } }) => (\n      confirmada? \"\":<DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\n// por ahora se inicializa en el login\nvar estados = JSON.parse(localStorage.getItem(\"estados\"));\nvar retenciones = JSON.parse(localStorage.getItem(\"retenciones\"));\nvar fondos_s = JSON.parse(localStorage.getItem(\"fondos_s\"));\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\nexport function GrillaOP({ filtFide, filtRS, filtEst, idSociety, loggedUser, opInformation, isLoading, error}) {\n  \n  idSociedad = idSociety.id;\n  var result = {};\n\n  var puedeEditar = true;\n  const accesoOP = loggedUser?.['rol.op'];\n  if( accesoOP ==='vista'){puedeEditar =false}\n\n  var blue = 0;\n  var verColumnBlue = false;\n  if(loggedUser?.['rol.op'] ==='total'){blue= -1; verColumnBlue = true;}  \n\n  const navigate = useNavigate();\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();  \n\n  const queryClient = useQueryClient();\n\n  const { data: rubros } = useQuery(['rubros', idSociety], () =>\n    getMethod(`rubro/listar/${idSociety.id}`)\n  );\n\n  const { data: subRubros } = useQuery(['subrubros', idSociety], () =>\n    getMethod(`subrubro/listar/${idSociety.id}/0`)\n  );\n\n  // es un array de facturas para la columna facturas asociada a una OP (OPId)\n  const { data: grfacturas } = useQuery(['grfacturas', idSociety.id], async() =>\n  await getMethod(`factura/listar/${idSociety.id}/todas/nada/${blue}`));\n\n\n  const { mutate: irDetalle } = useMutation(\n\n    async el => await  getMethod(`op/mostrar/${idSociety.id}/${el.id}`),\n      {onSettled: (el) => { /*queryClient.refetchQueries(['formOP', idSociety]);*/\n      navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el?.auth_adm[0]?.usuarios[0]?.user}/${el?.auth_obra[0]?.usuarios[0]?.user}/${el.confirmada}/${el.blue}`)}\n    }\n    \n  );\n\n  const { mutate: eliminate } = useMutation(\n    async idOP => await deleteMethod(`OP/eliminar/${idSociety.id}`, { id: idOP }),\n    {\n      onMutate: async idOP => {\n        await queryClient.cancelQueries(['OP', idSociety]);\n        const prevData = queryClient.getQueryData(['OP', idSociety]);\n        const newData = prevData.filter(op => op.id !== idOP);\n        queryClient.setQueryData(['OP', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idOP, context) => queryClient.setQueryData(['OP', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n    }\n  );\n\n   /***** generar y subir pdf ***********************************************************************/\n\n  const { mutate: cargar_y_subir_OP } = useMutation(\n    async el =>         \n        result = await getMethod(`op/mostrarConFacturas/${idSociety.id}/${el.id}`),\n    {\n      onSuccess: async () =>{\n         miOP = result.op;\n         fa = {item: result.item};\n         getPdfBlob(miOP?.id, miOP?.fideicomisos[0]?.nombre, miOP?.numero, miOP?.empresas[0]?.razonSocial);\n        }        \n    }     \n  );\n\n  async function getPdfBlob(idOP, fideicomiso, numero, nom_empresa){\n\n\n\n    let blobPdf = await pdf(NewDocument()).toBlob();\n    let formData = new FormData();\n\n    \n    var fileName= numero + \" OP-\" + fideicomiso + \"-\" +  nom_empresa + \".pdf\";\n\n    formData.append('logo', blobPdf);\n    formData.append('id', idOP);\n    formData.append('fideicomiso', fideicomiso);\n    formData.append('numero', numero);\n    formData.append('nombreArchivo', fileName);\n    formData.append('archivada', 1);    \n    await postMethod(`op/modificar/${idSociety.id}`, formData);\n\n    await queryClient.refetchQueries(['OP', idSociety])\n    \n  }\n\n  const NewDocument = () => {\n    \n    return (\n      <RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociety.id} />\n    )\n  }\n\n  /***** fin generar y subir pdf ************************************************************************/\n\n \n  const { mutate: nonAuthObra } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n        id : el.authOBRA,\n        tipoAutorizacion: 'obra',\n        opid : el.id,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: nonAuthAdm } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n\n        id : el.authADM,\n        tipoAutorizacion: 'adm',\n        opid : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: enviarCorreo } = useMutation(\n    async el =>\n      await postMethod(`OP/enviarMail/${idSociety?.id}`, {\n\n        mailTo : idSociety?.mailOP,\n        mailaccount : idSociety?.mailaccount,\n        mailfromname : idSociety?.mailfromname,\n        mailConstructora : idSociety?.mailConstructora,\n        fideicomiso : el.fideicomisos[0]?.nombre,        \n        razonSocial : el.empresas[0]?.razonSocial,\n        enviar_OP_auto : el.empresas[0]?.enviar_OP_auto,\n        numero : el.numero,\n        id : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n            await postMethod(`OP/modificar/${idSociety.id}`, {id,[field]: value,}),\n            \n        {\n          onMutate: async ({ field, id, value }) => {\n            await queryClient.cancelQueries(['OP', idSociety]);\n            const prevData = queryClient.getQueryData(['OP', idSociety]);\n            const newData = [\n              ...prevData.filter(op => op.id !== id),\n              { ...prevData.find(op => op.id === id), [field]: value },\n            ];\n            queryClient.setQueryData(['OP', idSociety], newData);\n            return prevData;\n          },\n          onError: (err, id, context) => queryClient.setQueryData(['OP', idSociety], context),\n          onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n        }\n  );\n\n  const [selectionModel, setSelectionModel] = useState([]);\n\n  const [open, setOpen] = useState(false);\n\n  function filtrar(element, filtFide, filtRS, filtEst){\n\n    if(filtFide === -1 && filtRS === -1 && filtEst === -1){\n      return true;\n    }\n\n    if(filtFide > -1 && filtRS === -1 && filtEst === -1){//fide\n      if(element.fideicomisoId===filtFide){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS > -1 && filtEst === -1){// proveedor\n\n      if(element.empresaId===filtRS){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS === -1 && filtEst > -1){//estado\n      if(element.estadoOP===filtEst){return true;}else{return false;}\n    }\n\n    if(filtFide > -1 && filtRS > -1 && filtEst === -1){\n      if(element.fideicomisoId===filtFide && element.empresaId===filtRS){return true;}else{return false;}\n    }\n    if(filtFide > -1 && filtRS === -1 && filtEst > -1){\n      if(element.fideicomisoId===filtFide && element.estadoOP===filtEst){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS > -1 && filtEst > -1){\n      if(element.empresaId===filtRS && element.estadoOP===filtEst){return true;}else{return false;}\n    }\n    if(filtFide > -1 && filtRS > -1 && filtEst > -1){\n      if(element.fideicomisoId===filtFide && element.empresaId===filtRS && element.estadoOP===filtEst){return true;}else{return false;}\n    }\n\n\n  }\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    \n    return (\n\n      <div style={{ width: '100%' }}>\n        \n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <ToastContainer /> \n\n        <Box\n          sx={{\n            height: 400,\n            width: 1,\n          \n            '& .super-app-theme--true': {\n              bgcolor: (theme) =>\n              getBackgroundColor(theme.palette.success.main, theme.palette.mode),\n            '&:hover': {\n              bgcolor: (theme) =>\n                getHoverBackgroundColor(\n                  theme.palette.success.main,\n                  theme.palette.mode,\n                ),\n            },\n            },\n            '& .super-app-theme--otra': {\n              bgcolor: (theme) =>\n                getBackgroundColor(theme.palette.error.main, theme.palette.mode),\n              '&:hover': {\n                bgcolor: (theme) =>\n                  getHoverBackgroundColor(theme.palette.error.main, theme.palette.mode),\n              },\n            },\n          }}\n        >         \n        \n        <DataGrid \n          rows={opInformation.filter(element =>filtrar(element, filtFide, filtRS, filtEst)).map(OP => ({\n            id: OP.id,    \n            acceso: accesoOP,\n            numero: OP.numero,\n            empresa: OP.empresas[0]?.razonSocial,\n            empresaId: OP.empresaId,\n            monto: OP.monto, \n            moneda: OP.moneda,             \n            RET_SUSS: OP.RET_SUSS,\n            RET_GAN: OP.RET_GAN,\n            RET_IVA: OP.RET_IVA,\n            rubroId: OP.rubroId,            \n            estadoRET: {\n              id: OP.estadoRET,\n              descripcion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            },\n            estadoOP: {\n              id: OP.estadoOP,\n              descripcion: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            },\n            blue: OP.blue,\n            confirmada: OP.confirmada===0? false: true,\n            fondos: {\n              id: OP.fondos,\n              descripcion: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,\n            },\n            fideicomiso: OP.fideicomisos[0]?.nombre,\n            archivada: OP.archivada,\n            enviada: OP.enviada,\n            descripcion: OP.descripcion,\n            createdAt: OP.createdAt,   \n            rubroID: {\n              id: OP.rubroId,\n              nombre: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            },\n            subrubroID: {\n              id: OP.subrubroId,\n              nombre: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,\n            }, \n            apr_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            apr_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            misFacturas: grfacturas?.filter(factura => factura?.OPId === OP.id),\n            deleteId: OP.id,\n            /* para exportar*/\n            retencion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            aprobado_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            aprobado_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            estado: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            fondos_: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,  \n            formaPago: OP.formaPago,          \n            rubro: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            subrubro: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,     \n            onAuthObra: () => nonAuthObra(OP),\n            onAuthAdm: () => nonAuthAdm(OP),\n            onEnviar: () => enviarCorreo(OP),\n            cargarOP: () => cargar_y_subir_OP(OP),\n            esEditable: () => (OP),\n            onIrDetalle: () => irDetalle(OP),    \n            \n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(verColumnBlue, puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete)}\n          isCellEditable={(params) => (!params.row.confirmada || accesoOP ==='total')}\n\n          /*disableSelectionOnClick*/\n          checkboxSelection\n          onSelectionModelChange={setSelectionModel}\n               \n          autoHeight\n          density={'comfortable'}\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n\n          getRowClassName={(params) => `super-app-theme--${params.row.confirmada}`}\n          /*\n          style={{\n            rowStyle: (params) => ({\n              backgroundColor:\n                  params.row.confirmada\n                  ? \"#000\"\n                  : \"#fff\"\n            })\n        }}  */\n          \n        >      \n\n        </DataGrid>\n\n        <Hidden  smUp={(loggedUser['rol.op'] ==='vista')} >\n            <Button onClick={()=>generar_y_enviar(selectionModel, idSociety, setOpen)} >\n                Generar y Enviar OPs Seleccionadas\n            </Button>\n        </Hidden>\n  \n        <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n          </Collapse>  \n\n\n        </Box>\n\n        \n\n      </div>\n    );\n\n\n}\n\nfunction generar_y_enviar(selectionModel, idSociety, setOpen) {\n\n    getOPs(selectionModel, idSociety, setOpen);\n\n}\n\nasync function getOPs(arr, idSociety, setOpen) {\n\n  for (let i = 0; i < arr.length ; i++) {\n    try {      \n\n      let result = await getMethod(`op/mostrarConFacturas/${idSociety.id}/${arr[i]}`);\n      let miOP = result.op;\n      let fa = {item: result.item};\n      if(miOP.estadoOP ===3 && miOP.blue === 0){\n            console.log('AAi=', i, 'res: ', miOP.numero);\n            const NewDocument = () => {    \n              return (\n                <RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociety.id} />\n              )\n            }\n            let generado = await getPdfBlob_2(NewDocument, miOP.id, miOP?.fideicomisos[0]?.nombre, miOP.numero, miOP?.empresas[0]?.razonSocial, idSociety);\n            console.log(generado);  \n            if(generado){\n              enviarCorreo_2(miOP.id, miOP?.fideicomisos[0]?.nombre, miOP.numero, miOP.empresas[0]?.razonSocial, miOP.empresas[0]?.enviar_OP_auto, idSociety)\n              setOpen(true);\n              \n            }\n\n      } \n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nasync function getPdfBlob_2(NewDocument, idOP, fideicomiso, numero, nom_empresa, idSociety){\n\n  \n  var fileName= numero + \" OP-\" + fideicomiso + \"-\" +  nom_empresa + \".pdf\";\n  let blobPdf = await pdf(NewDocument()).toBlob();\n  let formData = new FormData();\n  formData.append('logo', blobPdf);\n  formData.append('id', idOP);\n  formData.append('fideicomiso', fideicomiso);\n  formData.append('numero', numero);\n  formData.append('nombreArchivo', fileName);\n  formData.append('archivada', 1);    \n  let rta = await postMethod(`op/modificar/${idSociety.id}`, formData);\n  return !!rta\n}\n\nasync function enviarCorreo_2(idOP, fideicomiso, numero, razonSocial, enviar_OP_auto, idSociety){\n\n  let rta = await postMethod(`OP/enviarMail/${idSociety?.id}`, {\n\n    mailTo : idSociety?.mailOP,\n    mailaccount : idSociety?.mailaccount,\n    mailfromname : idSociety?.mailfromname,\n    mailConstructora : idSociety?.mailConstructora,\n    fideicomiso : fideicomiso,        \n    razonSocial : razonSocial,\n    enviar_OP_auto : enviar_OP_auto,\n    numero : numero,\n    id : idOP,\n\n  })\n  return !!rta\n}\n\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n\n      <GridToolbarExport csvOptions={{ fields: ['createdAt', 'fideicomiso', 'numero','empresa','monto','moneda','RET_SUSS','RET_GAN','RET_IVA','fondos_','retencion', 'aprobado_obra', 'aprobado_adm', 'estado', 'fondos_', 'rubro', 'subrubro','descripcion'] }} />\n      \n    </GridToolbarContainer>\n  );\n}\n\n\n\nfunction IrDetalleOP_0(params) {\n\n  let path = `${params.row.id}/${params.row.createdAt}/${params.row.empresaId}/${params.row.numero}/${params.row.fideicomiso}/${params.row.estadoOP?.id}/${params.row.apr_adm===''? 'null':params.row.apr_adm}/${params.row.apr_obra===''? 'null':params.row.apr_obra}/${params.row.confirmada? 1:0}/${params.row.blue}`;\n  \n  return <Button\n          component={RouterLink}\n          sx={{color: 'primary.main',}}\n          to={path}\n        >\n          <span>{ params.row.id }</span>\n        </Button>\n\n} \n\nfunction IrDetalleOP_1(params) {\n\n  const sendRow = params.row.onIrDetalle;\n  const fideicomiso = params.row.fideicomiso;\n  return <Button onClick={sendRow} >{fideicomiso}  </Button>;\n} \n\nfunction IrDetalleOP_2(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const numero = params.row.numero;\n  return <Button onClick={sendRow} >{numero}  </Button>;\n} \n\n\nfunction ComboBox({ rubros, props }) {\n  const { id, api, field } = props;\n\n  rubros = [\n    ...rubros,\n    {\n      rubro: '',\n    },\n  ];\n  const [selectedRubro, setSelectedRubro] = useState({\n    rubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedRubro(newValue);\n     \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      //disablePortal\n      id=\"combo-box-demo\"\n      options={rubros}\n      isOptionEqualToValue={(op, val) => op.rubro === val.rubro}\n      getOptionLabel={option => option.rubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxSub({ subRubros, props }, params) {\n  const { id, api, field } = props;\n  \n  subRubros = [\n    \n    ...subRubros.filter(subR => subR.rubroId === parseInt(props?.row?.rubroID.id)),\n    {\n      subRubro: '',\n    },\n  ];\n\n  const [selectedsubRubro, setSelectedsubRubro] = useState({\n    subRubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedsubRubro}\n      onChange={async (event, newValue) => {        \n        setSelectedsubRubro(newValue);       \n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }}\n      id=\"combo-box-demo\"\n      options={subRubros}\n      isOptionEqualToValue={(op, val) => op.subRubro === val.subRubro}\n      getOptionLabel={option => option.subRubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"subRubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxRet({ retenciones, props }) {\n  const { id, api, field } = props;\n\n  retenciones = [\n    ...retenciones,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedRet, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRet}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue);    \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={retenciones}\n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Retencion\" />}\n    />\n  );\n}\n\nfunction ComboBoxEst({ estados, props }) {\n  const { id, api, field } = props;\n\n  estados = [\n    ...estados,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedEst, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.estadoOP.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n\n  return (\n    <Autocomplete\n      value={selectedEst}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue); \n   \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={estados}      \n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Estado\" />}\n    />\n  );\n    }\n}\n\nfunction ComboBoxFon({fondos_s, props}) {\n  const { id, api, field } = props;\n\n  fondos_s = [\n    ...fondos_s,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedFon, setSelectedRol] = useState({\n    descripcion: '',\n  });\n  \n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.fondos.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n    return (<Autocomplete\n    value={selectedFon}\n    \n    onChange={async (event, newValue) => {\n      setSelectedRol(newValue); \n      if(newValue?.id > 0){\n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }\n    }}\n\n    id=\"combo-box-demo\"\n    options={fondos_s}\n    isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n    getOptionLabel={option => option.descripcion}\n    sx={{ width: 300 }}\n    renderInput={params => <TextField {...params} label=\"Fondos\" />}\n  />)\n  }\n}\n\nfunction NonObraAuthRow(params) {\n  \n  const authRow = params.row.onAuthObra;\n  const apr_obra = params.row.apr_obra;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Obra\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_obra !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_obra}  </Button>;\n    }else{\n      let str = \"\" + apr_obra;\n      return \"\" + str.toUpperCase();\n    }\n  }else{\n    return \"\"\n  }\n} \n\nfunction NonAdmAuthRow(params) {\n\n  const authRow = params.row.onAuthAdm;  \n  const apr_adm = params.row.apr_adm;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Adm\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_adm !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_adm}  </Button>;\n    }else{\n      let str = \"\" + apr_adm;\n      return \"\" + str.toUpperCase();\n    }\n   \n  }else{\n    return \"\"\n  }\n\n} \n\nfunction DescargarPDF(params) {  \n  \n  var cargarOP = params.row.cargarOP;\n  const fideicomiso = params.row.fideicomiso;\n  const nom_empresa = params.row.empresa;\n  const numero = params.row.numero;\n  \n  var fileName= numero + \" OP-\" + fideicomiso + \"-\" +  nom_empresa + \".pdf\";\n\n  const archivada = params.row.archivada;\n  const apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n  \n  const notify = () =>{\n    \n    cargarOP();\n    \n    setTimeout(() => {\n    \n        toast(({ closeToast}) => (\n          \n          <Box>\n            <Button\n              sx={{ p: 1, m: 1 }}\n              variant='contained'\n              color='secondary'\n              size='small'\n              onClick={closeToast}>\n              \n              Cancelar\n            </Button>\n\n            <PDFDownloadLink document={<RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociedad} />} fileName={fileName} >\n              {({ blob, url, loading, error }) => {\n          \n                return (loading ? 'Loading document...' : 'Descargar')}\n              }\n            </PDFDownloadLink> \n\n            \n          </Box>\n        )) \n      }, 800);\n    };\n  \n  if(archivada === 0){\n    return <Button onClick={notify} >Para Generar</Button>;\n  }else{\n    return <Button onClick={notify} >Generada</Button>;    \n  }\n\n} \n\nfunction EnviarMail(params) {\n\n  const enviar = params.row.onEnviar;  \n  const enviada = params.row.enviada;\n  const archivada = params.row.archivada;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            enviar();\n            closeToast();\n          }}>Enviar\n        </Button>\n      </Box>\n    ));\n  \n    if(archivada === 0){\n      return \"\";\n    }else{\n      if(enviada === 0){\n        return <Button onClick={notify} >Enviar</Button>;\n      \n      }else{\n        return <Button onClick={notify} >Re enviar</Button>;\n      }   \n    }\n  \n} \n\n","import { Container, Box, Hidden } from '@mui/material';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ManipularOP } from 'src/components/OP/ManipularOP';\nimport { FiltroOP } from 'src/components/OP/FiltroOP';\nimport { GrillaOP } from 'src/components/OP/GrillaOP';\nimport { useQuery } from 'react-query';\nimport { getMethod } from 'src/utils/api';\n\nexport function OP({ idSociety, loggedUser }) {\n\n  var blue = 0;\n  if(loggedUser?.['rol.op'] ==='total'){blue= -1;}\n\n  const {\n    data: opInformation,\n    isLoading,\n    error,\n    // refetch\n  } = useQuery(['OP', idSociety], () => getMethod(`OP/listar/${idSociety.id}/todas/nulo/${blue}/0/0/0`));\n\n\n  const { data: fideicomisos } = useQuery(\n    ['fideicomisos'],\n    () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n\n  const { data: proveedores } = useQuery(\n    ['proveedores'],\n    () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n\n  const { data: ddfacturas } = useQuery(\n    ['ddfacturas'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0/0`));\n\n  const { data: ddfacturasBlue } = useQuery(\n    ['ddfacturasBlue'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0/1`));\n\n\n  const [filtFide, setFiltFide] = useState(-1);\n  const [filtRS, setFiltRS] = useState(-1);\n  const [filtEst, setFiltEst] = useState(-1);\n  \n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n            <Box sx={{ pt: 3 }}>\n              <ManipularOP idSociety={idSociety}  loggedUser={loggedUser} fideicomisos={fideicomisos} proveedores={proveedores}  ddfacturas={ddfacturas} ddfacturasBlue={ddfacturasBlue} />\n            </Box>\n          </Hidden>\n\n          <Box sx={{ pt: 3 }}>\n            <FiltroOP idSociety={idSociety}  loggedUser={loggedUser} \n            fideicomisos={fideicomisos}  setFiltFide={setFiltFide} setFiltRS={setFiltRS} setFiltEst={setFiltEst} proveedores={proveedores} ddfacturas={ddfacturas} ddfacturasBlue={ddfacturasBlue}\n            />\n          </Box>\n\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOP idSociety={idSociety}  loggedUser={loggedUser} opInformation={opInformation} filtFide={filtFide} filtRS={filtRS} filtEst={filtEst}  isLoading={isLoading}  error={error} />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport PriceCheckIcon from '@mui/icons-material/PriceCheck';\nimport { NavLink as RouterLink, useNavigate } from 'react-router-dom';\nimport { getMethod, postMethod} from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\nimport { Box, Button, IconButton, Collapse, Alert, Avatar} from '@mui/material';\nimport 'react-toastify/dist/ReactToastify.css';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { darken, lighten } from '@mui/material/styles';\n\nconst getBackgroundColor = (color, mode) =>\n  mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6);\n\nconst getHoverBackgroundColor = (color, mode) =>\n  mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5);\n\nconst columns = (tipo, setIsPromptOpen, setRowIdToDelete) => [\n\n  \n  {\n    field: 'estadoOP',\n    headerName: 'Pendiente Obra',\n    width: 70,\n    hide: (tipo==='obra'),\n    editable: false,\n    headerAlign: 'center',\n    renderCell: ({ value }) => value?.id!==1?'' :<Avatar sx={{ bgcolor: '#39BC44' }} >Ob</Avatar>,\n  },\n  {\n    field: 'id',\n    headerName: 'Id',\n    width: 55,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_0\n\n  }, \n  {\n    field: 'createdAt',\n    headerName: 'Fecha',\n    editable: false,\n    width: 115,\n    type: 'date',\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => mostrarFecha(value),\n  },\n\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'numero',\n    headerName: 'Nro',\n    width: 110,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    renderCell: IrDetalleOP_2,    \n  },\n\n  {\n    field: 'empresa',\n    headerName: 'Razón Social',\n    editable: false,\n    width: 160,\n    headerAlign: 'center',\n    align: 'center',\n  },  \n  {\n    field: 'monto',\n    headerName: 'Monto',\n    editable: false,\n    width: 120,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    editable: false,\n    width: 50,\n    headerAlign: 'center',\n    align: 'left',    \n  },\n  {\n    field: 'formaPago',\n    headerName: 'Forma Pago',\n    width: 155,\n    editable: true,\n  },\n  {\n    field: 'PriceCheckIcon',\n    headerName: 'Autorizar',\n    width: 155,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { authId } }) => (\n      <PriceCheckIcon\n        onClick={e => {\n\n          setRowIdToDelete(authId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n\n];\n\n\n// por ahora se inicializa en el login\nvar formaPagos =[];\nif(localStorage.getItem(\"formaPagos\")){\n  formaPagos = localStorage.getItem(\"formaPagos\").split(\",\")\n}else{  \n  formaPagos[0] =\"Otra\";\n}\n\nexport function GrillaOpAuth({ idSociety,  loggedUser, tipo }) {\n  \n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  const navigate = useNavigate();\n  const blue = 0; // trae todas las de la OP\n\n  let str = '';\n  if(tipo ==='adm'){\n    str = `OP/listar/${idSociety.id}/authADM/nulo/${blue}/0/0/0`;\n  }else{\n    str = `OP/listar/${idSociety.id}/authObra/nulo/${blue}/0/0/0`;\n  }\n\n  const {\n    data: opInformation,\n    isLoading,\n    error,\n  } = useQuery(['OP' + tipo, idSociety], () => getMethod(str));\n \n  const queryClient = useQueryClient();\n\n  const { mutate: authFila } = useMutation(\n \n    async ({ rowIdToDelete, tipo, loggedUser }) =>\n    \n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : rowIdToDelete,\n        documento: 'op',\n        tipoAutorizacion: tipo,\n        creador: loggedUser.id\n\n      }),\n      {\n        onSuccess: async () =>\n          await queryClient.refetchQueries(['OP' + tipo, idSociety]),\n      }\n\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async el =>    \n      navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el?.auth_adm[0]?.usuarios[0]?.user}/${el?.auth_obra[0]?.usuarios[0]?.user}/${el.confirmada}/${el.blue}`)\n\n  );\n  \n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n      await postMethod(`OP/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      }),\n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['OP' + tipo, idSociety]);\n        const prevData = queryClient.getQueryData(['OP' + tipo, idSociety]);\n        // console.log('prevData', prevData);\n        const newData = [\n          ...prevData.filter(OP => OP.id !== id),\n          { ...prevData.find(OP => OP.id === id), [field]: value },\n        ];\n        // console.log('newData', newData);\n        queryClient.setQueryData(['OP' + tipo, idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['OP' + tipo, idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['OP' + tipo, idSociety]),\n    }\n  );\n\n  const [selectionModel, setSelectionModel] = useState([]);\n\n  const [open, setOpen] = useState(false);\n\n  // postMethod\n\n  function filtrar(element, tipo){\n    if(tipo==='adm'){\n      return true;\n    }else{ // tipo = 'obra'\n       // Estado = Para Autorizar en Obra      \n      if(element.estadoOP===1){return true;}else{return false;}\n    }\n\n  }\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Autorizar fila?\" action={() => authFila({rowIdToDelete, tipo, loggedUser})} />\n\n        <Box\n          sx={{\n            height: 400,\n            width: 1,\n          \n            '& .super-app-theme--true': {\n              bgcolor: (theme) =>\n              getBackgroundColor(theme.palette.success.main, theme.palette.mode),\n            '&:hover': {\n              bgcolor: (theme) =>\n                getHoverBackgroundColor(\n                  theme.palette.success.main,\n                  theme.palette.mode,\n                ),\n            },\n            },\n            '& .super-app-theme--otra': {\n              bgcolor: (theme) =>\n                getBackgroundColor(theme.palette.error.main, theme.palette.mode),\n              '&:hover': {\n                bgcolor: (theme) =>\n                  getHoverBackgroundColor(theme.palette.error.main, theme.palette.mode),\n              },\n            },\n          }}\n        > \n\n        <DataGrid\n          rows={opInformation.filter(element =>filtrar(element, tipo)).map(OP => ({\n            id: OP.id,  \n            numero: OP.numero,\n            empresa: OP.empresas[0].razonSocial,\n            empresaId: OP.empresaId,\n            monto: OP.monto,\n            moneda: OP.moneda,   \n            formaPago: OP.formaPago,      \n            fideicomiso: OP.fideicomisos[0].nombre,          \n            apr_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            apr_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            authOBRA: (OP.authOBRA? true: false),\n            createdAt: OP.createdAt,\n            authId: OP.id,\n            estadoOP: {\n              id: OP.estadoOP,\n            },\n            blue: OP.blue,\n            confirmada: OP.confirmada===0? false: true,\n            onIrDetalle: () => irDetalle(OP),   \n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(tipo, setIsPromptOpen, setRowIdToDelete)}\n\n          checkboxSelection\n          onSelectionModelChange={setSelectionModel}\n\n          pageSize={25}        \n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n\n          getRowClassName={(params) => `super-app-theme--${params.row.authOBRA}`}\n\n        >\n\n\n\n</DataGrid>\n\n\n<Button onClick={()=>auth_seleccionados(selectionModel, idSociety, tipo, loggedUser, authFila, setOpen)} >\n        Autorizar filas Seleccionadas\n</Button>\n\n\n<Collapse in={open}>\n      <Alert\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              setOpen(false);\n            }}\n          >\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }\n        sx={{ mb: 2 }}\n      >\n        Acción realizada!\n      </Alert>\n  </Collapse>  \n\n\n</Box>  \n\n      </div>\n\n      \n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction auth_seleccionados(selectionModel, idSociety, tipo, loggedUser, authFila, setOpen) {\n  let err = false;\n  let rowIdToDelete = 0;\n  // console.log(selectionModel.length, idSociety.id, tipo, loggedUser.id);\n  for (let i = 0; i < selectionModel.length ; i++) {\n    try {      \n\n      // console.log(22222, selectionModel[i]);\n      rowIdToDelete = selectionModel[i];\n      authFila(({rowIdToDelete, tipo, loggedUser}));\n\n      \n    } catch (error) {\n      err = true;\n      console.log(error);\n\n    }\n  }\n\n\n\n  if(!err){\n    setOpen(true);\n  }\n\n}\n\n/*\n\n  const { mutate: authFila } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: tipo,\n        creador: loggedUser.id\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP' + tipo, idSociety]),\n    }\n\n  );\n\n*/\n\n\nfunction IrDetalleOP_0(params) {\n \n  let path = `${params.row.id}/${params.row.createdAt}/${params.row.empresaId}/${params.row.numero}/${params.row.fideicomiso}/${params.row.estadoOP?.id}/${params.row.apr_adm===''? 'null':params.row.apr_adm}/${params.row.apr_obra===''? 'null':params.row.apr_obra}/${params.row.confirmada? 1:0}/${params.row.blue}`;\n  \n  return <Button\n          component={RouterLink}\n          sx={{color: 'primary.main',}}\n          to={path}\n        >\n          <span>{ params.row.id }</span>\n        </Button>\n\n} \n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const fideicomiso = params.row.fideicomiso;\n  return <Button onClick={sendRow} >{fideicomiso}  </Button>;\n} \n\nfunction IrDetalleOP_2(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const numero = params.row.numero;\n  return <Button onClick={sendRow} >{numero}  </Button>;\n} \n\n","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { GrillaOpAuth } from 'src/components/OP/GrillaOpAuth';\n\nexport function AuthAdmOP({ idSociety, loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container >\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOpAuth idSociety={idSociety}  loggedUser={loggedUser} tipo='adm' />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { Container, Box } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { GrillaOpAuth } from 'src/components/OP/GrillaOpAuth';\n\nexport function AuthObraOP({ idSociety,  loggedUser }) {\n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container >\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOpAuth idSociety={idSociety}  loggedUser={loggedUser} tipo='obra' />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}","import { useState } from 'react';\nimport { TextField, Button, Autocomplete } from '@mui/material';\nimport { useQuery, useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { getMethod, postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { useParams } from 'react-router-dom';\n\n\nexport function AgregarFactura({ idSociety, empresaId, OPId, refetch }) {\n  \n\n  const { blue } = useParams();\n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n  \n  const { data: facturas } = useQuery(\n    ['facturas'],\n    () => getMethod(`factura/listar/${idSociety.id}/opid/0/${blue}`));\n\n  const { mutate: addFactura } = useMutation(\n    async factura =>\n      await postMethod(`factura/modificar/${idSociety.id}`, \n      {id: factura?.factura?.id,\n      OPId: OPId\n      }),\n    {\n      onSuccess: async () =>\n      \n        await queryClient.refetchQueries(['facturas', idSociety])              \n        \n    }\n  );\n\n  const [typeInForm, setTypeInForm] = useState(null);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          factura: '',\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n       \n          addFactura(values);\n          \n          setTimeout(() => {\n            refetch();\n            console.log(\"refetch\");\n          }, 750)\n   \n          resetForm();\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Número Factura'\n              disablePortal\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setTypeInForm(newValue);\n                setFieldValue('factura', newValue);\n              }}\n              value={typeInForm}\n              getOptionLabel={option => option.numero}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={facturas? facturas?.filter(factura => factura?.empresaId === parseInt(empresaId)):[]}\n              renderInput={params => <TextField {...params} label='Número Factura' />}\n            />\n            \n         \n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar Factura\n            </Button>\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"...error\"\n        ok\n      />\n    </>\n  );\n}\n","// import { useState, useContext } from 'react';\nimport { useState } from 'react';\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport { DesktopDatePicker, LocalizationProvider } from '@mui/lab';\nimport { TextField, Typography, Grid, Autocomplete, Hidden, Switch} from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { isValidDate, yearMonthDayString } from 'src/utils/utils'; \n// import { SumFacturaContext } from './sumFacturaContext';\n\n\n\nexport function FormDetalleOP({ idSociety, OPId, loggedUser, estadoOP, confirmada, formOP, isLoading, error, refetch}) {\n  \n  const { Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  var acceso = true;\n\n  if(loggedUser?.['rol.op'] ==='vista'){\n       acceso =false;\n  }\n/*\n   \n*/\n  const { mutate: updateOP } = useMutation(\n      async newOP =>\n        await postMethod(`op/modificar/${idSociety.id}`, newOP),\n      {\n        onSuccess: async () => await queryClient.refetchQueries(['formOP', idSociety])\n      }\n    );\n\n  // por ahora se inicializa en el login\n  var estados = JSON.parse(localStorage.getItem(\"estados\"));\n  var retenciones = JSON.parse(localStorage.getItem(\"retenciones\"));\n  var fondos_s = JSON.parse(localStorage.getItem(\"fondos_s\"));\n\n  const [isConfirmOP, setIsConfirmOP] = useState(parseInt(confirmada));\n  const [iniEstado, setIniEstado] = useState(estados[parseInt(estadoOP)]);\n  const [iniRet, setIniRet] = useState(retenciones[parseInt(formOP?.estadoRET)]);\n  const [iniFondos, setIniFondos] = useState(fondos_s[parseInt(formOP?.fondos)]);\n\n// console.log(\"aaaaaaa\", iniRet, formOP?.estadoRET);\n// console.log(\"aaaaaaa\", iniFondos, formOP?.fondos);\n\n  var bancos = JSON.parse(localStorage.getItem(\"bs\"));\n  var banco_en_blanco = {id:0, banco:\"\", descripcionLarga:\"\" };\n  bancos.push(banco_en_blanco);\n\n\n\n  var cuentasbanco = JSON.parse(localStorage.getItem(\"co\"));  \n  var cuenta_en_blanco = {id: 0,  bancoId: 0,  cuentaBanco: \"\",  descripcionLarga: \"\",  bancos: [{banco: \"\"}]};\n  cuentasbanco.push(cuenta_en_blanco);\n  \n  // por ahora se inicializa en el login\n  var formaPagos = localStorage.getItem(\"formaPagos\").split(\",\")\n  \n  var verBotonDesconfirmar = (loggedUser['rol.op'] ==='total' && (isConfirmOP===1))? false:true;\n//console.log(999999, isValidDate(\"2021-12-13\"));\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    return (\n          \n    <>\n\n      <Formik \n        initialValues={{\n          id: OPId,\n          flagPago: 1,// es para avisarle a la api que se modifica OPpagos\n          \n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n          updateOP(values);\n          // resetForm();\n          setSubmitting(false);\n          // refetch();\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form  >\n            \n                <Grid container spacing={{ xs: 0.5, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }} >                  \n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Aprobación Técnica \n                      </Typography>\n                    \n\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={6}>\n                        <TextField   sx={{ width: '64ch' }} label=\"Detalle\"  defaultValue={formOP?.descripcion || \"\"} type=\"float\"  name=\"descripcion\" \n                        onChange={event => handleModification(event, setFieldValue, refetch, 'descripcion', idSociety.id, OPId, 0, 0)}\n                        /* onFocus={event => formOP.descripcion? handleModification(event, setFieldValue, refetch, 'descripcion', idSociety.id, OPId, 0, 0):false } */\n                        InputProps={{\n                              maxLength: 90,\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}\n\n                        />                  \n                  </Grid>                 \n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Aprobado por:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">                        \n                        {formOP?.auth_obra?formOP.auth_obra[0]?.usuarios[0]?.user:''}\n                        </Typography>\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>                  \n                    <Grid item md={4}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Aprobación Administrativa\n                      </Typography>\n                    </Grid>  \n\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={2}   >\n                    <Typography  align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                      Estado:&nbsp;&nbsp;&nbsp;\n                    </Typography>\n                  </Grid>     \n                  <Grid item md={4}>                  \n                    <Field\n                      as={Autocomplete}\n                      size={'small'}\n                      label='Estado'\n                      disabled={!acceso || (isConfirmOP===1)}\n                      disablePortal\n                      style={{ width: '325px', display: 'inline-flex' }}\n                      \n                      onChange={(event, newValue) => {\n                        // setTypeInForm(newValue);\n                       // newValue? setFieldValue('estadoOP', newValue):false;                        \n                        onlyNumbers2(event, setFieldValue, setIniEstado, refetch, 'estadoOP', idSociety.id, OPId, 0, newValue)\n                      }}\n                      value={iniEstado}\n                      getOptionLabel={option => option.descripcion}\n                      isOptionEqualToValue={(option, value) => option.id === value.id}\n                      options={estados}\n                      renderInput={params => <TextField {...params} label='Estado' />}\n                      \n                    />\n                  </Grid>\n\n                  <Grid item md={2}>  \n                      <Hidden  smUp={(loggedUser['rol.op'] ==='total'  || (isConfirmOP!==1)?true:false)} >\n                          <Typography align=\"right\" color=\"green\" variant=\"h5\">                      \n                            {(isConfirmOP===1)?\"Confirmada!\":\"\"}\n                          </Typography> \n                      </Hidden>\n\n                      <Hidden  smUp={(!acceso || (iniEstado.id!==3)  || (isConfirmOP===1)?true:false)} >\n\n                                                    \n                           <Typography align=\"right\" color=\"blue\" variant=\"h5\">                      \n                            <Switch  onChange={event => confirmarOP(event, setIsConfirmOP,'confirmada', idSociety.id, OPId, 0, 1)}  /> Confirmar\n                          </Typography> \n                      </Hidden>\n\n                      <Hidden  smUp={(verBotonDesconfirmar)} >\n                      \n                          <Typography align=\"right\" color=\"blue\" variant=\"h5\">                      \n                            <Switch  defaultChecked onChange={event => confirmarOP(event, setIsConfirmOP,'confirmada', idSociety.id, OPId, 0, 0)}  /> Desconfirmar\n                            </Typography> \n                          \n                      </Hidden>\n\n                  </Grid>\n                  <Grid item md={4}>\n                  &nbsp;\n                  </Grid>               \n                  \n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid> \n\n                  <Grid item md={2}   >\n                    <Typography  align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                      Retención, Fondos:&nbsp;&nbsp;&nbsp;\n                    </Typography>\n                  </Grid>     \n                  <Grid item md={2}>                  \n                    <Field\n                      as={Autocomplete}\n                      size={'small'}\n                      label='Estado Retención'\n                      disabled={!acceso || (isConfirmOP===1)}\n                      disablePortal\n                      style={{ width: '160px', display: 'inline-flex' }}\n                      \n                      onChange={(event, newValue) => {\n                        // setTypeInForm(newValue);\n                       // newValue? setFieldValue('estadoOP', newValue):false;                        \n                        onlyNumbers2(event, setFieldValue, setIniRet, refetch, 'estadoRET', idSociety.id, OPId, 0, newValue)\n                      }}\n                      value={iniRet}\n                      getOptionLabel={option => option.descripcion}\n                      isOptionEqualToValue={(option, value) => option.id === value.id}\n                      options={retenciones}\n                      renderInput={params => <TextField {...params} label='Estado Retención' />}\n                      \n                    />\n                  </Grid>\n                  <Grid item md={2}>  \n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Fondos'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        \n                        onChange={(event, newValue) => {\n                          // setTypeInForm(newValue);\n                        // newValue? setFieldValue('estadoOP', newValue):false;                        \n                          onlyNumbers2(event, setFieldValue, setIniFondos, refetch, 'fondos', idSociety.id, OPId, 0, newValue)\n                        }}\n                        value={iniFondos}\n                        getOptionLabel={option => option.descripcion}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={fondos_s}\n                        renderInput={params => <TextField {...params} label='Fondos' />}\n                        \n                      />\n\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Forma de Pago:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        {formOP?.formaPago}\n                        </Typography>\n                  </Grid>\n\n\n\n\n                \n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>    \n\n                  <Grid item md={2}>\n                  <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                  Sumatoria Facturas:&nbsp;&nbsp;&nbsp;\n                        </Typography>\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                        &nbsp;{Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(formOP?.monto))}\n                        </Typography>\n                  </Grid>\n                  <Grid item md={2}>\n                    &nbsp;\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Aprobado por:\n                        </Typography>\n                  </Grid>\n                  <Grid item md={4}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                        {formOP?.auth_adm?formOP.auth_adm[0]?.usuarios[0]?.user:''}\n                        </Typography>\n                  </Grid>\n\n               \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={2}>\n                  </Grid>               \n                  <Grid item md={2}>\n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"RET GAN\" type=\"number\" key={formOP?.RET_GAN} defaultValue={formOP?.RET_GAN}  name=\"RET_GAN\" onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_GAN', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={2}>                                                                                                                                             \n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Certificado GAN\"  key={formOP?.COMP_GAN} defaultValue={formOP?.COMP_GAN}  name=\"COMP_GAN\" onChange={event => handleModification(event, setFieldValue, refetch, 'COMP_GAN', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={6}>\n                  </Grid> \n\n                  <Grid item md={2}>\n                  </Grid>               \n                  <Grid item md={2}>\n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"RET IVA\" type=\"number\" key={formOP?.RET_IVA} defaultValue={formOP?.RET_IVA}  name=\"RET_IVA\" onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_IVA', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={2}>                                                                                                                                             \n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Certificado IVA\"  key={formOP?.COMP_IVA} defaultValue={formOP?.COMP_IVA}  name=\"COMP_IVA\" onChange={event => handleModification(event, setFieldValue, refetch, 'COMP_IVA', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={6}>\n                  </Grid>   \n\n                  <Grid item md={2}>\n                  </Grid>               \n                  <Grid item md={2}>\n                  <TextField size={'small'} sx={{ width: '20ch' }} label=\"RET SUSS\" type=\"number\"  key={formOP?.RET_SUSS}  defaultValue={formOP?.RET_SUSS}  name=\"RET_SUSS\"  onChange={event => onlyNumbers(event, setFieldValue, refetch, 'RET_SUSS', idSociety.id, OPId, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={2}>                                                                                                                                             \n                  <TextField  size={'small'} sx={{ width: '20ch' }} label=\"Certificado SUSS\"  key={formOP?.COMP_SUSS} defaultValue={formOP?.COMP_SUSS}  name=\"COMP_SUSS\" onChange={event => handleModification(event, setFieldValue, refetch, 'COMP_SUSS', idSociety.id, OPId, 0, 0)} \n                       InputProps={{\n                        readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                      }}\n                  />\n                  </Grid>\n                  <Grid item md={6}>\n                  </Grid> \n\n\n                  <Grid item md={2}>\n                        <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                        Monto a Abonar:&nbsp;&nbsp;&nbsp;  \n                              </Typography>\n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"green\" variant=\"h4\">\n                        &nbsp;{Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(formOP?.monto_a_pagar)) + \" \" + formOP?.moneda}\n                        </Typography>\n                  </Grid>\n\n\n\n\n                  <Grid item md={6}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n\n                  <Grid item md={12}>                  \n                    <Grid item md={12}>                  \n                      <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                      Pago\n                      </Typography>\n                    </Grid>                 \n                  </Grid>\n\n                  <Grid item md={12}>\n                  &nbsp;\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Modo\n                        </Typography>              \n                  </Grid> \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Banco\n                        </Typography>\n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Nro Cuenta\n                        </Typography>                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Comprobante\n                        </Typography>              \n                  </Grid>                 \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Fecha\n                        </Typography>                      \n                  </Grid>  \n                  <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h5\">\n                          Monto\n                        </Typography>                \n                  </Grid>  \n\n                    \n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n    \n                            onlyNumbers(event, setFieldValue, refetch, 'modo1', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo1 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid> \n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco1(newValue);\n                          setFieldValue('banco1', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco1', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === parseInt(formOP?.OPpago?.banco1 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option?.id === value?.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro1(newValue);\n                          setFieldValue('nro1', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro1', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === (formOP?.OPpago.nro1 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco1 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                       \n                        <TextField  size={'small'} sx={{ width: '11ch' }} label=\"Nro\" type=\"float\"  key={formOP?.OPpago.descri12} defaultValue={formOP?.OPpago.descri12} name=\"descri12\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri12', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/> \n\n                        <TextField  size={'small'} sx={{ width: '8ch' }} label=\"Link\" type=\"float\"  key={formOP?.OPpago.descri1 + \"1\"} defaultValue={formOP?.OPpago.descri1} name=\"descri1\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri1', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>  \n\n                  </Grid> \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha1)? formOP?.OPpago.fecha1:null}\n                          name=\"fecha1\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha1', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n                   \n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto1\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto1}  defaultValue={formOP?.OPpago.monto1}  onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto1', idSociety.id, OPId, 1, 0)}\n                             inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                             /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                  \n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo2', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo2 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco2(newValue);\n                          setFieldValue('banco2', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco2', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === parseInt(formOP?.OPpago?.banco2 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option?.id === value?.id}\n                        options={bancos? bancos:[]}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  \n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro2(newValue);\n                          setFieldValue('nro2', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro2', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === parseInt(formOP?.OPpago.nro2 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option?.id === value?.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco2 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n\n                        <TextField  size={'small'} sx={{ width: '11ch' }} label=\"Nro\" type=\"float\"  key={formOP?.OPpago.descri22} defaultValue={formOP?.OPpago.descri22} name=\"descri22\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri22', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/> \n\n                        <TextField  size={'small'} sx={{ width: '8ch' }} label=\"Link\" type=\"float\"  key={formOP?.OPpago.descri2 + \"2\"} defaultValue={formOP?.OPpago.descri2} name=\"descri2\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri2', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>            \n\n\n                  </Grid>                      \n                 \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha2)? formOP?.OPpago.fecha2:null}\n                          name=\"fecha2\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha2', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto2\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto2}  defaultValue={formOP?.OPpago.monto2}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto2', idSociety.id, OPId, 1, 0)}\n                            inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                            /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo3', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo3 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>  \n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco3(newValue);\n                          setFieldValue('banco3', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco3', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === parseInt(formOP?.OPpago?.banco3 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option.id === value.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro3(newValue);\n                          setFieldValue('nro3', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro3', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === parseInt(formOP?.OPpago.nro3 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option?.id === value?.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco3 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '11ch' }} label=\"Nro\" type=\"float\"  key={formOP?.OPpago.descri32} defaultValue={formOP?.OPpago.descri32} name=\"descri32\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri32', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/> \n\n                        <TextField  size={'small'} sx={{ width: '8ch' }} label=\"Link\" type=\"float\"  key={formOP?.OPpago.descri3 + \"3\"} defaultValue={formOP?.OPpago.descri3} name=\"descri3\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri3', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/> \n\n                  </Grid>                    \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha3)? formOP?.OPpago.fecha3:null}\n                          name=\"fecha3\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha3', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  name=\"monto3\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto3}  defaultValue={formOP?.OPpago.monto3}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto3', idSociety.id, OPId, 1, 0)}\n                            inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                            /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={2}>\n                    <Field\n                          as={Autocomplete}\n                          size={'small'}\n                          label='Modo'\n                          disabled={!acceso || (isConfirmOP===1)}\n                          disablePortal\n                          style={{ width: '160px', display: 'inline-flex' }}\n                          onChange={(event, newValue) => {\n\n                            onlyNumbers(event, setFieldValue, refetch, 'modo4', idSociety.id, OPId, 1, newValue)\n                          }}\n                          value={formOP?.OPpago.modo4 || formaPagos[0]}\n                          getOptionLabel={option => option}\n                          isOptionEqualToValue={(option, value) => option === value}\n                          options={formaPagos}\n                          renderInput={params => <TextField {...params} label='Modo' />}\n                          \n                        />            \n                  </Grid>\n                  <Grid item md={2}>\n\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='Banco'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '160px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTbanco4(newValue);\n                          setFieldValue('banco4', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'banco4', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={bancos.find(banco => banco.id === parseInt(formOP?.OPpago?.banco4 || 0))}\n                        getOptionLabel={option => option.banco}\n                        isOptionEqualToValue={(option, value) => option?.id === value?.id}\n                        options={bancos}\n                        renderInput={params => <TextField {...params} label='banco' />}\n                        \n                      />\n\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                    <Field\n                        as={Autocomplete}\n                        size={'small'}\n                        label='NRO'\n                        disabled={!acceso || (isConfirmOP===1)}\n                        disablePortal\n                        style={{ width: '165px', display: 'inline-flex' }}\n                        onChange={(event, newValue) => {\n                          // setTnro4(newValue);\n                          setFieldValue('nro4', newValue);\n                          onlyNumbers(event, setFieldValue, refetch, 'nro4', idSociety.id, OPId, 1, newValue.id)\n                        }}\n                        value={cuentasbanco.find(cuenta => cuenta.id === parseInt(formOP?.OPpago.nro4 || 0))}\n                        getOptionLabel={option => option.cuentaBanco}\n                        isOptionEqualToValue={(option, value) => option?.id === value?.id}\n                        options={cuentasbanco.filter(cuenta => cuenta.bancoId === parseInt((formOP?.OPpago.banco4 || 0)))}\n                        \n                        renderInput={params => <TextField {...params} label='Cuenta' />}\n                        \n                      />               \n                                \n                  </Grid>  \n                  <Grid item md={2}>\n                        <TextField  size={'small'} sx={{ width: '11ch' }} label=\"Nro\" type=\"float\"  key={formOP?.OPpago.descri42} defaultValue={formOP?.OPpago.descri42} name=\"descri42\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri42', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/> \n\n                        <TextField  size={'small'} sx={{ width: '8ch' }} label=\"Link\" type=\"float\"  key={formOP?.OPpago.descri4  + \"4\"} defaultValue={formOP?.OPpago.descri4} name=\"descri4\"  onChange={event => handleModification(event, setFieldValue, refetch, 'descri4', idSociety.id, OPId, 1, 0)}\n                             InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}/>                  \n                  </Grid>                      \n                  <Grid item md={2}>\n                    <LocalizationProvider dateAdapter={AdapterDateFns}>\n                        <DesktopDatePicker\n                          label=\"Fecha\"\n                          inputFormat=\"dd/MM/yyyy\"\n                          // moment.isDate(obj)\n                          value={isValidDate(formOP?.OPpago.fecha4)? formOP?.OPpago.fecha4:null}\n                          name=\"fecha4\"\n                          InputProps={{\n                            readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                          }} \n\n                          onChange={event => handleModification(event, setFieldValue, refetch, 'fecha4', idSociety.id, OPId, 2, 0)}\n                          // onChange={value => setFieldValue(name, value)}\n                          renderInput={params => <TextField required size=\"small\" {...params} />}\n                        />\n                      </LocalizationProvider>\n\n                                  \n                  </Grid>  \n\n                  <Grid item md={2}>\n                        <TextField  name=\"monto4\" size={'small'}sx={{ width: '20ch' }} label=\"Monto\" type=\"float\"  key={formOP?.OPpago.monto4}  defaultValue={formOP?.OPpago.monto4}   onChange={event => onlyNumbers(event, setFieldValue, refetch, 'monto4', idSociety.id, OPId, 1, 0)}\n                            inputProps={{readOnly: (!acceso || (isConfirmOP===1)?true:false), min: 0, style: { textAlign: 'center' }}}\n                            /*InputProps={{\n                              readOnly: (!acceso || (isConfirmOP===1)?true:false),\n                            }}*/ />                  \n                  </Grid>\n\n                  <Grid item md={10}>\n                                  \n                  </Grid>\n                  <Grid item md={2}>\n                        <Typography align=\"center\" color=\"textPrimary\" variant=\"h5\">\n                        \n                        {Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number((Math.round(formOP?.OPpago.monto1 * 100)/100 + Math.round(formOP?.OPpago.monto2 * 100)/100 + Math.round(formOP?.OPpago.monto3 * 100)/100 + Math.round(formOP?.OPpago.monto4 * 100)/100)))}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                        </Typography>                 \n                  </Grid>\n\n                </Grid> \n            \n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe un tipo de cambio en esa fecha, por favor editar u eliminar el registro\"\n        ok\n      />\n    </>\n  );\n}\n\n\nfunction onlyNumbers2(event, setFieldValue, setTypeInForm, refetch, typeOfData, idSociety, OPId, flagPago, newValue) {\n  \n  // console.log(event.target);\n  const { value } = event.target;\n  console.log(value, newValue?.id);\n  if(value===0){\n    console.log(11);\n    event.preventDefault();\n    // const { value } = event.target;\n    const regex = /^\\d{0,7}(\\.\\d{0,2})?$/;\n    // console.log(regex.test(value.toString()));\n    if (regex.test(value.toString())) {\n      console.log(22, typeOfData);\n      setTypeInForm(newValue);\n      setFieldValue(typeOfData, value.toString());\n      handleModification(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flagPago, newValue?.id);\n\n    }else{\n      return false;\n    }\n  }\n}\n\nfunction onlyNumbers(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flagPago, valorCombo) {\n\n  \n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,7}(\\.\\d{0,2})?$/;\n  // console.log(regex.test(value.toString()));\n  if (regex.test(value.toString())) {\n\n    setFieldValue(typeOfData, value.toString());\n    handleModification(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flagPago, valorCombo);\n\n  }else{\n    return false;\n  }\n}\n\nfunction handleModification(event, setFieldValue, refetch, typeOfData, idSociety, OPId, flag, valorCombo) {\n  \n  let val = null;\n\n\n  if(flag === 2){ // si es una fecha\n    \n    val = yearMonthDayString(event) + \" 03:00:00\";\n  }else{  \n    event.preventDefault();\n    const { value } = event.target;\n    setFieldValue(typeOfData, value.toString());\n\n    val = value;\n    if(typeOfData==='estadoOP' || typeOfData==='estadoRET' || typeOfData==='fondos'){\n      val = valorCombo;\n    }\n    if(typeOfData==='banco1' || typeOfData==='banco2' || typeOfData==='banco3' || typeOfData==='banco4'){\n      val = valorCombo;\n    }\n    if(typeOfData==='nro1' || typeOfData==='nro2' || typeOfData==='nro3' || typeOfData==='nro4'){\n      val = valorCombo;\n    }\n    if(typeOfData==='modo1' || typeOfData==='modo2' || typeOfData==='modo3'  || typeOfData==='modo4'){\n      val = valorCombo;\n    }\n  }\n\n  let newData = {\n        id: OPId,\n        [typeOfData]: val,\n      };\n  if(flag > 0){\n        newData.flagPago = 1;\n  }    \n    \n  postMethod(`op/modificar/${idSociety}`, newData);\n  setTimeout(() => {\n    refetch();\n    console.log(\"refetch\");\n  }, 2000)\n\n}\n\nfunction confirmarOP(event, setIsConfirmOP, typeOfData, idSociety, OPId, flagPago, valor) {\n  event.preventDefault();\n\n  setIsConfirmOP(valor);\n  let newData = {\n        id: OPId,\n        [typeOfData]: valor,\n      };\n  if(flagPago===1){\n        newData.flagPago = 1;\n  }    \n    \n  postMethod(`op/modificar/${idSociety}`, newData);\n\n}\n\n","import { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid } from '@mui/x-data-grid';\nimport { Box, Button } from '@mui/material';\nimport { Delete } from '@mui/icons-material';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { getMethod, postMethod } from 'src/utils/api';\n\n// const columns = [\nconst columns = (puedeEditar, verEliminar) => [\n  {\n    field: 'tipo', // campo en grilla\n    headerName: 'Tipo de Comp.',\n    width: 170,\n    // type: 'singleSelect',\n    editable: false,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    // renderEditCell: props => <ComboBoxFon fondos_s={fondos_s} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'empresa',\n    headerName: 'Proveedor',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'detalle',\n    headerName: 'Detalle',\n    width: 175,\n    editable: puedeEditar,\n    headerAlign: 'center',\n  },\n  {\n    field: 'numero',\n    headerName: 'Nro Factura',\n    width: 185,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'txtOC',\n    headerName: 'Nro OC',\n    width: 130,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'center',\n  },\n  {\n    field: 'montoTotal',\n    headerName: 'Importe',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n\n  {\n    field: 'link2',\n    headerName: '',\n    width: 20,\n    editable: false,\n    headerAlign: 'center',\n    renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >ver</a>)\n  },\n  {\n    field: 'deleteIcon',\n    headerName: '',\n    hide: !verEliminar,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DeleteRow,\n  },\n\n];\n\nexport function GrillaDetalleOP({ idSociety, OPId, loggedUser, selectedFacturaData, refetch }) {\n  \n  const queryClient = useQueryClient();\n  var tipos = JSON.parse(localStorage.getItem(\"tipos\"));\n\n  var puedeEditar = true;\n  const accesoOP = loggedUser?.['rol.op'];\n  const blue = -1; // trae todas las de la OP\n  if( accesoOP ==='vista'){puedeEditar =false}\n\n  var verEliminar = true;\n  if(loggedUser?.['rol.op'] ==='parcial' || loggedUser?.['rol.op'] ==='vista'){verEliminar =false}\n\n  const {\n    data: facturas,    \n    isLoading,\n    error,\n  } = useQuery(['facturas', idSociety, selectedFacturaData], () =>\n    getMethod(`factura/listar/${idSociety?.id}/opid/${OPId}/${blue}`)\n  );\n\n  const { mutate: deleteProduct } = useMutation(\n    async id =>\n      await postMethod(`factura/modificar/${idSociety?.id}`, {\n        //libera la factura con OPId= null\n        id: id,\n        OPId: null,\n      }),\n    {\n      \n      onSuccess: async ()=> {\n        if (idSociety.id > 0) {\n            await queryClient.refetchQueries(['facturas', idSociety, selectedFacturaData])\n        }\n        refetch()\n        \n      }\n    }\n  );\n\n\n // await queryClient.refetchQueries(['facturas', idSociety, selectedFacturaData]), \n\n\n  function handleCellModification(e) {\n    \n    let newData = {\n      id: e.id,\n     [e.field]: e.value,\n    };    \n    postMethod(`factura/modificar/${idSociety?.id}`, newData);\n    \n  }\n\n\n  if (isLoading) return 'Cargando...';\n  if (error) return `Hubo un error: ${error.message}`;\n\n  return (\n    <div style={{ width: '100%' }}>\n      <ToastContainer />\n      <DataGrid\n        \n        \n        rows={facturas.map(el => ({\n          id: el.id,\n          empresa:(el.empresas[0]?el.empresas[0].razonSocial:''),\n          confirmada:(el.OPs[0]?el.OPs[0].confirmada:0),\n          numero: el.numero,\n          tipo: {\n            id: el.tipo,\n            descripcion: tipos?.find(tipo => tipo.id === el.tipo)?.descripcion,\n          },\n          link: el.link,\n          link2: el.link,\n          montoTotal: el.montoTotal, // parseInt(el.tipo)===2? (-1 * el.montoTotal):el.montoTotal,\n          moneda: el.moneda,\n          detalle: el.detalle,\n          txtOC: el.txtOC,\n          fechaIngreso: el.fechaIngreso,\n          fechaVTO: el.fechaVTO,  \n          onDelete: () => deleteProduct(el.id),\n        }))}\n\n        columns={columns(puedeEditar, verEliminar)}\n        isCellEditable={(params) => (!params.row.confirmada || accesoOP ==='total')}\n        disableSelectionOnClick           \n        autoHeight   \n        onCellEditCommit={handleCellModification}\n        /*hideFooterSelectedRowCount*/\n     \n      />\n    </div>\n  );\n}\n\n\n\n\nfunction DeleteRow(params) {\n  const deleteRow = params.row.onDelete;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          No quiero borrar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            deleteRow();\n            closeToast();\n          }}>\n          Sí quiero borrar\n        </Button>\n      </Box>\n    ));\n  return <Delete onClick={notify} />;\n}\n","import React, { useRef } from 'react'\nimport { useParams } from 'react-router-dom';\nimport { Container, Box, Typography, Grid, Button, Hidden } from '@mui/material';\nimport { Helmet } from 'react-helmet';\nimport { PDFDownloadLink, PDFViewer, pdf } from \"@react-pdf/renderer\";\nimport { toast } from 'react-toastify';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\nimport { AgregarFactura } from 'src/components/detalleOP/AgregarFactura';\nimport { FormDetalleOP } from 'src/components/detalleOP/FormDetalleOP';\nimport { GrillaDetalleOP } from 'src/components/detalleOP/GrillaDetalleOP';\nimport { mostrarFechaMesTXT } from 'src/utils/utils';\nimport { getMethod, postMethod } from 'src/utils/api';\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\n\nexport function DetalleOP({ idSociety, loggedUser }) {\n\n  const [verPDF, setVerPDF] = React.useState(false);\n  const { idOP, fecha, empresaId, numero, fideicomiso, estadoOP, auth_adm, auth_obra, confirmada, blue } = useParams();\n\n  const id = idSociety.id;\n  \n  const buttonAdmRef = useRef();  \n\n  const{\n      data: formOP,\n      isLoading,\n      error,\n      refetch\n    } = useQuery(['formOP', idSociety.id], () =>\n      getMethod(`op/mostrarConFacturas/${idSociety.id}/${idOP}`)\n\n  );\n\n   //guarda pdf en server\n   const getPdfBlob = async () =>   {\n\n    let blobPdf = await pdf(NewDocument()).toBlob();\n    let formData = new FormData();\n    formData.append('logo', blobPdf);\n    formData.append('id', idOP);\n    formData.append('fideicomiso', fideicomiso);\n    formData.append('numero', numero);    \n    postMethod(`op/modificar/${idSociety.id}`, formData);\n    \n  }\n\n  const guardar_en_server = () => {\n\n    setTimeout(() => {\n      getPdfBlob();\n    }, 300);\n  }\n\n  function facturasCargadas(fa){\n      if(fa){return { item: fa};}else{return null}\n  }\n\n  function nomPdfCargado(obj, numero, fideicomiso){\n    \n    if(obj){\n      if(obj.empresas[0]){\n        let fileName = numero + \" OP-\" + fideicomiso + \"-\" +  obj?.empresas[0]?.razonSocial + \".pdf\";\n        return fileName;\n      }else{return \"-\"}\n    }else{return \"-\"}\n  }\n\n  function cargadas(obj){\n    if(obj){return obj;}else{return null}\n  }\n\n  // es el reporte .pdf\n  const NewDocument = () => {\n    return (\n      <RepOp dataOP={cargadas(formOP?.op)} dataFacturas={facturasCargadas(formOP?.item)} apiServerUrl={apiServerUrl} idSociedad={id} />\n    )\n  }\n\n\n\n  \n  const queryClient = useQueryClient();\n\n  const { mutate: authFilaObra } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: 'obra',\n        creador: loggedUser.id\n\n      }),\n    {\n      onSuccess: async ()=> {\n        if(idSociety.id > 0) {\n          await queryClient.refetchQueries(['formOP', idSociety])\n        }\n        refetch()\n        \n      }\n    }\n  );\n\n  const { mutate: authFilaAdm } = useMutation(\n    async id =>\n      await postMethod(`autorizacion/agregar/${idSociety?.id}`, {\n\n        opid : id,\n        documento: 'op',\n        tipoAutorizacion: 'adm',\n        creador: loggedUser.id\n\n      }),\n      \n    {\n      onSuccess: async ()=> {\n        if(idSociety.id > 0) {\n          await queryClient.refetchQueries(['formOP', idSociety])\n        }\n        refetch()\n        \n      }\n    }\n  );\n\n\n  let verAgregar = (loggedUser?.['rol.op'] ==='vista'); // si es vista, no ve boton agregar \n  if(!verAgregar){\n      let conf = formOP?(formOP?.confirmada===1):false;\n      if(conf){// confirmada y no es vista\n              if(loggedUser?.['rol.op'] ==='total'){  // si es parcial\n                    verAgregar = false;\n              }else{\n                    verAgregar = true;\n              }\n      }\n  }\n  \n\n  return ( \n      \n    \n    <div id=\"MENU\" style={{ minHeight: \"100vh\" }}>\n      <nav\n      style={{\n        display: \"flex\",\n        borderBottom: \"1px solid black\",\n        paddingBottom: \"5px\",\n        justifyContent: \"flex-end\",\n      }}\n    >\n      \n      <Hidden  smUp={( verAuthBoton(\"obra\", (formOP?.auth_obra? (formOP?.auth_obra[0]?.usuarios? formOP?.auth_obra[0]?.usuarios:auth_obra):auth_obra), loggedUser?.[\"rol.descripcion\"]))} >\n      \n        <Box  mt={2} sx={{ pt: 1 }}>\n          <Button\n          \n          onClick={() => {\n            toast(({ closeToast }) => (\n              <Box>\n                <Button\n                  sx={{ p: 1, m: 1 }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={closeToast}\n                >\n                  Cancelar\n                </Button>\n                <Button\n                  sx={{ p: 1, m: 1 }}\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  onClick={() => {\n                    // setVerBoxObra(\"none\")\n                    authFilaObra(idOP)\n                    closeToast();\n                  }}\n                >\n                  Autorizar\n                </Button>\n              </Box>\n            ));\n          }}\n        >\n          Autorizar en Obra\n          </Button>\n        </Box>\n      </Hidden>\n      <Hidden  smUp={( verAuthBoton(\"adm\", (formOP?.auth_adm? (formOP?.auth_adm[0]?.usuarios? formOP?.auth_adm[0]?.usuarios:auth_adm):auth_adm), loggedUser?.[\"rol.descripcion\"]))} >\n        <Box  mt={2} sx={{ pt: 1 }}>\n          <Button\n            ref={buttonAdmRef}\n            /*variant=\"info\"*/\n            \n            onClick={() => {\n              toast(({ closeToast }) => (\n                <Box>\n                  <Button\n                    sx={{ p: 1, m: 1 }}\n                    \n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={closeToast}\n                  >\n                    Cancelar\n                  </Button>\n                  <Button\n                    sx={{ p: 1, m: 1 }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    size=\"small\"\n                    onClick={() => {\n                      // setVerBoxAdm(\"none\")\n                      authFilaAdm(idOP)\n                      closeToast();\n                    }}\n                  >\n                    Autorizar\n                  </Button>\n                </Box>\n              ));\n            }}\n          >        \n            Autorizar ADM\n          </Button>      \n        </Box>\n      </Hidden>\n      <Box mt={2} sx={{ pt: 1 }}>\n        <Button\n          /*variant=\"info\"*/\n          onClick={() => {\n            setVerPDF(!verPDF);\n          }}\n        >\n          {verPDF ? \"Ocultar PDF\" : \"Ver PDF\"}\n        </Button>\n\n        <PDFDownloadLink\n          document={isLoading===false? <RepOp dataOP={cargadas(formOP?.op)} dataFacturas={facturasCargadas(formOP?.item)} apiServerUrl={apiServerUrl} idSociedad={id} />:null }\n\n          fileName={nomPdfCargado(formOP?.op, numero, fideicomiso)}\n        >\n          <Button variant=\"info\" onClick={guardar_en_server} >Descargar</Button>\n        </PDFDownloadLink>\n\n   \n      </Box>\n  \n\n\n    </nav>     \n\n      <Helmet>\n          <title>\n          op:{numero.replace(\"OP_\",\"\")} | {idSociety?.nombre}\n          </title>\n      </Helmet>  \n      <>\n                  \n          {verPDF ? (\n            <PDFViewer style={{ width: \"100%\", height: \"90vh\" }}>\n              <RepOp dataOP={cargadas(formOP?.op)} dataFacturas={facturasCargadas(formOP?.item)} apiServerUrl={apiServerUrl} idSociedad={id} />\n            </PDFViewer>\n          ) : \n     \n          <Box\n                sx={{\n                  backgroundColor: 'background.default',\n                  minHeight: '100%',\n                  py: 3,\n                }}\n              >\n            <Container >\n\n              <Box sx={{ pt: 3 }}>\n                <Grid container spacing={{ xs: 0.5, md: 1 }} columns={{ xs: 4, sm: 8, md: 12 }} >\n                                \n                      <Grid item md={2}>\n                        <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                              Solicitud de Pago:\n                        </Typography>\n                      </Grid>\n\n                      <Grid item md={5}>\n\n                        <Hidden  smUp={( !(parseInt(blue)===1))} >\n                          <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                                {numero.replace(\"OP_\",\"\")} (Blue) &nbsp;&nbsp; {fideicomiso}\n                          </Typography>\n                        </Hidden>\n                        <Hidden  smUp={( !(parseInt(blue)===0))} >\n                          <Typography align=\"left\" color=\"textPrimary\" variant=\"h4\">\n                                {numero.replace(\"OP_\",\"\")}&nbsp;&nbsp;&nbsp;&nbsp; {fideicomiso}\n                          </Typography>\n                        </Hidden>\n\n                      </Grid>\n\n                      <Grid item md={5}>\n                            <Typography align=\"right\" color=\"textPrimary\" variant=\"h5\">\n                              {mostrarFechaMesTXT(fecha)}\n                            </Typography>\n                      </Grid>             \n\n                </Grid>\n              </Box>\n              <Hidden  smUp={( verAgregar)} >\n                <Box sx={{ pt: 3 }}>\n                \n                  <AgregarFactura\n                    OPId={idOP}\n                    fecha={fecha}\n                    empresaId={empresaId}\n                    idSociety={idSociety}\n                    refetch={refetch}\n                    loggedUser={loggedUser}\n                  />\n                \n                </Box>\n              </Hidden> \n              <Box  sx={{ pt: 3 }}>\n                <GrillaDetalleOP\n                \n                  OPId={idOP}\n                  fecha={fecha}\n                  empresaId={empresaId}\n                  idSociety={idSociety}\n                  refetch={refetch}\n                  loggedUser={loggedUser}\n                />\n              </Box>\n\n              <Box  sx={{ pt: 3 }}>\n                <FormDetalleOP\n\n                  OPId={idOP}\n                  estadoOP={estadoOP}\n                  confirmada={confirmada}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n                  formOP={formOP?.op}\n                  isLoading={isLoading}\n                  error={error}\n                  refetch={refetch}\n\n                />\n              </Box>\n         \n            </Container>\n            \n          </Box>\n          \n          }\n        </>\n   \n    </div>\n    \n  );  \n}\n\n\nfunction verAuthBoton(tipo, auth, rol_usuario){\n  // rol adm, obra, manager\n  let rta = true;\n\n  if(rol_usuario===\"manager\" && tipo === \"adm\"){// adm\n\n        if(auth === null || auth === 'null' || auth === undefined || auth === \"undefined\"){   \n          rta = false;\n        }\n \n  }\n\n  if((rol_usuario===\"manager\" || rol_usuario===\"obra\")  && tipo === \"obra\"){// obra\n \n    if(auth === null || auth === 'null' || auth === undefined || auth === \"undefined\"){\n     \n      rta = false;\n    }\n  }  \n\n  return rta;\n\n\n}\n\n","import { useState } from 'react';\n\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { isNumberUsedDig } from 'src/utils/utils';\nimport { IconButton, Collapse, Box, FormControlLabel, TextField, Button, Hidden, Checkbox, Autocomplete, Alert } from '@mui/material';\nimport { postMethod } from 'src/utils/api';\nimport CloseIcon from '@mui/icons-material/Close';\nimport React from 'react';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { yearMonthDayNum } from 'src/utils/utils'; \n\nexport function FormFactura({ idSociety, loggedUser, fideicomisos, proveedores}) {\n\n  const { setIsPromptOpen, Prompt } = usePrompt();\n  const queryClient = useQueryClient();\n\n  var verCheckBlue = false;\n  if(loggedUser?.['rol.factura'] ==='total'){/*blue= -1;*/ verCheckBlue = true;}\n\n  const { mutate: addFactura } = useMutation(\n    newFactura => postMethod(`factura/agregar/${idSociety.id}`, newFactura),\n    {\n      onMutate: async newFactura => {\n        newFactura.creador = loggedUser.id;\n        await queryClient.invalidateQueries(['factura', idSociety]);\n        const prevData = await queryClient.getQueryData(['factura', idSociety]);\n        const newData = [...prevData, { ...newFactura, id: new Date().getTime() }];\n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n\n  var tipos = JSON.parse(localStorage.getItem(\"tipos\"));\n\n  const [tipoInForm, setTipoInForm] = useState({id: 0, descripcion: 'Factura'});\n  const [fideInForm, setFideInForm] = useState(null);\n  const [typeInForm, setTypeInForm] = useState(null);\n  const [open, setOpen] = useState(false);\n  const [chkblue, setChkblue] = useState(true);\n\n  return (\n    <>\n      <Formik\n        initialValues={{\n          numero: '',\n          montoTotal: '',\n          fechaIngreso: new Date(),\n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n\n          if(values?.tipo === undefined){values.tipo = tipoInForm;}\n  \n          let existe = await isNumberUsedDig('factura', idSociety.id, values.empresa.id , values.numero)\n          if (existe || values.numero ==='') {\n            console.log(222);\n            setIsPromptOpen(true);\n          }else{\n   \n            addFactura({\n              numero: values.numero,\n              montoTotal: values.tipo.id===2? (-1 * values.montoTotal):values.montoTotal,\n              fechaIngreso: values.fechaIngreso,\n              tipo: values.tipo.id,\n              empresaId: values.empresa.id,\n              fideicomisoId: values.fideicomiso.id,\n              moneda: 'ARS',\n              blue: values.blue==='on'? 1:0,\n              creador: loggedUser.id\n            });          \n            //resetForm();\n            setSubmitting(false);\n          }\n        }}\n      >\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Tipo'\n              title=\"Tipo de comprobante\"\n              disablePortal\n              required\n              style={{ width: '180px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setTipoInForm(newValue);\n                setFieldValue('tipo', newValue);\n                setNumber((newValue?.id===3), setFieldValue)\n              }}\n              value={tipoInForm}\n              getOptionLabel={option => option.descripcion}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={(tipos? tipos:[])}\n              renderInput={params => <TextField {...params} label='Tipo de comprobante' />}\n            />\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Fideicomiso'\n              title=\"Seleccione un fideicomiso.\"\n              disablePortal\n              required\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setFideInForm(newValue);\n                setFieldValue('fideicomiso', newValue);\n              }}\n              value={fideInForm}\n              getOptionLabel={option => option.nombre}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={(fideicomisos? fideicomisos:[])}\n              renderInput={params => <TextField {...params} label='Fideicomiso' />}\n            />\n\n             <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Razon Social'\n            title=\"Seleccione un proveedor.\"\n            disablePortal\n            required\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setTypeInForm(newValue);\n              setFieldValue('empresa', newValue);\n            }}\n            value={typeInForm}\n            getOptionLabel={option => option?.razonSocial}\n            isOptionEqualToValue={(option, value) => option?.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField {...params} label='Razon Social' />}\n          />\n\n            <Field\n              as={TextField}\n              title=\"Cargar número completo de la factura.\"\n              label='Numero'\n              type='float'\n              required     \n              maxLength={11}         \n              size=\"small\"\n              sx={{ width: '20ch' }}\n              name='numero'\n              onChange={event => onlyNumbers(event, setFieldValue, 'numero')}\n            /> \n\n          <Field\n            as={TextField}\n            label='Monto'\n            title=\"Monto total, solo numeros.\"\n            required\n            maxLength={9}\n            type='float'\n            size=\"small\"\n            sx={{ width: '20ch' }}\n            name='montoTotal'\n            onChange={event => onlyNumbers(event, setFieldValue, 'montoTotal')}\n          />\n\n          &nbsp;&nbsp;\n          <Hidden  smUp={( !verCheckBlue)} >        \n          <FormControlLabel \n            control={ <Checkbox  id={'blue'}  name={'blue'}             \n            onChange={(event) => onlyCheck(event, setFieldValue, 'blue', chkblue, setChkblue)}\n            /> }   label=\"Blue\"  />\n          </Hidden>\n          &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n\n            <Button type=\"submit\" disabled={isSubmitting}>\n              Agregar\n            </Button>\n\n            <Box sx={{ width: '100%' }}>\n            <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>         \n          </Box>\n\n          </Form>\n        )}\n      </Formik>\n      <Prompt\n        message=\"Ya existe ese número de factura para esa razon social.\"\n        ok\n      />\n    </>\n  );\n}\n\nfunction onlyNumbers(event, setFieldValue, typeOfData) {\n  event.preventDefault();\n  const { value } = event.target;\n  const regex = /^\\d{0,11}(\\.\\d{0,2})?$/;\n  var regex2 = /[\\x08\\x0D\\d]/;\n  if (regex.test(value.toString()) || regex2.test(value.toString())) {\n    setFieldValue(typeOfData, value.toString());\n  }\n}\n\nfunction setNumber(val, setFieldValue){\n\n  if(val){\n    let f = new Date();\n    let n = \"\" + yearMonthDayNum(f) + \"01\";\n    setFieldValue('numero', parseInt(n));\n  }else{\n    setFieldValue('numero', '');\n  }\n}\n\nfunction onlyCheck(event, setFieldValue, typeOfData, chkblue, setChkblue, setFBlue) {\n  event.preventDefault();\n  // const { value } = event.target;\n  setChkblue(!chkblue);\n  if(chkblue){ \n\n    setNumber(true, setFieldValue);\n    setFieldValue(typeOfData, 'on');    \n    //setFBlue(true);\n\n  }else{\n\n    setFieldValue(typeOfData, 'off');\n    setNumber(false, setFieldValue);\n    \n    //setFBlue(false);\n\n  }\n  \n}\n\n\n\n","\n  import { useState } from 'react';\n  import { TextField, Autocomplete } from '@mui/material';\n  import { Formik, Form, Field } from 'formik';\n  \n  export function FiltroFactura({setFiltComp, setFiltFide, setFiltRS, idSociety, fideicomisos, proveedores}) {\n  \n    var tipos = JSON.parse(localStorage.getItem(\"tipos\"));\n    \n    const [fideInForm, setFideInForm] = useState(null);\n    const [rsInForm, setRsInForm] = useState(null);\n    const [compInForm, setCompInForm] = useState(null);  \n  \n    function filterOP(campo, newValue){\n  \n      // let arr = filt;\n      let id = -1\n      if(newValue?.id){\n        id = newValue.id;\n      }\n      if(campo ==='comp'){setFiltComp(id);}\n      if(campo ==='fide'){setFiltFide(id);}\n      if(campo ==='rs'){setFiltRS(id);}\n\n    }  \n    \n    return (\n      <Formik\n        initialValues={{\n          \n          numero: '',\n          montoTotal: '',\n          fechaIngreso: new Date(),\n  \n        }}\n        onSubmit={async (values, { setSubmitting, resetForm }) => {\n           \n          // \n  \n          setSubmitting(false);\n        }}>\n        {({ isSubmitting, setFieldValue }) => (\n          <Form>\n\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Filtrar por Tipo Comprobante'\n              disablePortal\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setCompInForm(newValue);\n                filterOP('comp', newValue);\n              }}\n              value={compInForm}\n              getOptionLabel={option => option.descripcion}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={(tipos? tipos:[])}\n              renderInput={params => <TextField variant=\"standard\" {...params} label='Filtrar por Tipo Comprobante' />}\n            />\n            &nbsp;\n  \n            <Field\n              as={Autocomplete}\n              size={'small'}\n              \n              label='Filtrar por Fideicomiso'\n              disablePortal\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setFideInForm(newValue);\n                filterOP('fide', newValue);\n              }}\n              value={fideInForm}\n              getOptionLabel={option => option.nombre}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={(fideicomisos? fideicomisos:[])}\n              renderInput={params => <TextField variant=\"standard\" {...params} label='Filtrar por Fideicomiso' />}\n            />\n            \n            &nbsp;\n            <Field\n              as={Autocomplete}\n              size={'small'}\n              label='Filtrar por Razon Social'\n              disablePortal\n              style={{ width: '230px', display: 'inline-flex' }}\n              onChange={(event, newValue) => {\n                setRsInForm(newValue);\n                filterOP('rs', newValue);\n              }}\n              value={rsInForm}\n              getOptionLabel={option => option.razonSocial}\n              isOptionEqualToValue={(option, value) => option.id === value.id}\n              options={(proveedores? proveedores:[])}\n              renderInput={params => <TextField variant=\"standard\" {...params} label='Filtrar por Razon Social' />}\n            />\n            &nbsp;\n\n          \n          </Form>\n        )}\n      </Formik>\n    );\n  }\n  ","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport { Avatar } from '@mui/material';\nimport { Button } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport { mostrarFecha } from 'src/utils/utils';\nimport { useNavigate } from 'react-router-dom';\n\nconst columns = (verColumnBlue, acceso, setIsPromptOpen, setRowIdToDelete) => [\n\n  {\n    field: 'id',\n    headerName: '',\n    width: 55,\n    editable: false,\n    headerAlign: 'center',\n  },\n  \n  {\n    field: 'blue',\n    headerName: 'Blue',\n    hide: !verColumnBlue,\n    width: 55,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: ({ value }) => value===0?'' :<Avatar sx={{ bgcolor: '#3944BC' }} >B</Avatar>,\n  },\n  {\n    field: 'tipo', // campo en grilla\n    headerName: 'Tipo de Comp.',\n    width: 170,\n    // type: 'singleSelect',\n    editable: false,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    // renderEditCell: props => <ComboBoxFon fondos_s={fondos_s} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'left',\n    /*renderCell: IrDetalleOP_1,*/\n  }, \n  {\n    field: 'empresa',\n    headerName: 'Razon Social',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'numero',\n    headerName: 'Número',\n    width: 155,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'montoTotal',\n    headerName: 'Monto',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n\n    valueFormatter: ({ value }) =>\n      new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    width: 50,\n    editable: acceso,\n    headerAlign: 'center',\n  },\n  {\n    field: 'link',\n    headerName: 'Link',\n    width: 110,\n    editable: acceso,\n    headerAlign: 'center',\n    /*renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >{ link }</a>)*/\n  },\n  {\n    field: 'link2',\n    headerName: '',\n    width: 20,\n    editable: false,\n    headerAlign: 'center',\n    renderCell:  ({ row: { link } }) => (\n      <a href={ link }  rel=\"noreferrer\" target=\"_blank\" >ver</a>)\n  },\n\n  {\n    field: 'fechaIngreso',\n    headerName: 'Fecha',\n    width: 155,\n    type: 'date',\n    editable: acceso,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: fFechaIngreso,\n    \n  },\n  {\n    field: 'diasVTO',\n    headerName: 'Días VTO',\n    width: 140,\n    editable: acceso,\n    type: 'singleSelect',\n    valueOptions: [0,1,2,3,4,5,6,7,10,14,15,20,21,28,30,40,50,60,70,80,90,100,120,150]\n  },\n  {\n    field: 'fechaIngreso_mas_diasVTO',\n    headerName: 'VTO',\n    width: 155,\n    type: 'date',\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: fFechaVTO,\n    \n  },\n  {\n    field: 'OPnumero',\n    headerName: 'OP',\n    width: 100,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'estadoOP',\n    headerName: 'Estado OP',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n  },\n\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    hide: !acceso,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId, OPnumero} }) => (OPnumero>0? '':\n      <DeleteIcon\n        onClick={e => {\n\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\n// por ahora se inicializa en el login\nvar estados = JSON.parse(localStorage.getItem(\"estados\"));\n\nexport function GrillaFactura({ filtComp, filtFide, filtRS, idSociety, loggedUser }) {\n  \n  const navigate = useNavigate();\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();\n  \n  var tipos = JSON.parse(localStorage.getItem(\"tipos\"));\n  var blue = 0;\n  var verColumnBlue = false;\n  if(loggedUser?.['rol.factura'] ==='total'){blue= -1; verColumnBlue = true;}\n  var acceso = true;\n  if(loggedUser?.['rol.factura'] ==='vista'){acceso =false}\n\n\n  const {\n    data: facturaInformation,\n    isLoading,\n    error,\n  } = useQuery(['factura', idSociety], () => getMethod(`factura/listar/${idSociety.id}/todas/nada/${blue}`));\n\n  const queryClient = useQueryClient();\n\n  const { mutate: eliminate } = useMutation(\n    async idFactura => await deleteMethod(`factura/eliminar/${idSociety.id}`, { id: idFactura }),\n    {\n      onMutate: async idFactura => {\n        await queryClient.cancelQueries(['factura', idSociety]);\n        const prevData = queryClient.getQueryData(['factura', idSociety]);\n        const newData = prevData.filter(factura => factura.id !== idFactura);\n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idFactura, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n  // eliminate(1);\n\n  const { mutate: modifyData } = useMutation(\n    \n    async ({ field, id, value }) =>\n      ( \n     \n\n      await postMethod(`factura/modificar/${idSociety.id}`, {\n        id,\n        [field]: value,\n      })\n      ),\n      \n    {\n      onMutate: async ({ field, id, value }) => {\n        await queryClient.cancelQueries(['factura', idSociety]);\n        const prevData = queryClient.getQueryData(['factura', idSociety]);\n\n        const newData = [\n          ...prevData.filter(factura => factura.id !== id),\n          { ...prevData.find(factura => factura.id === id), [field]: value },\n        ];  \n        queryClient.setQueryData(['factura', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, id, context) => queryClient.setQueryData(['factura', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['factura', idSociety]),\n    }\n  );\n\n  const { mutate: irDetalle } = useMutation(\n    async el =>    \n      navigate(`./${el?.OPs[0]?.id}/${el?.OPs[0]?.createdAt}/${el.empresaId}/${el?.OPs[0]?.numero}/${el.fideicomisos[0]?.nombre}/${el?.OPs[0]?.estadoOP}/${el?.OPs[0]?.authADM}/${el?.OPs[0]?.authOBRA}/${el?.OPs[0]?.confirmada}/${el?.OPs[0]?.blue}`)\n\n  );\n\n  function filtrar(element, filtComp, filtFide, filtRS){\n\n    if(filtFide === -1 && filtRS === -1 && filtComp === -1){\n      return true;\n    }\n\n    if(filtFide > -1 && filtRS === -1 && filtComp === -1){//fide\n      if(element.fideicomisoId===filtFide){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS > -1 && filtComp === -1){// proveedor\n\n      if(element.empresaId===filtRS){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS === -1 && filtComp > -1){//estado\n      if(element.tipo===filtComp){return true;}else{return false;}\n    }\n\n    if(filtFide > -1 && filtRS > -1 && filtComp === -1){\n      if(element.fideicomisoId===filtFide && element.empresaId===filtRS){return true;}else{return false;}\n    }\n    if(filtFide > -1 && filtRS === -1 && filtComp > -1){\n      if(element.fideicomisoId===filtFide && element.tipo===filtComp){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS > -1 && filtComp > -1){\n      if(element.empresaId===filtRS && element.tipo===filtComp){return true;}else{return false;}\n    }\n    if(filtFide > -1 && filtRS > -1 && filtComp > -1){\n      if(element.fideicomisoId===filtFide && element.empresaId===filtRS && element.tipo===filtComp){return true;}else{return false;}\n    }  \n\n  }\n\n  \n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n\n    return (\n      <div style={{ width: '100%' }}>\n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <DataGrid\n          rows={facturaInformation.filter(element =>filtrar(element, filtComp, filtFide, filtRS)).map(factura => ({\n            id: factura?.id,\n            fideicomiso: (factura?.fideicomisos? factura?.fideicomisos[0]?.nombre:''),\n            empresaId: factura?.empresaId,\n            empresa:(factura?.empresas? factura?.empresas[0]?.razonSocial:''),\n            blue: factura?.blue,\n            numero: factura?.numero,\n            // tipo: factura?.tipo,\n            tipo: {\n              id: factura.tipo,\n              descripcion: tipos?.find(tipo => tipo.id === factura.tipo)?.descripcion,\n            },\n            link: factura?.link,\n            link2: factura?.link,\n            montoTotal: parseInt(factura.tipo)===2? (-1 * factura.montoTotal):factura.montoTotal, //factura?.montoTotal,\n            moneda: factura?.moneda,\n            fechaIngreso: factura?.fechaIngreso,\n            diasVTO: factura?.diasVTO, \n            fechaVTO: factura?.fechaVTO,  \n            OPnumero : (factura?.OPs? factura?.OPs[0]?.numero:''),\n            estadoOP:(factura?.OPs? estados[factura?.OPs[0]?.estado]?.descripcion:''),\n            deleteId: factura?.id,\n            onIrDetalle: () => irDetalle(factura),  \n\n          }))}OPs\n          onCellEditCommit={modifyData}\n          columns={columns(verColumnBlue, acceso, setIsPromptOpen, setRowIdToDelete)}\n          pageSize={25}\n          disableSelectionOnClick\n          autoHeight\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n        />\n      </div>\n    );\n}\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n      <GridToolbarExport />\n    </GridToolbarContainer>\n  );\n}\n\nfunction fFechaVTO(params) {\n  let f = new Date(params.row.fechaIngreso)\n  let d =0;\n  if(params.row.diasVTO){ \n    if(params.row.diasVTO > 0 ){\n       d =params.row.diasVTO;\n    }\n  }\n  f.setDate(f.getDate() + d);\n  let fechaVTO = mostrarFecha(f);\n\n\n  return fechaVTO;\n}\n\nfunction fFechaIngreso(params) {\n  let fechaIngreso = null; \n  if(params.row.fechaIngreso){\n    fechaIngreso = mostrarFecha(params.row.fechaIngreso);\n  }else{\n    fechaIngreso = '';\n  }\n\n  return fechaIngreso;\n}\n\nfunction IrDetalleOP_1(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const OPnumero = params.row.OPnumero;\n  return <Button onClick={sendRow} >{OPnumero}  </Button>;\n} ","import { Container, Box, Hidden } from '@mui/material';\nimport { useState } from 'react';\nimport { useQuery} from 'react-query';\nimport { getMethod } from 'src/utils/api';\nimport { Helmet } from 'react-helmet';\nimport { FormFactura } from 'src/components/factura/FormFactura';\nimport { FiltroFactura } from 'src/components/factura/FiltroFactura';\nimport { GrillaFactura } from 'src/components/factura/GrillaFactura';\n\nexport function Factura({ idSociety , loggedUser}) {\n\n  const [filtComp, setFiltComp] = useState(-1);\n  const [filtFide, setFiltFide] = useState(-1);\n  const [filtRS, setFiltRS] = useState(-1); \n\n  const { data: fideicomisos } = useQuery(\n    ['fideicomisos'],\n    () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n  const { data: proveedores } = useQuery(\n    ['proveedores'],\n    () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n\n  return (\n    <>\n      <Helmet>\n        <title>Facturas | {idSociety?.nombre ?? ''}</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}\n      >\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n          <Box sx={{ pt: 3 }} >\n            <FormFactura idSociety={idSociety} loggedUser={loggedUser} fideicomisos={fideicomisos} proveedores={proveedores} />\n          </Box>\n          </Hidden> \n          <Box sx={{ pt: 3 }}>\n            <FiltroFactura idSociety={idSociety} \n            fideicomisos={fideicomisos}  setFiltComp={setFiltComp} setFiltFide={setFiltFide} setFiltRS={setFiltRS}  proveedores={proveedores}\n            />\n          </Box>\n          <Box sx={{ pt: 3 }}>\n            <GrillaFactura idSociety={idSociety} loggedUser={loggedUser}\n            filtComp={filtComp} filtFide={filtFide} filtRS={filtRS}  />\n          </Box>\n        </Container>\n      </Box>\n    </>\n  );\n}\n","import { useState } from 'react';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { IconButton, Collapse, Box, TextField, Button, Autocomplete, Alert } from '@mui/material';\nimport { useMutation, useQueryClient } from 'react-query';\nimport { Formik, Form, Field } from 'formik';\nimport { postMethod } from 'src/utils/api';\n\nexport function ManipularOC({ idSociety, loggedUser, fideicomisos, proveedores  }) {\n\n  const queryClient = useQueryClient();\n\n  const { mutate: addOC } = useMutation(\n    newData => postMethod(`OC/agregar/${idSociety.id}`, newData),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OC', idSociety])\n    }\n  );\n\n\n  const [fideInForm, setFideInForm] = useState(null);\n  const [rsInForm, setRsInForm] = useState(null);\n  // const [factInForm, setFactInForm] = useState(null);  \n  const [open, setOpen] = useState(false);\n  \n  return (\n    <Formik\n      initialValues={{\n        \n        numero: '',\n        montoTotal: '',\n        fechaIngreso: new Date(),\n\n      }}\n      onSubmit={async (values, { setSubmitting, resetForm }) => {\n        // console.log(11111, chkblue);\n        addOC({\n\n          fideicomisoId: values.fideicomiso.id,\n          empresaId: values.empresa.id,\n          descripcion: values.descripcion,\n          creador: loggedUser.id ,\n                    \n        });\n        \n        //resetForm();\n        setOpen(true);\n        setSubmitting(false);\n      }}>\n      {({ isSubmitting, setFieldValue }) => (\n        <Form>\n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Fideicomiso'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setFideInForm(newValue);\n              setFieldValue('fideicomiso', newValue);\n            }}\n            value={fideInForm}\n            getOptionLabel={option => option.nombre}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(fideicomisos? fideicomisos:[])}\n            renderInput={params => <TextField {...params} label='Fideicomiso' />}\n          />\n          \n\n          <Field\n            as={Autocomplete}\n            size={'small'}\n            label='Razon Social'\n            disablePortal\n            style={{ width: '230px', display: 'inline-flex' }}\n            onChange={(event, newValue) => {\n              setRsInForm(newValue);\n              setFieldValue('empresa', newValue);\n            }}\n            value={rsInForm}\n            getOptionLabel={option => option.razonSocial}\n            isOptionEqualToValue={(option, value) => option.id === value.id}\n            options={(proveedores? proveedores:[])}\n            renderInput={params => <TextField {...params} label='Razon Social' />}\n          />\n\n          <Field \n            as={TextField} \n            required \n            size=\"small\" \n            label='Descripción' \n            type='string' \n            name='descripcion' \n          />\n\n          \n\n        \n\n          <Button id='bagregar' variant=\"text\" type='submit' disabled={isSubmitting}>\n            Agregar\n          </Button>\n\n        \n\n          <Box sx={{ width: '100%' }}>\n            <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>         \n          </Box>\n\n        </Form>\n      )}\n    </Formik>\n  );\n}\n\n\n\n","import * as React from 'react';\nimport { useState } from 'react';\nimport { useQuery, useQueryClient, useMutation } from 'react-query';\nimport { DataGrid, GridToolbarContainer, GridToolbarExport } from '@mui/x-data-grid';\nimport { Delete as DeleteIcon } from '@mui/icons-material';\nimport CloseIcon from '@mui/icons-material/Close';\nimport { Box, Button, TextField, Avatar, Autocomplete, Hidden} from '@mui/material';\nimport { IconButton, Collapse, Alert } from '@mui/material';\nimport { getMethod, postMethod, deleteMethod } from 'src/utils/api';\nimport { ToastContainer, toast } from 'react-toastify';\nimport { useNavigate } from 'react-router-dom';\nimport { usePrompt } from 'src/utils/usePrompt';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { PDFDownloadLink, pdf } from \"@react-pdf/renderer\";\nimport RepOp from \"src/components/reportes/orden_de_pago/orden_de_pago\";\nimport { darken, lighten } from '@mui/material/styles';\n\nconst getBackgroundColor = (color, mode) =>\n  mode === 'dark' ? darken(color, 0.6) : lighten(color, 0.6);\n\nconst getHoverBackgroundColor = (color, mode) =>\n  mode === 'dark' ? darken(color, 0.5) : lighten(color, 0.5);\n  \n\nvar miOP={};\nvar fa={};\nvar idSociedad=0;\n\n\nconst columns = (verColumnBlue, puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete) => [\n  {\n    field: 'id',\n   \n  },\n  {\n    field: 'blue',\n    headerName: 'Blue',\n    hide: !verColumnBlue,\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    renderCell: ({ value }) => value===0?'' :<Avatar sx={{ bgcolor: '#3944BC' }} >B</Avatar>,\n  },\n  {\n    field: 'createdAt',\n    headerName: 'Fecha',\n    width: 120,\n    type: 'date',\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    valueFormatter: ({ value }) => new Date(value).toLocaleDateString('es-AR', { timeZone: 'UTC' }),\n  },\n  {\n    field: 'fideicomiso',\n    headerName: 'Fideicomiso',\n    width: 160,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: IrDetalleOP_1,\n  },\n  {\n    field: 'numero',\n    headerName: 'Numero',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    renderCell: IrDetalleOP_2,    \n  },\n  {\n    field: 'empresa',\n    headerName: 'Razón Social',\n    width: 170,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n  },  \n  {\n    field: 'monto',\n    headerName: 'Monto',\n    width: 130,\n    editable: false,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),\n  },\n  {\n    field: 'moneda',\n    headerName: '',\n    width: 70,\n    editable: false,\n    headerAlign: 'center',\n    align: 'left',    \n  },\n  {\n    field: 'estadoOP', // campo en grilla\n    headerName: 'Estado',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxEst estados={estados} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'estadoRET', // campo en grilla\n    headerName: 'Retenciones',\n    width: 150,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxRet retenciones={retenciones} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'facturas',\n    headerName: 'Facturas',\n    width: 140,\n    editable: false,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { misFacturas }}) => misFacturas?.map(({numero}) => numero)?.join(', '), \n  },\n  {\n    field: 'RET_GAN',\n    headerName: 'GAN',\n    width: 120,\n    hide: true,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_IVA',\n    headerName: 'IVA',\n    width: 120,\n    hide: true,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'RET_SUSS',\n    headerName: 'SUSS',\n    width: 120,\n    hide: true,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'right',\n    valueFormatter: ({ value }) =>\n    new Intl.NumberFormat('es-AR', { minimumFractionDigits: 2 }).format(Number(value)),    \n  },\n  {\n    field: 'retencion',\n    hide: true,\n  },\n\n  {\n    field: 'aprobado_obra',\n    hide: true,\n  },\n  {\n    field: 'aprobado obra',\n    headerName: 'Ap. Obra',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonObraAuthRow,\n  },\n  {\n    field: 'aprobado_adm',\n    hide: true,\n  },\n  {\n    field: 'aprobado adm',\n    headerName: 'Ap. ADM',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: NonAdmAuthRow,\n  },\n  {\n    field: 'estado',\n    hide: true,\n  },\n  {\n    field: 'formaPago',\n    headerName: 'Forma Pago',\n    width: 160,\n    editable: false,\n  },\n  {\n    field: 'fondos_',\n    hide: true,\n  },\n  {\n    field: 'fondos', // campo en grilla\n    headerName: 'Fondos',\n    width: 150,\n    type: 'singleSelect',\n    editable: puedeEditar, //props.row.confirmada,\n    renderCell: ({ value }) => value.descripcion, // a visualizar\n    renderEditCell: props => <ComboBoxFon fondos_s={fondos_s} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'rubro',\n    hide: true,\n  },  \n  {\n    field: 'rubroID',\n    headerName: 'Rubro',\n    width: 140,\n    hide: true,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBox rubros={rubros} props={props} />,\n    headerAlign: 'center',\n  },\n  {\n    field: 'subrubro',\n    hide: true,\n  },\n  {\n    field: 'subrubroID',\n    headerName: 'Sub Rubro',\n    width: 140,\n    hide: true,\n    editable: puedeEditar,\n    renderCell: ({ value }) => value.nombre,\n    renderEditCell: props => <ComboBoxSub subRubros={subRubros} props={props} />,\n    headerAlign: 'center',\n  },  \n\n  {\n    field: 'descripcion',\n    headerName: 'Detalle',\n    width: 140,\n    editable: puedeEditar,\n    headerAlign: 'center',\n    align: 'center',    \n  }, \n  {\n    field: 'archivada',\n    headerName: 'Generar',\n    width: 140,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: DescargarPDF,\n  },\n  {\n    field: 'enviada',\n    headerName: 'Enviar',\n    width: 90,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: EnviarMail,\n  },\n  {\n    field: 'confirmada',\n    headerName: 'Conf',\n    type: 'boolean',\n    width: 120,\n    editable: false,\n    headerAlign: 'center',\n  },\n  {\n    field: 'deleteIcon',\n    headerName: ' ',\n    hide: !puedeEditar,\n    width: 50,\n    headerAlign: 'center',\n    align: 'center',\n    renderCell: ({ row: { deleteId, confirmada } }) => (\n      confirmada? \"\":<DeleteIcon\n        onClick={e => {\n          setRowIdToDelete(deleteId);\n          setIsPromptOpen(true);\n        }}\n      />\n    ),\n  },\n];\n\n// por ahora se inicializa en el login\nvar estados = JSON.parse(localStorage.getItem(\"estados\"));\nvar retenciones = JSON.parse(localStorage.getItem(\"retenciones\"));\nvar fondos_s = JSON.parse(localStorage.getItem(\"fondos_s\"));\n\nconst apiServerUrl = process.env.REACT_APP_API_SERVER;\nexport function GrillaOT({ filtFide, filtRS, filtEst, idSociety, loggedUser, opInformation, isLoading, error}) {\n  \n  idSociedad = idSociety.id;\n  var result = {};\n\n  var puedeEditar = true;\n  const accesoOP = loggedUser?.['rol.op'];\n  if( accesoOP ==='vista'){puedeEditar =false}\n\n  var blue = 0;\n  var verColumnBlue = false;\n  if(loggedUser?.['rol.op'] ==='total'){blue= -1; verColumnBlue = true;}  \n\n  const navigate = useNavigate();\n  const { Prompt, setIsPromptOpen } = usePrompt(() => {});\n  const [rowIdToDelete, setRowIdToDelete] = useState();  \n\n  const queryClient = useQueryClient();\n\n  const { data: rubros } = useQuery(['rubros', idSociety], () =>\n    getMethod(`rubro/listar/${idSociety.id}`)\n  );\n\n  const { data: subRubros } = useQuery(['subrubros', idSociety], () =>\n    getMethod(`subrubro/listar/${idSociety.id}/0`)\n  );\n\n  // es un array de facturas para la columna facturas asociada a una OP (OPId)\n  const { data: grfacturas } = useQuery(['grfacturas', idSociety.id], async() =>\n  await getMethod(`factura/listar/${idSociety.id}/todas/nada/${blue}`));\n\n\n  const { mutate: irDetalle } = useMutation(\n\n    async el => await  getMethod(`op/mostrar/${idSociety.id}/${el.id}`),\n      {onSettled: (el) => { /*queryClient.refetchQueries(['formOP', idSociety]);*/\n      navigate(`./${el.id}/${el.createdAt}/${el.empresaId}/${el.numero}/${el.fideicomisos[0]?.nombre}/${el.estadoOP}/${el.confirmada}/${el.blue}`)}\n    }\n    \n  );\n\n  const { mutate: eliminate } = useMutation(\n    async idOP => await deleteMethod(`OP/eliminar/${idSociety.id}`, { id: idOP }),\n    {\n      onMutate: async idOP => {\n        await queryClient.cancelQueries(['OP', idSociety]);\n        const prevData = queryClient.getQueryData(['OP', idSociety]);\n        const newData = prevData.filter(op => op.id !== idOP);\n        queryClient.setQueryData(['OP', idSociety], newData);\n        return prevData;\n      },\n      onError: (err, idOP, context) => queryClient.setQueryData(['OP', idSociety], context),\n      onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n    }\n  );\n\n   /***** generar y subir pdf ***********************************************************************/\n\n  const { mutate: cargar_y_subir_OP } = useMutation(\n    async el =>         \n        result = await getMethod(`op/mostrarConFacturas/${idSociety.id}/${el.id}`),\n    {\n      onSuccess: async () =>{\n         miOP = result.op;\n         fa = {item: result.item};\n         getPdfBlob(miOP?.id, miOP?.fideicomisos[0]?.nombre, miOP?.numero, miOP?.empresas[0]?.razonSocial);\n        }        \n    }     \n  );\n\n  async function getPdfBlob(idOP, fideicomiso, numero, nom_empresa){\n\n\n\n    let blobPdf = await pdf(NewDocument()).toBlob();\n    let formData = new FormData();\n\n    \n    var fileName= numero + \" OP-\" + fideicomiso + \"-\" +  nom_empresa + \".pdf\";\n\n    formData.append('logo', blobPdf);\n    formData.append('id', idOP);\n    formData.append('fideicomiso', fideicomiso);\n    formData.append('numero', numero);\n    formData.append('nombreArchivo', fileName);\n    formData.append('archivada', 1);    \n    postMethod(`op/modificar/${idSociety.id}`, formData);\n    \n  }\n\n  const NewDocument = () => {\n    \n    return (\n      <RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociety.id} />\n    )\n  }\n\n  /***** fin generar y subir pdf ************************************************************************/\n\n \n  const { mutate: nonAuthObra } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n        id : el.authOBRA,\n        tipoAutorizacion: 'obra',\n        opid : el.id,\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: nonAuthAdm } = useMutation(\n    async el =>\n      await deleteMethod(`autorizacion/eliminar/${idSociety?.id}`, {\n\n        id : el.authADM,\n        tipoAutorizacion: 'adm',\n        opid : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: enviarCorreo } = useMutation(\n    async el =>\n      await postMethod(`OP/enviarMail/${idSociety?.id}`, {\n\n        mailTo : idSociety?.mailOP,\n        mailaccount : idSociety?.mailaccount,\n        mailfromname : idSociety?.mailfromname,\n        mailConstructora : idSociety?.mailConstructora,\n        fideicomiso : el.fideicomisos[0]?.nombre,        \n        razonSocial : el.empresas[0]?.razonSocial,\n        enviar_OP_auto : el.empresas[0]?.enviar_OP_auto,\n        numero : el.numero,\n        id : el.id,\n\n      }),\n    {\n      onSuccess: async () =>\n        await queryClient.refetchQueries(['OP', idSociety]),\n    }\n  );\n\n  const { mutate: modifyData } = useMutation(\n    async ({ field, id, value }) =>\n            await postMethod(`OP/modificar/${idSociety.id}`, {id,[field]: value,}),\n            \n        {\n          onMutate: async ({ field, id, value }) => {\n            await queryClient.cancelQueries(['OP', idSociety]);\n            const prevData = queryClient.getQueryData(['OP', idSociety]);\n            const newData = [\n              ...prevData.filter(op => op.id !== id),\n              { ...prevData.find(op => op.id === id), [field]: value },\n            ];\n            queryClient.setQueryData(['OP', idSociety], newData);\n            return prevData;\n          },\n          onError: (err, id, context) => queryClient.setQueryData(['OP', idSociety], context),\n          onSettled: () => queryClient.invalidateQueries(['OP', idSociety]),\n        }\n  );\n\n  const [selectionModel, setSelectionModel] = useState([]);\n\n  const [open, setOpen] = useState(false);\n\n  function filtrar(element, filtFide, filtRS, filtEst){\n\n    if(filtFide === -1 && filtRS === -1 && filtEst === -1){\n      return true;\n    }\n\n    if(filtFide > -1 && filtRS === -1 && filtEst === -1){//fide\n      if(element.fideicomisoId===filtFide){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS > -1 && filtEst === -1){// proveedor\n\n      if(element.empresaId===filtRS){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS === -1 && filtEst > -1){//estado\n      if(element.estadoOP===filtEst){return true;}else{return false;}\n    }\n\n    if(filtFide > -1 && filtRS > -1 && filtEst === -1){\n      if(element.fideicomisoId===filtFide && element.empresaId===filtRS){return true;}else{return false;}\n    }\n    if(filtFide > -1 && filtRS === -1 && filtEst > -1){\n      if(element.fideicomisoId===filtFide && element.estadoOP===filtEst){return true;}else{return false;}\n    }\n    if(filtFide === -1 && filtRS > -1 && filtEst > -1){\n      if(element.empresaId===filtRS && element.estadoOP===filtEst){return true;}else{return false;}\n    }\n    if(filtFide > -1 && filtRS > -1 && filtEst > -1){\n      if(element.fideicomisoId===filtFide && element.empresaId===filtRS && element.estadoOP===filtEst){return true;}else{return false;}\n    }\n\n\n  }\n\n  if (isLoading) {\n    return 'Cargando...';\n  } else if (error) {\n    return `Hubo un error: ${error.message}`;\n  } else\n    \n    return (\n\n      <div style={{ width: '100%' }}>\n        \n        <Prompt message=\"¿Eliminar fila?\" action={() => eliminate(rowIdToDelete)} />\n        <ToastContainer /> \n\n        <Box\n          sx={{\n            height: 400,\n            width: 1,\n          \n            '& .super-app-theme--true': {\n              bgcolor: (theme) =>\n              getBackgroundColor(theme.palette.success.main, theme.palette.mode),\n            '&:hover': {\n              bgcolor: (theme) =>\n                getHoverBackgroundColor(\n                  theme.palette.success.main,\n                  theme.palette.mode,\n                ),\n            },\n            },\n            '& .super-app-theme--otra': {\n              bgcolor: (theme) =>\n                getBackgroundColor(theme.palette.error.main, theme.palette.mode),\n              '&:hover': {\n                bgcolor: (theme) =>\n                  getHoverBackgroundColor(theme.palette.error.main, theme.palette.mode),\n              },\n            },\n          }}\n        >         \n        \n        <DataGrid \n          rows={opInformation.filter(element =>filtrar(element, filtFide, filtRS, filtEst)).map(OP => ({\n            id: OP.id,    \n            acceso: accesoOP,\n            numero: OP.numero,\n            empresa: OP.empresas[0]?.razonSocial,\n            empresaId: OP.empresaId,\n            monto: OP.monto, \n            moneda: OP.moneda,             \n            RET_SUSS: OP.RET_SUSS,\n            RET_GAN: OP.RET_GAN,\n            RET_IVA: OP.RET_IVA,\n            rubroId: OP.rubroId,            \n            estadoRET: {\n              id: OP.estadoRET,\n              descripcion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            },\n            estadoOP: {\n              id: OP.estadoOP,\n              descripcion: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            },\n            blue: OP.blue,\n            confirmada: OP.confirmada===0? false: true,\n            fondos: {\n              id: OP.fondos,\n              descripcion: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,\n            },\n            fideicomiso: OP.fideicomisos[0]?.nombre,\n            archivada: OP.archivada,\n            enviada: OP.enviada,\n            descripcion: OP.descripcion,\n            createdAt: OP.createdAt,   \n            rubroID: {\n              id: OP.rubroId,\n              nombre: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            },\n            subrubroID: {\n              id: OP.subrubroId,\n              nombre: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,\n            }, \n            apr_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            apr_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            misFacturas: grfacturas?.filter(factura => factura?.OPId === OP.id),\n            deleteId: OP.id,\n            /* para exportar*/\n            retencion: retenciones?.find(retencion => retencion.id === OP.estadoRET)?.descripcion,\n            aprobado_obra: (OP.auth_obra[0]?OP.auth_obra[0].usuarios[0].user:''),\n            aprobado_adm: (OP.auth_adm[0]?OP.auth_adm[0].usuarios[0].user:''),\n            estado: estados?.find(estado => estado.id === OP.estadoOP)?.descripcion,\n            fondos_: fondos_s?.find(fondos => fondos.id === OP.fondos)?.descripcion,  \n            formaPago: OP.formaPago,          \n            rubro: rubros?.find(rubro => rubro.id === OP.rubroId)?.rubro,\n            subrubro: subRubros?.find(subRubro => subRubro.id === OP.subRubroId)?.subRubro,     \n            onAuthObra: () => nonAuthObra(OP),\n            onAuthAdm: () => nonAuthAdm(OP),\n            onEnviar: () => enviarCorreo(OP),\n            cargarOP: () => cargar_y_subir_OP(OP),\n            esEditable: () => (OP),\n            onIrDetalle: () => irDetalle(OP),    \n            \n          }))}\n          onCellEditCommit={modifyData}\n          columns={columns(verColumnBlue, puedeEditar, rubros, subRubros, setIsPromptOpen, setRowIdToDelete)}\n          isCellEditable={(params) => (!params.row.confirmada || accesoOP ==='total')}\n\n          /*disableSelectionOnClick*/\n          checkboxSelection\n          onSelectionModelChange={setSelectionModel}\n               \n          autoHeight\n          density={'comfortable'}\n          scrollbarSize\n          components={{\n            Toolbar: CustomToolbar,\n          }}\n\n          getRowClassName={(params) => `super-app-theme--${params.row.confirmada}`}\n          /*\n          style={{\n            rowStyle: (params) => ({\n              backgroundColor:\n                  params.row.confirmada\n                  ? \"#000\"\n                  : \"#fff\"\n            })\n        }}  */\n          \n        >      \n\n        </DataGrid>\n\n        <Hidden  smUp={(loggedUser['rol.op'] ==='vista')} >\n            <Button onClick={()=>generar_y_enviar(selectionModel, idSociety, setOpen)} >\n                Generar y Enviar OPs Seleccionadas\n            </Button>\n        </Hidden>\n  \n        <Collapse in={open}>\n              <Alert\n                action={\n                  <IconButton\n                    aria-label=\"close\"\n                    color=\"inherit\"\n                    size=\"small\"\n                    onClick={() => {\n                      setOpen(false);\n                    }}\n                  >\n                    <CloseIcon fontSize=\"inherit\" />\n                  </IconButton>\n                }\n                sx={{ mb: 2 }}\n              >\n                Acción realizada!\n              </Alert>\n            </Collapse>  \n\n\n        </Box>\n\n        \n\n      </div>\n    );\n\n\n}\n\nfunction generar_y_enviar(selectionModel, idSociety, setOpen) {\n\n    getOPs(selectionModel, idSociety, setOpen);\n\n}\n\nasync function getOPs(arr, idSociety, setOpen) {\n\n  for (let i = 0; i < arr.length ; i++) {\n    try {      \n\n      let result = await getMethod(`op/mostrarConFacturas/${idSociety.id}/${arr[i]}`);\n      let miOP = result.op;\n      let fa = {item: result.item};\n      if(miOP.estadoOP ===3 && miOP.blue === 0){\n            console.log('AAi=', i, 'res: ', miOP.numero);\n            const NewDocument = () => {    \n              return (\n                <RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociety.id} />\n              )\n            }\n            let generado = await getPdfBlob_2(NewDocument, miOP.id, miOP?.fideicomisos[0]?.nombre, miOP.numero, miOP?.empresas[0]?.razonSocial, idSociety);\n            console.log(generado);  \n            if(generado){\n              enviarCorreo_2(miOP.id, miOP?.fideicomisos[0]?.nombre, miOP.numero, miOP.empresas[0]?.razonSocial, miOP.empresas[0]?.enviar_OP_auto, idSociety)\n              setOpen(true);\n              \n            }\n\n      } \n      \n    } catch (error) {\n      console.log(error);\n    }\n  }\n\n}\n\nasync function getPdfBlob_2(NewDocument, idOP, fideicomiso, numero, nom_empresa, idSociety){\n\n  \n  var fileName= numero + \" OP-\" + fideicomiso + \"-\" +  nom_empresa + \".pdf\";\n  let blobPdf = await pdf(NewDocument()).toBlob();\n  let formData = new FormData();\n  formData.append('logo', blobPdf);\n  formData.append('id', idOP);\n  formData.append('fideicomiso', fideicomiso);\n  formData.append('numero', numero);\n  formData.append('nombreArchivo', fileName);\n  formData.append('archivada', 1);    \n  let rta = await postMethod(`op/modificar/${idSociety.id}`, formData);\n  return !!rta\n}\n\nasync function enviarCorreo_2(idOP, fideicomiso, numero, razonSocial, enviar_OP_auto, idSociety){\n\n  let rta = await postMethod(`OP/enviarMail/${idSociety?.id}`, {\n\n    mailTo : idSociety?.mailOP,\n    mailaccount : idSociety?.mailaccount,\n    mailfromname : idSociety?.mailfromname,\n    mailConstructora : idSociety?.mailConstructora,\n    fideicomiso : fideicomiso,        \n    razonSocial : razonSocial,\n    enviar_OP_auto : enviar_OP_auto,\n    numero : numero,\n    id : idOP,\n\n  })\n  return !!rta\n}\n\n\nfunction CustomToolbar() {\n  return (\n    <GridToolbarContainer>\n\n      <GridToolbarExport csvOptions={{ fields: ['createdAt', 'fideicomiso', 'numero','empresa','monto','moneda','RET_SUSS','RET_GAN','RET_IVA','fondos_','retencion', 'aprobado_obra', 'aprobado_adm', 'estado', 'fondos_', 'rubro', 'subrubro','descripcion'] }} />\n      \n    </GridToolbarContainer>\n  );\n}\n\nfunction IrDetalleOP_1(params) {\n\n  const sendRow = params.row.onIrDetalle;\n  const fideicomiso = params.row.fideicomiso;\n  return <Button onClick={sendRow} >{fideicomiso}  </Button>;\n} \n\nfunction IrDetalleOP_2(params) {\n  const sendRow = params.row.onIrDetalle;  \n  const numero = params.row.numero;\n  return <Button onClick={sendRow} >{numero}  </Button>;\n} \n\n\nfunction ComboBox({ rubros, props }) {\n  const { id, api, field } = props;\n\n  rubros = [\n    ...rubros,\n    {\n      rubro: '',\n    },\n  ];\n  const [selectedRubro, setSelectedRubro] = useState({\n    rubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRubro}\n      onChange={async (event, newValue) => {\n        \n        setSelectedRubro(newValue);\n     \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      //disablePortal\n      id=\"combo-box-demo\"\n      options={rubros}\n      isOptionEqualToValue={(op, val) => op.rubro === val.rubro}\n      getOptionLabel={option => option.rubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Rubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxSub({ subRubros, props }, params) {\n  const { id, api, field } = props;\n  \n  subRubros = [\n    \n    ...subRubros.filter(subR => subR.rubroId === parseInt(props?.row?.rubroID.id)),\n    {\n      subRubro: '',\n    },\n  ];\n\n  const [selectedsubRubro, setSelectedsubRubro] = useState({\n    subRubro: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedsubRubro}\n      onChange={async (event, newValue) => {        \n        setSelectedsubRubro(newValue);       \n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }}\n      id=\"combo-box-demo\"\n      options={subRubros}\n      isOptionEqualToValue={(op, val) => op.subRubro === val.subRubro}\n      getOptionLabel={option => option.subRubro}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"subRubro\" />}\n    />\n  );\n}\n\nfunction ComboBoxRet({ retenciones, props }) {\n  const { id, api, field } = props;\n\n  retenciones = [\n    ...retenciones,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedRet, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  return (\n    <Autocomplete\n      value={selectedRet}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue);    \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={retenciones}\n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Retencion\" />}\n    />\n  );\n}\n\nfunction ComboBoxEst({ estados, props }) {\n  const { id, api, field } = props;\n\n  estados = [\n    ...estados,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedEst, setSelectedRol] = useState({\n    descripcion: '',\n  });\n\n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.estadoOP.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n\n  return (\n    <Autocomplete\n      value={selectedEst}\n      onChange={async (event, newValue) => {        \n        setSelectedRol(newValue); \n   \n        if(newValue?.id){\n          api.setEditCellValue({ id, field, value: newValue.id }, event);\n          await props.api.commitCellChange({ id, field });\n          api.setCellMode(id, field, 'view');\n        }\n      }}\n      id=\"combo-box-demo\"\n      options={estados}      \n      isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n      getOptionLabel={option => option.descripcion}\n      sx={{ width: 300 }}\n      renderInput={params => <TextField {...params} label=\"Estado\" />}\n    />\n  );\n    }\n}\n\nfunction ComboBoxFon({fondos_s, props}) {\n  const { id, api, field } = props;\n\n  fondos_s = [\n    ...fondos_s,\n    {\n      descripcion: '',\n    },\n  ];\n  const [selectedFon, setSelectedRol] = useState({\n    descripcion: '',\n  });\n  \n  if(props.row.confirmada){\n    return (\n      <TextField defaultValue={props.row.fondos.descripcion }  \n      InputProps={{\n       readOnly: true,\n     }}\n    />)\n  }else{\n    return (<Autocomplete\n    value={selectedFon}\n    \n    onChange={async (event, newValue) => {\n      setSelectedRol(newValue); \n      if(newValue?.id > 0){\n        api.setEditCellValue({ id, field, value: newValue.id }, event);\n        await props.api.commitCellChange({ id, field });\n        api.setCellMode(id, field, 'view');\n      }\n    }}\n\n    id=\"combo-box-demo\"\n    options={fondos_s}\n    isOptionEqualToValue={(op, val) => op.descripcion === val.descripcion}\n    getOptionLabel={option => option.descripcion}\n    sx={{ width: 300 }}\n    renderInput={params => <TextField {...params} label=\"Fondos\" />}\n  />)\n  }\n}\n\nfunction NonObraAuthRow(params) {\n  \n  const authRow = params.row.onAuthObra;\n  const apr_obra = params.row.apr_obra;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Obra\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_obra !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_obra}  </Button>;\n    }else{\n      let str = \"\" + apr_obra;\n      return \"\" + str.toUpperCase();\n    }\n  }else{\n    return \"\"\n  }\n} \n\nfunction NonAdmAuthRow(params) {\n\n  const authRow = params.row.onAuthAdm;  \n  const apr_adm = params.row.apr_adm;\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            authRow();\n            closeToast();\n          }}>Desaprobar Adm\n        </Button>\n      </Box>\n    ));\n  \n  if(apr_adm !== \"\"){\n    if(params.row.acceso ==='total'){\n      return <Button onClick={notify} >{apr_adm}  </Button>;\n    }else{\n      let str = \"\" + apr_adm;\n      return \"\" + str.toUpperCase();\n    }\n   \n  }else{\n    return \"\"\n  }\n\n} \n\nfunction DescargarPDF(params) {  \n  \n  var cargarOP = params.row.cargarOP;\n  const fideicomiso = params.row.fideicomiso;\n  const nom_empresa = params.row.empresa;\n  const numero = params.row.numero;\n  \n  var fileName= numero + \" OP-\" + fideicomiso + \"-\" +  nom_empresa + \".pdf\";\n\n  const archivada = params.row.archivada;\n  const apiServerUrl = process.env.REACT_APP_API_SERVER;\n\n  \n  const notify = () =>{\n    \n    cargarOP();\n    \n    setTimeout(() => {\n    \n        toast(({ closeToast}) => (\n          \n          <Box>\n            <Button\n              sx={{ p: 1, m: 1 }}\n              variant='contained'\n              color='secondary'\n              size='small'\n              onClick={closeToast}>\n              \n              Cancelar\n            </Button>\n\n            <PDFDownloadLink document={<RepOp dataOP={miOP} dataFacturas={fa} apiServerUrl={apiServerUrl} idSociedad={idSociedad} />} fileName={fileName} >\n              {({ blob, url, loading, error }) => {\n          \n                return (loading ? 'Loading document...' : 'Descargar')}\n              }\n            </PDFDownloadLink> \n\n            \n          </Box>\n        )) \n      }, 800);\n    };\n  \n  if(archivada === 0){\n    return <Button onClick={notify} >Para Generar</Button>;\n  }else{\n    return <Button onClick={notify} >Generada</Button>;    \n  }\n\n} \n\nfunction EnviarMail(params) {\n\n  const enviar = params.row.onEnviar;  \n  const enviada = params.row.enviada;\n  const archivada = params.row.archivada;\n\n  const notify = () =>\n    toast(({ closeToast }) => (\n      <Box>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={closeToast}>\n          Cancelar\n        </Button>\n        <Button\n          sx={{ p: 1, m: 1 }}\n          variant='contained'\n          color='secondary'\n          size='small'\n          onClick={() => {\n            enviar();\n            closeToast();\n          }}>Enviar\n        </Button>\n      </Box>\n    ));\n  \n    if(archivada === 0){\n      return \"\";\n    }else{\n      if(enviada === 0){\n        return <Button onClick={notify} >Enviar</Button>;\n      \n      }else{\n        return <Button onClick={notify} >Re enviar</Button>;\n      }   \n    }\n  \n} \n\n","import { Container, Box, Hidden } from '@mui/material';\nimport { useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { ManipularOC } from 'src/components/OC/ManipularOC';\nimport { FiltroOC } from 'src/components/OC/FiltroOC';\nimport { GrillaOC } from 'src/components/OC/GrillaOC';\nimport { useQuery } from 'react-query';\nimport { getMethod } from 'src/utils/api';\n\nexport function OC({ idSociety, loggedUser }) {\n\n  var blue = 0;\n  if(loggedUser?.['rol.op'] ==='total'){blue= -1;}\n\n  const {\n    data: opInformation,\n    isLoading,\n    error,\n    // refetch\n  } = useQuery(['OC', idSociety], () => getMethod(`OC/listar/${idSociety.id}/todas`));\n\n\n  const { data: fideicomisos } = useQuery(\n    ['fideicomisos'],\n    () => getMethod(`fideicomiso/listar/${idSociety.id}`));\n\n\n  const { data: proveedores } = useQuery(\n    ['proveedores'],\n    () => getMethod(`proveedor/listar/${idSociety.id}`));\n\n\n  const [filtFide, setFiltFide] = useState(-1);\n  const [filtRS, setFiltRS] = useState(-1);\n\n  /*\n         <Box sx={{ pt: 3 }}>\n            <FiltroOC idSociety={idSociety}  loggedUser={loggedUser} \n            fideicomisos={fideicomisos}  setFiltFide={setFiltFide} setFiltRS={setFiltRS} setFiltEst={setFiltEst} proveedores={proveedores} ddfacturas={ddfacturas} ddfacturasBlue={ddfacturasBlue}\n            />\n          </Box>\n\n\n          <Box sx={{ pt: 3 }}>\n            <GrillaOC idSociety={idSociety}  loggedUser={loggedUser} opInformation={opInformation} filtFide={filtFide} filtRS={filtRS} filtEst={filtEst}  isLoading={isLoading}  error={error} />\n          </Box>*/\n  \n  return (\n    <>\n      <Helmet>\n        <title>OP's | TSF Desarrollos</title>\n      </Helmet>\n      <Box\n        sx={{\n          backgroundColor: 'background.default',\n          minHeight: '100%',\n          py: 3,\n        }}>\n        <Container maxWidth={false}>\n          <Hidden smUp={(loggedUser?.['rol.factura'] ==='vista')} >\n            <Box sx={{ pt: 3 }}>\n              <ManipularOC idSociety={idSociety}  loggedUser={loggedUser} fideicomisos={fideicomisos} proveedores={proveedores} />\n            </Box>\n          </Hidden>\n\n   \n        </Container>\n      </Box>\n    </>\n  );\n}\n\n","import { useState, createContext } from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport dotenv from 'dotenv';\n\nimport { ThemeProvider } from '@mui/material/styles';\nimport GlobalStyles from 'src/components/auxiliares/GlobalStyles';\nimport theme from 'src/theme';\n\n// *** Generales *********************************\n\nimport DashboardLayout from 'src/components/auxiliares/DashboardLayout';\nimport MainLayout from 'src/components/auxiliares/MainLayout';\nimport { Login } from 'src/pages/Login';\nimport NotFound from 'src/pages/NotFound';\nimport { useAuth } from 'src/utils/useAuth';\n\n// *** Auxiliares *********************************\nimport { Dolar } from 'src/pages/Dolar';\nimport { Cac } from 'src/pages/Cac';\nimport { Rubro } from 'src/pages/Rubro';\nimport { SubRubro } from 'src/pages/SubRubro';\nimport { Banco } from 'src/pages/Banco';\nimport { CuentaBanco } from 'src/pages/CuentaBanco';\n\n// *** Maestros *********************************\nimport { Usuarios } from 'src/pages/Usuarios';\nimport { Proveedores } from 'src/pages/Proveedores';\nimport { Persona } from 'src/pages/Persona';\nimport { Empresa } from 'src/pages/Empresa';\n\n// *** Fide *********************************\nimport { Fideicomiso } from 'src/pages/Fideicomiso';\nimport { DetalleFideicomiso } from 'src/pages/DetalleFideicomiso';\n\n// *** Contrato *********************************\n//import { Contratos } from 'src/pages/Contratos';\n//import { ContratoAlta } from 'src/pages/ContratoAlta';\n//import { Cobros } from 'src/pages/Cobros';\n//import { Cuotas } from 'src/pages/Cuotas';\n//import { DetalleContrato } from 'src/pages/DetalleContrato';\n//import { ContratoVista } from 'src/pages/ContratoVista';\n\n// *** Pagos *********************************\nimport { OP } from 'src/pages/OP';\nimport { AuthAdmOP } from 'src/pages/AuthAdmOP';\nimport { AuthObraOP } from 'src/pages/AuthObraOP';\nimport { DetalleOP } from 'src/pages/DetalleOP';\nimport { Factura } from 'src/pages/Factura';\n\n// *** Orden de Trabajo **********************\nimport { OC } from 'src/pages/OC';\n//import { DetalleOT } from 'src/pages/DetalleOT';\n//import { Certificado } from 'src/pages/Certificado';\n\nexport const SocietyContext = createContext({});\ndotenv.config();\n\nexport default function App() {\n  const { loggedUser, setLoggedUser } = useAuth();\n  const [idSociety, setIdSociety] = useState(() => {\n    const localStorageIdSociety = localStorage.getItem('idSociety');\n    return localStorageIdSociety ? JSON.parse(localStorageIdSociety) : null;\n  });\n\n  return (\n\n    <SocietyContext.Provider value={idSociety}>\n\n    \n    <ThemeProvider theme={theme}>\n      <GlobalStyles />\n      <Routes>\n        {loggedUser ? (\n          <>\n            \n            <Route path=\"/\" element={<Navigate to={`${idSociety?.nombre}`} />} />\n            <Route\n              path=\":societyName\"\n              element={\n                <DashboardLayout\n                \n                  setLoggedUser={setLoggedUser}\n                  idSociety={idSociety}\n                  loggedUser={loggedUser}\n                />\n              }\n            >\n              <Route path=\"dolar\" element={<Dolar idSociety={idSociety} loggedUser={loggedUser}  />} />\n              <Route path=\"cac\" element={<Cac idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"OC\" element={<OC idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"empresa\" element={<Empresa idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              <Route path=\"persona\" element={<Persona idSociety={idSociety}  loggedUser={loggedUser}  />} />\n\n              <Route path=\"factura\">\n                <Route path=\"\" element={<Factura idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:auth_adm/:auth_obra/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"OP\">\n                <Route path=\"\" element={<OP idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:auth_adm/:auth_obra/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"AuthAdmOP\">\n                <Route path=\"\" element={<AuthAdmOP idSociety={idSociety}  loggedUser={loggedUser} />}  />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:auth_adm/:auth_obra/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"AuthObraOP\">\n                <Route path=\"\" element={<AuthObraOP idSociety={idSociety}  loggedUser={loggedUser} />}  />\n                <Route\n                  path=\":idOP/:fecha/:empresaId/:numero/:fideicomiso/:estadoOP/:auth_adm/:auth_obra/:confirmada/:blue\"\n                  element={<DetalleOP idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n\n              \n              <Route path=\"proveedores\" element={<Proveedores idSociety={idSociety}   loggedUser={loggedUser} />} />\n              <Route path=\"usuarios\" element={<Usuarios idSociety={idSociety}  loggedUser={loggedUser}  />} />\n              \n              <Route path=\"rubro\"> \n                <Route path=\"\" element={<Rubro idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idRubro/:rubro\"\n                  element={<SubRubro idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              <Route path=\"banco\"> \n                <Route path=\"\" element={<Banco idSociety={idSociety} loggedUser={loggedUser} />} />\n                <Route\n                  path=\":idBanco/:banco\"\n                  element={<CuentaBanco idSociety={idSociety} loggedUser={loggedUser} />}\n                />\n              </Route>\n\n              \n              <Route path=\"fideicomiso\">\n                <Route path=\"\" element={<Fideicomiso idSociety={idSociety}  loggedUser={loggedUser}  />} />\n                <Route\n                  path=\":nombreFideicomiso\"\n                  element={<DetalleFideicomiso idSociety={idSociety}   loggedUser={loggedUser}  />}\n                />\n              </Route>\n              <Route path=\"*\" element={<NotFound />} />\n            </Route>\n            \n          </>\n        ) : (\n          <MainLayout>\n            <Route\n              path=\":societyName/login\"\n              element={\n                <Login\n                  setLoggedUser={setLoggedUser}\n                  setIdSociety={setIdSociety}\n                />\n              }\n            />\n            <Route path=\":societyName\" element={<Navigate to=\"login\" />} />\n            <Route path=\"*\" element={<Navigate to=\"/\" />} />\n          </MainLayout>\n        )}\n      </Routes>\n    </ThemeProvider>\n    </SocietyContext.Provider>\n    \n  )}\n","import { useEffect, useState } from 'react';\n\nexport function useAuth() {\n  const [loggedUser, setLoggedUser] = useState(() => {\n    const localStorageLoggedUserInfo = localStorage.getItem('loggedUserInfo');\n    return localStorageLoggedUserInfo ? JSON.parse(localStorageLoggedUserInfo) : null;\n  });\n  useEffect(() => {\n    localStorage.setItem('loggedUserInfo', JSON.stringify(loggedUser));\n  }, [loggedUser]);\n\n  return { loggedUser, setLoggedUser };\n}\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { QueryClient, QueryClientProvider } from 'react-query';\nimport App from './App';\n\nconst queryClient = new QueryClient();\n\nReactDOM.render(\n  \n  <BrowserRouter>\n    <QueryClientProvider client={queryClient}>\n      <App />\n    </QueryClientProvider>\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}